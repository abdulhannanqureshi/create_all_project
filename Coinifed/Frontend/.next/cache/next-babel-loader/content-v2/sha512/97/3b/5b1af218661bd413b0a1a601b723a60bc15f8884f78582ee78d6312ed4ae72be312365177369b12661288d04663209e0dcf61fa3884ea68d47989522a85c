{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport create from 'zustand';\nimport actions from './Action';\nconst initialState = {\n  tokenStatus: false,\n  cartLength: 0\n};\nexport const useStore = create((set, get) => _objectSpread(_objectSpread({}, initialState), actions(set, get)));","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/store/index.js"],"names":["React","create","actions","initialState","tokenStatus","cartLength","useStore","set","get"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,KADI;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,OAAO,MAAMC,QAAQ,GAAGL,MAAM,CAAC,CAACM,GAAD,EAAMC,GAAN,qCACxBL,YADwB,GAExBD,OAAO,CAACK,GAAD,EAAMC,GAAN,CAFiB,CAAD,CAAvB","sourcesContent":["import React from 'react';\r\nimport create from 'zustand'\r\nimport actions from './Action'\r\nconst initialState = {\r\n    tokenStatus: false,\r\n    cartLength: 0\r\n}\r\n\r\nexport const useStore = create((set, get) => ({\r\n    ...initialState,\r\n    ...actions(set, get)\r\n}))\r\n\r\n"]},"metadata":{},"sourceType":"module"}