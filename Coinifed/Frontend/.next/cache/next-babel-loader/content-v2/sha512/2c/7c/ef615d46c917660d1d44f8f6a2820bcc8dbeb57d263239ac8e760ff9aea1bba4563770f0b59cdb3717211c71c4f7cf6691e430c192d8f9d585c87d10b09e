{"ast":null,"code":"import _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\SignupSimple\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport clsx from \"clsx\";\nimport { LearnMoreLink } from \"components/atoms\";\nimport { Modal } from \"components/common\";\nimport Toast from \"components/toaster\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport validate from \"validate.js\";\nimport Link from 'next/link';\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport { ApiHelper } from \"../../../../helper\";\nimport Loader from \"../../../../components/common/Loader/loader\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  link: {\n    color: \"#3f51b5\",\n    cursor: \"pointer\",\n    fontWeight: \"600\"\n  },\n  commonBtn: {\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  cusTextPrimary: {\n    \"& .MuiTypography-colorPrimary\": {\n      color: \"#5120ff\"\n    }\n  },\n  modalNoneTriggerText: {\n    marginRight: \"5px\",\n    fontWeight: \"500\",\n    verticalAlign: \"middle\",\n    paddingRight: \"17px\",\n    marginLeft: \"-14px\"\n  },\n  modalTriggerLable: {\n    marginLeft: \"-16px\",\n    cursor: \"pointer\",\n    color: \"#5120ff\",\n    fontWeight: \"500\",\n    verticalAlign: \"middle\"\n  },\n  eyeWrapper: {\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    lineHeight: \"10px\",\n    right: 20,\n    cursor: \"pointer\",\n    \"& svg\": {\n      fill: \"#5120ff\"\n    }\n  },\n  negativeMarginTop: {\n    marginTop: \"-2px\"\n  },\n  marginNegative: {\n    marginTop: \"-28px\"\n  },\n  listings: {\n    marginLeft: \"15px\"\n  },\n  modalTitle: {\n    fontSize: \"18px\",\n    marginBottom: \"-15px\"\n  },\n  modalHeading: {\n    fontSize: \"18px\",\n    marginTop: \"15px\",\n    marginBottom: \"8px\"\n  },\n  positionRelative: {\n    position: \"relative\"\n  },\n  errorText: {\n    color: 'red',\n    fontSize: \"14px\"\n  },\n  loader: {\n    display: \"flex\",\n    minHeight: \"200px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst userRoles = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Student\",\n  label: \"Student\"\n}, {\n  value: \"Corporate Employee\",\n  label: \"Corporate Employee\"\n}];\n\nconst Form = props => {\n  _s();\n\n  const {\n    cmsData,\n    universityData,\n    corporateData\n  } = props;\n  const classes = useStyles();\n  const router = useRouter();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }); ///Schema starts here\n\n  const schema = {\n    email: {\n      presence: {\n        allowEmpty: false,\n        message: \"is required\"\n      },\n      email: true,\n      length: {\n        maximum: 40\n      }\n    },\n    firstName: {\n      presence: {\n        allowEmpty: false,\n        message: \"is required\"\n      },\n      length: {\n        maximum: 25,\n        minimum: 3\n      }\n    },\n    lastName: {\n      presence: {\n        allowEmpty: false,\n        message: \"is required\"\n      },\n      length: {\n        maximum: 25,\n        minimum: 3\n      }\n    },\n    userRole: {\n      presence: {\n        allowEmpty: false,\n        message: \"is required\"\n      }\n    },\n    university: {\n      presence: formState.values.userRole === \"Student\" ? {\n        allowEmpty: false,\n        message: \"is required\"\n      } : {\n        allowEmpty: true\n      }\n    },\n    corporation: {\n      presence: formState.values.userRole === \"Corporate Employee\" ? {\n        allowEmpty: false,\n        message: \"is required\"\n      } : {\n        allowEmpty: true\n      }\n    },\n    password: {\n      presence: {\n        allowEmpty: false,\n        message: \"is required\"\n      },\n      length: {\n        minimum: 8,\n        maximum: 20\n      }\n    }\n  }; ///Schema ends here\n\n  const [doNotSell, setDoNotSell] = React.useState(false);\n  const [templeteCheckboxes, setTempleteCheckboxes] = React.useState({\n    termsConditions: true,\n    privacyPolicy: true\n  });\n  const [modalState, setModalState] = React.useState(false);\n  const [modalOneState, setModalOneState] = React.useState(false);\n  const [modalTwoState, setModalTwoState] = React.useState(false);\n  const [eyeStatus, setEyeStatus] = React.useState(true); // For Get Do not sell Modal Content\n\n  const {\n    0: getTemplateData,\n    1: setGetTemplateData\n  } = useState(null);\n  const {\n    0: termsNcondtionData,\n    1: setTermsNcondtionData\n  } = useState(null);\n  const {\n    0: privayPolicyData,\n    1: setPrivacyPolicyData\n  } = useState(null);\n  const {\n    0: disableState,\n    1: setDisableState\n  } = useState(true); // For Get Template Data\n\n  useEffect(() => {\n    if (cmsData && cmsData.length) {\n      let getData = cmsData.filter(e => e.pageName === \"Do Not Sell\");\n      setGetTemplateData(...getData);\n      let termsConditionData = cmsData.filter(e => e.pageName === \"Terms And Condition\");\n      setTermsNcondtionData(...termsConditionData);\n      let privacyPolicyData = cmsData.filter(e => e.pageName === \"Privacy Policy\");\n      setPrivacyPolicyData(...privacyPolicyData);\n    }\n  }, [cmsData]);\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n  React.useEffect(() => {\n    const {\n      userRole\n    } = formState.values;\n\n    if (userRole === \"Student\") {\n      // getUniversityData();\n      setFormState(prevFormstate => _objectSpread(_objectSpread({}, prevFormstate), {}, {\n        values: _objectSpread(_objectSpread({}, prevFormstate.values), {}, {\n          corporation: \"\"\n        })\n      }));\n    } else if (userRole === \"Corporate Employee\") {\n      // getCorporateData();\n      setFormState(prevFormstate => _objectSpread(_objectSpread({}, prevFormstate), {}, {\n        values: _objectSpread(_objectSpread({}, prevFormstate.values), {}, {\n          university: \"\"\n        })\n      }));\n    } else if (userRole === \"Individual\") {\n      setFormState(prevFormstate => _objectSpread(_objectSpread({}, prevFormstate), {}, {\n        values: _objectSpread(_objectSpread({}, prevFormstate.values), {}, {\n          corporation: \"\",\n          university: \"\"\n        })\n      }));\n    }\n  }, [formState.values.userRole]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      setIsLoading(true);\n      const data = {\n        firstName: formState.values.firstName,\n        lastName: formState.values.lastName,\n        email: formState.values.email,\n        password: formState.values.password,\n        role: formState.values.userRole,\n        university: formState.values.university,\n        corporate: formState.values.corporation,\n        doNotSell: doNotSell\n      };\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.SIGNUP.service, ApiRoutes.SIGNUP.url, ApiRoutes.SIGNUP.method, ApiRoutes.SIGNUP.authenticate, undefined, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.data.message\n        });\n\n        if (props.categoryId && props.categoryId !== \"\") {\n          props.setSignUpOpen(false);\n          setIsLoading(false); //props.handleAuthModalClose()\n        } else {\n          router.push(\"/signin\");\n        }\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.messages[0]\n        });\n        setIsLoading(false);\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const handleCheckboxChange = event => {\n    setDoNotSell(event.target.checked);\n  };\n\n  const handleCheckboxChange1 = e => {\n    setTempleteCheckboxes(_objectSpread(_objectSpread({}, templeteCheckboxes), {}, {\n      [e.target.name]: e.target.checked\n    }));\n  };\n\n  useEffect(() => {\n    if (templeteCheckboxes.privacyPolicy && templeteCheckboxes.termsConditions) {\n      setDisableState(false);\n    } else {\n      setDisableState(true);\n    }\n  }, [templeteCheckboxes]);\n\n  const modalTriggering = () => {\n    setModalState(true);\n  };\n\n  const modalTriggering1 = () => {\n    setModalOneState(true);\n  };\n\n  const modalTriggering2 = () => {\n    setModalTwoState(true);\n  };\n\n  const handleClose = () => {\n    setModalState(false);\n  };\n\n  const handleClose1 = () => {\n    setModalOneState(false);\n  };\n\n  const handleClose2 = () => {\n    setModalTwoState(false);\n  };\n\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(React.Fragment, null, isLoading ? __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  }) : null, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    placeholder: \"First name\",\n    label: \"First name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"firstName\",\n    fullWidth: true,\n    helpertext: hasError(\"firstName\") ? formState.errors.firstName[0] : null,\n    error: hasError(\"firstName\"),\n    onChange: handleChange,\n    type: \"firstName\",\n    value: formState.values.firstName || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }), hasError(\"firstName\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 19\n    }\n  }, formState.errors.firstName[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Last name\",\n    label: \"Last name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"lastName\",\n    fullWidth: true,\n    helpertext: hasError(\"lastName\") ? formState.errors.lastName[0] : null,\n    error: hasError(\"lastName\"),\n    onChange: handleChange,\n    type: \"lastName\",\n    value: formState.values.lastName || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }), hasError(\"lastName\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 19\n    }\n  }, formState.errors.lastName[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-select-currency-native\",\n    select: true,\n    size: \"medium\",\n    name: \"userRole\",\n    fullWidth: true,\n    label: \"\",\n    value: formState.values.userRole,\n    onChange: handleChange,\n    SelectProps: {\n      native: true\n    },\n    helpertext: hasError(\"userRole\") ? formState.errors.userRole[0] : null,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, \"Please select Type\"), userRoles && userRoles.length ? userRoles.map((option, index) => __jsx(\"option\", {\n    key: index,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 21\n    }\n  }, option.label)) : null), hasError(\"userRole\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 19\n    }\n  }, formState.errors.userRole[0]) : null), formState.values.userRole === \"Student\" ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-select-currency-native\",\n    select: true,\n    size: \"medium\",\n    name: \"university\",\n    fullWidth: true,\n    value: formState.values.university,\n    onChange: handleChange,\n    SelectProps: {\n      native: true\n    },\n    helpertext: hasError(\"university\") ? formState.errors.university[0] : null,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 19\n    }\n  }, \"Please select University\"), universityData.map((option, index) => __jsx(\"option\", {\n    key: index,\n    value: option.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 21\n    }\n  }, option.name))), hasError(\"university\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 21\n    }\n  }, formState.errors.university[0]) : null) : \"\", formState.values.userRole === \"Corporate Employee\" ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-select-currency-native\",\n    select: true,\n    size: \"medium\",\n    name: \"corporation\",\n    fullWidth: true,\n    value: formState.values.corporation,\n    onChange: handleChange,\n    SelectProps: {\n      native: true\n    },\n    helpertext: hasError(\"corporation\") ? formState.errors.corporation[0] : null,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }\n  }, \"Please select Corporate\"), corporateData.map((option, index) => __jsx(\"option\", {\n    key: option.index,\n    value: option.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 21\n    }\n  }, option.name))), hasError(\"corporation\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 21\n    }\n  }, formState.errors.corporation[0]) : null) : \"\", __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    placeholder: \"E-mail\",\n    label: \"E-mail *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helpertext: hasError(\"email\") ? formState.errors.email[0] : null,\n    error: hasError(\"email\"),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 15\n    }\n  }), hasError(\"email\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 19\n    }\n  }, formState.errors.email[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: classes.positionRelative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Password\",\n    label: \"Password *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"password\",\n    fullWidth: true,\n    helpertext: hasError(\"password\") ? formState.errors.password[0] : null,\n    error: hasError(\"password\"),\n    onChange: handleChange,\n    type: eyeStatus ? \"password\" : \"text\",\n    value: formState.values.password || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 17\n    }\n  }), eyeStatus ? __jsx(Box, {\n    className: clsx(classes.eyeWrapper, classes.eyeOff),\n    onClick: () => setEyeStatus(!eyeStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 19\n    }\n  }, __jsx(VisibilityOffIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 21\n    }\n  })) : __jsx(Box, {\n    className: clsx(classes.eyeWrapper, classes.eyeVisible),\n    onClick: () => setEyeStatus(!eyeStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 19\n    }\n  }, __jsx(VisibilityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 21\n    }\n  })), hasError(\"password\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 21\n    }\n  }, formState.errors.password[0]) : null)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: handleCheckboxChange,\n      name: \"doNotSell\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: classes.modalTriggerLable,\n    onClick: modalTriggering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 15\n    }\n  }, \"Do not sell my personal information.\"), __jsx(Modal, {\n    fullWidth: true,\n    open: modalState,\n    handleClose: handleClose,\n    iFrame: true,\n    title: __jsx(\"h4\", {\n      className: classes.modalTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 24\n      }\n    }, \"MY DATA RIGHTS\"),\n    content: getTemplateData && getTemplateData.content.length ? ReactHtmlParser(getTemplateData.content) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.marginNegative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: handleCheckboxChange1,\n      name: \"privacyPolicy\",\n      color: \"primary\",\n      checked: templeteCheckboxes.privacyPolicy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: classes.modalNoneTriggerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 17\n    }\n  }, \"I accept\"), __jsx(\"span\", {\n    className: classes.modalTriggerLable,\n    onClick: modalTriggering1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 15\n    }\n  }, \"privacy policy\"), __jsx(Modal, {\n    fullWidth: true,\n    open: modalOneState,\n    handleClose: handleClose1,\n    iFrame: true // title={<h4 className={classes.modalTitle}>Privacy Policy</h4>}\n    ,\n    content: privayPolicyData && privayPolicyData.content.length ? ReactHtmlParser(privayPolicyData.content) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.marginNegative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: handleCheckboxChange1,\n      name: \"termsConditions\",\n      color: \"primary\",\n      checked: templeteCheckboxes.termsConditions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: classes.modalNoneTriggerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 15\n    }\n  }, \"I have read and understood\"), __jsx(\"span\", {\n    className: classes.modalTriggerLable,\n    onClick: modalTriggering2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 15\n    }\n  }, \"terms and conditions.\"), __jsx(Modal, {\n    fullWidth: true,\n    open: modalTwoState,\n    handleClose: handleClose2,\n    iFrame: true // title={<h4 className={classes.modalTitle}></h4>}\n    ,\n    content: termsNcondtionData && termsNcondtionData.content.length ? ReactHtmlParser(termsNcondtionData.content) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 17\n    }\n  }, \"Fields that are marked with an asterisk (*) sign are required.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    disabled: disableState,\n    type: \"submit\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.commonBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 15\n    }\n  }, \"Sign Up\")), props.setSignUpOpen ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 19\n    }\n  }, \"Already have an account?\"), __jsx(\"span\", {\n    onClick: () => props.setSignUpOpen(false),\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 19\n    }\n  }, \"\\xA0 Sign In\"))) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 17\n    }\n  }, \"Already have an account?\", \" \", __jsx(Link, {\n    href: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 19\n    }\n  }, __jsx(\"a\", {\n    className: classes.authLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 21\n    }\n  }, __jsx(LearnMoreLink, {\n    title: \"Sign in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 23\n    }\n  })))))))));\n};\n\n_s(Form, \"TIB3O26PItqHPa/w2VEwzvoNtEg=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/SignupSimple/components/Form/Form.js"],"names":["Box","Button","Checkbox","FormControlLabel","Grid","makeStyles","TextField","Typography","VisibilityIcon","VisibilityOffIcon","clsx","LearnMoreLink","Modal","Toast","useRouter","React","useEffect","useState","ReactHtmlParser","validate","Link","ApiRoutes","ApiHelper","Loader","useStyles","theme","root","width","link","color","cursor","fontWeight","commonBtn","padding","backgroundColor","fontSize","border","textAlign","transition","boxShadow","cusTextPrimary","modalNoneTriggerText","marginRight","verticalAlign","paddingRight","marginLeft","modalTriggerLable","eyeWrapper","position","top","transform","lineHeight","right","fill","negativeMarginTop","marginTop","marginNegative","listings","modalTitle","marginBottom","modalHeading","positionRelative","errorText","loader","display","minHeight","justifyContent","alignItems","userRoles","value","label","Form","props","cmsData","universityData","corporateData","classes","router","formState","setFormState","isValid","values","touched","errors","schema","email","presence","allowEmpty","message","length","maximum","firstName","minimum","lastName","userRole","university","corporation","password","doNotSell","setDoNotSell","templeteCheckboxes","setTempleteCheckboxes","termsConditions","privacyPolicy","modalState","setModalState","modalOneState","setModalOneState","modalTwoState","setModalTwoState","eyeStatus","setEyeStatus","getTemplateData","setGetTemplateData","termsNcondtionData","setTermsNcondtionData","privayPolicyData","setPrivacyPolicyData","disableState","setDisableState","getData","filter","e","pageName","termsConditionData","privacyPolicyData","prevFormstate","handleChange","event","persist","target","name","type","checked","handleSubmit","preventDefault","setIsLoading","data","role","corporate","response","FetchFromServer","SIGNUP","service","url","method","authenticate","undefined","isError","fire","icon","title","categoryId","setSignUpOpen","push","messages","handleCheckboxChange","handleCheckboxChange1","modalTriggering","modalTriggering1","modalTriggering2","handleClose","handleClose1","handleClose2","isLoading","hasError","field","native","map","option","index","eyeOff","eyeVisible","content","authLink"],"mappings":"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","sourcesContent":["import Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport clsx from \"clsx\";\r\nimport { LearnMoreLink } from \"components/atoms\";\r\nimport { Modal } from \"components/common\";\r\nimport Toast from \"components/toaster\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport validate from \"validate.js\";\r\nimport Link from 'next/link';\r\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\r\nimport { ApiHelper } from \"../../../../helper\";\r\nimport Loader from \"../../../../components/common/Loader/loader\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    color: \"#3f51b5\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"600\",\r\n  },\r\n  commonBtn: {\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  cusTextPrimary: {\r\n    \"& .MuiTypography-colorPrimary\": {\r\n      color: \"#5120ff\",\r\n    },\r\n  },\r\n  modalNoneTriggerText:\r\n  {\r\n    marginRight: \"5px\",\r\n    fontWeight: \"500\",\r\n    verticalAlign: \"middle\",\r\n    paddingRight: \"17px\",\r\n    marginLeft: \"-14px\"\r\n  },\r\n  modalTriggerLable: {\r\n    marginLeft: \"-16px\",\r\n    cursor: \"pointer\",\r\n    color: \"#5120ff\",\r\n    fontWeight: \"500\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n  eyeWrapper: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    lineHeight: \"10px\",\r\n    right: 20,\r\n    cursor: \"pointer\",\r\n    \"& svg\": {\r\n      fill: \"#5120ff\",\r\n    },\r\n  },\r\n  negativeMarginTop: {\r\n    marginTop: \"-2px\",\r\n  },\r\n  marginNegative:\r\n  {\r\n    marginTop: \"-28px\"\r\n  },\r\n  listings: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  modalTitle: {\r\n    fontSize: \"18px\",\r\n    marginBottom: \"-15px\",\r\n  },\r\n  modalHeading: {\r\n    fontSize: \"18px\",\r\n    marginTop: \"15px\",\r\n    marginBottom: \"8px\",\r\n  },\r\n  positionRelative: {\r\n    position: \"relative\",\r\n  },\r\n  errorText:\r\n  {\r\n    color: 'red',\r\n    fontSize: \"14px\"\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    minHeight: \"200px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst userRoles = [\r\n  {\r\n    value: \"Individual\",\r\n    label: \"Individual\",\r\n  },\r\n  {\r\n    value: \"Student\",\r\n    label: \"Student\",\r\n  },\r\n  {\r\n    value: \"Corporate Employee\",\r\n    label: \"Corporate Employee\",\r\n  },\r\n];\r\n\r\nconst Form = (props) => {\r\n \r\n  const { cmsData, universityData, corporateData } = props\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  ///Schema starts here\r\n  const schema = {\r\n    email: {\r\n      presence: { allowEmpty: false, message: \"is required\" },\r\n      email: true,\r\n      length: {\r\n        maximum: 40,\r\n      },\r\n    },\r\n    firstName: {\r\n      presence: { allowEmpty: false, message: \"is required\" },\r\n      length: {\r\n        maximum: 25,\r\n        minimum:3\r\n      },\r\n    },\r\n    lastName: {\r\n      presence: { allowEmpty: false, message: \"is required\" },\r\n      length: {\r\n        maximum: 25,\r\n        minimum:3\r\n      },\r\n    },\r\n    userRole: {\r\n      presence: { allowEmpty: false, message: \"is required\" },\r\n    },\r\n    university: {\r\n      presence: formState.values.userRole === \"Student\"  ? { allowEmpty: false, message: \"is required\" }:\r\n      {allowEmpty:true},\r\n    },\r\n    corporation: {\r\n      presence: formState.values.userRole === \"Corporate Employee\"  ? { allowEmpty: false, message: \"is required\" }:\r\n      {allowEmpty:true},\r\n    },\r\n  \r\n    password: {\r\n      presence: { allowEmpty: false, message: \"is required\" },\r\n      length: {\r\n        minimum: 8,\r\n        maximum:20\r\n      },\r\n    },\r\n  };\r\n  ///Schema ends here\r\n  const [doNotSell, setDoNotSell] = React.useState(false);\r\n  const [templeteCheckboxes, setTempleteCheckboxes] = React.useState({\r\n    termsConditions: true,\r\n    privacyPolicy: true\r\n  });\r\n  const [modalState, setModalState] = React.useState(false);\r\n  const [modalOneState, setModalOneState] = React.useState(false);\r\n  const [modalTwoState, setModalTwoState] = React.useState(false);\r\n  const [eyeStatus, setEyeStatus] = React.useState(true);\r\n\r\n  // For Get Do not sell Modal Content\r\n  const [getTemplateData, setGetTemplateData] = useState(null);\r\n  const [termsNcondtionData, setTermsNcondtionData] = useState(null);\r\n  const [privayPolicyData, setPrivacyPolicyData] = useState(null);\r\n  const [disableState, setDisableState] = useState(true)\r\n\r\n\r\n  // For Get Template Data\r\n  useEffect(() => {\r\n    if (cmsData && cmsData.length) {\r\n      let getData = cmsData.filter((e) => e.pageName === \"Do Not Sell\");\r\n      setGetTemplateData(...getData);\r\n      let termsConditionData = cmsData.filter((e) => e.pageName === \"Terms And Condition\")\r\n      setTermsNcondtionData(...termsConditionData)\r\n      let privacyPolicyData = cmsData.filter((e) => e.pageName === \"Privacy Policy\")\r\n      setPrivacyPolicyData(...privacyPolicyData);\r\n    }\r\n  }, [cmsData]);\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  React.useEffect(() => {\r\n    const { userRole } = formState.values;\r\n    if (userRole === \"Student\") {\r\n      // getUniversityData();\r\n      setFormState((prevFormstate) => ({\r\n        ...prevFormstate,\r\n        values: {\r\n          ...prevFormstate.values,\r\n          corporation: \"\",\r\n        },\r\n      }));\r\n    } else if (userRole === \"Corporate Employee\") {\r\n      // getCorporateData();\r\n      setFormState((prevFormstate) => ({\r\n        ...prevFormstate,\r\n        values: {\r\n          ...prevFormstate.values,\r\n          university: \"\",\r\n        },\r\n      }));\r\n    } else if (userRole === \"Individual\") {\r\n      setFormState((prevFormstate) => ({\r\n        ...prevFormstate,\r\n        values: {\r\n          ...prevFormstate.values,\r\n          corporation: \"\",\r\n          university: \"\",\r\n        },\r\n      }));\r\n    }\r\n  }, [formState.values.userRole]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formState.isValid) {\r\n      setIsLoading(true)\r\n      const data = {\r\n        firstName: formState.values.firstName,\r\n        lastName: formState.values.lastName,\r\n        email: formState.values.email,\r\n        password: formState.values.password,\r\n        role: formState.values.userRole,\r\n        university: formState.values.university,\r\n        corporate: formState.values.corporation,\r\n        doNotSell: doNotSell,\r\n      };\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.SIGNUP.service,\r\n        ApiRoutes.SIGNUP.url,\r\n        ApiRoutes.SIGNUP.method,\r\n        ApiRoutes.SIGNUP.authenticate,\r\n        undefined,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.data.message,\r\n        });\r\n        if (props.categoryId && props.categoryId !== \"\") {\r\n          props.setSignUpOpen(false);\r\n          setIsLoading(false)\r\n\r\n          //props.handleAuthModalClose()\r\n        } else {\r\n          router.push(\"/signin\");\r\n        }\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.messages[0],\r\n        });\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    setDoNotSell(event.target.checked);\r\n  };\r\n  const handleCheckboxChange1 = (e) => {\r\n\r\n    setTempleteCheckboxes({ ...templeteCheckboxes, [e.target.name]: e.target.checked });\r\n  }\r\n  useEffect(() => {\r\n    if (templeteCheckboxes.privacyPolicy && templeteCheckboxes.termsConditions) {\r\n      setDisableState(false)\r\n    }\r\n    else {\r\n      setDisableState(true)\r\n    }\r\n  }, [templeteCheckboxes])\r\n  const modalTriggering = () => {\r\n    setModalState(true);\r\n  };\r\n  const modalTriggering1 = () => {\r\n    setModalOneState(true);\r\n  };\r\n  const modalTriggering2 = () => {\r\n    setModalTwoState(true);\r\n  };\r\n  const handleClose = () => {\r\n    setModalState(false);\r\n  };\r\n  const handleClose1 = () => {\r\n    setModalOneState(false);\r\n  };\r\n  const handleClose2 = () => {\r\n    setModalTwoState(false);\r\n  };\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ? <Loader /> : null\r\n      }\r\n      <div className={classes.root}>\r\n        <form name='password-reset-form' method='post' onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                placeholder='First name'\r\n                label='First name *'\r\n                variant='outlined'\r\n                size='medium'\r\n                name='firstName'\r\n                fullWidth\r\n                helpertext={\r\n                  hasError(\"firstName\") ? formState.errors.firstName[0] : null\r\n                }\r\n                error={hasError(\"firstName\")}\r\n                onChange={handleChange}\r\n                type='firstName'\r\n                value={formState.values.firstName || \"\"}\r\n              />\r\n              {\r\n                hasError(\"firstName\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.firstName[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                placeholder='Last name'\r\n                label='Last name *'\r\n                variant='outlined'\r\n                size='medium'\r\n                name='lastName'\r\n                fullWidth\r\n                helpertext={\r\n                  hasError(\"lastName\") ? formState.errors.lastName[0] : null\r\n                }\r\n                error={hasError(\"lastName\")}\r\n                onChange={handleChange}\r\n                type='lastName'\r\n                value={formState.values.lastName || \"\"}\r\n              />\r\n              {\r\n                hasError(\"lastName\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.lastName[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id='outlined-select-currency-native'\r\n                select\r\n                size='medium'\r\n                name={\"userRole\"}\r\n                fullWidth\r\n                label=''\r\n                value={formState.values.userRole}\r\n                onChange={handleChange}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                helpertext={\r\n                  hasError(\"userRole\") ? formState.errors.userRole[0] : null\r\n                }\r\n                variant='outlined'\r\n              >\r\n                <option value={\"\"}>Please select Type</option>\r\n\r\n                {userRoles && userRoles.length ?\r\n                  userRoles.map((option, index) => (\r\n                    <option key={index} value={option.value}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))\r\n                  : null}\r\n              </TextField>\r\n              {\r\n                hasError(\"userRole\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.userRole[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n            </Grid>\r\n            {formState.values.userRole === \"Student\" ? (\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id='outlined-select-currency-native'\r\n                  select\r\n                  size='medium'\r\n                  name={\"university\"}\r\n                  fullWidth\r\n                  value={formState.values.university}\r\n                  onChange={handleChange}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  helpertext={\r\n                    hasError(\"university\") ? formState.errors.university[0] : null\r\n                  }\r\n                  variant='outlined'\r\n                >\r\n                  <option value={\"\"}>Please select University</option>\r\n                  {universityData.map((option, index) => (\r\n                    <option key={index} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n                {\r\n                  hasError(\"university\") ?\r\n                    <span className={classes.errorText}>\r\n                      {formState.errors.university[0]}\r\n                    </span>\r\n                    :\r\n                    null\r\n                }\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {formState.values.userRole === \"Corporate Employee\" ? (\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id='outlined-select-currency-native'\r\n                  select\r\n                  size='medium'\r\n                  name={\"corporation\"}\r\n                  fullWidth\r\n                  value={formState.values.corporation}\r\n                  onChange={handleChange}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                  helpertext={\r\n                    hasError(\"corporation\") ? formState.errors.corporation[0] : null\r\n                  }\r\n                  variant='outlined'\r\n                >\r\n                  <option value={\"\"}>Please select Corporate</option>\r\n                  {corporateData.map((option, index) => (\r\n                    <option key={option.index} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n                {\r\n                  hasError(\"corporation\") ?\r\n                    <span className={classes.errorText}>\r\n                      {formState.errors.corporation[0]}\r\n                    </span>\r\n                    :\r\n                    null\r\n                }\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                placeholder='E-mail'\r\n                label='E-mail *'\r\n                variant='outlined'\r\n                size='medium'\r\n                name='email'\r\n                fullWidth\r\n                helpertext={hasError(\"email\") ? formState.errors.email[0] : null}\r\n                error={hasError(\"email\")}\r\n                onChange={handleChange}\r\n                type='email'\r\n                value={formState.values.email || \"\"}\r\n              />\r\n              {\r\n                hasError(\"email\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.email[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box className={classes.positionRelative}>\r\n                <TextField\r\n                  placeholder='Password'\r\n                  label='Password *'\r\n                  variant='outlined'\r\n                  size='medium'\r\n                  name='password'\r\n                  fullWidth\r\n                  helpertext={\r\n                    hasError(\"password\") ? formState.errors.password[0] : null\r\n                  }\r\n                  error={hasError(\"password\")}\r\n                  onChange={handleChange}\r\n                  type={eyeStatus ? \"password\" : \"text\"}\r\n                  value={formState.values.password || \"\"}\r\n                />\r\n                {eyeStatus ? (\r\n\r\n                  <Box\r\n                    className={clsx(classes.eyeWrapper, classes.eyeOff)}\r\n                    onClick={() => setEyeStatus(!eyeStatus)}\r\n                  >\r\n                    <VisibilityOffIcon />\r\n                  </Box>\r\n                ) : (\r\n                  <Box\r\n                    className={clsx(classes.eyeWrapper, classes.eyeVisible)}\r\n                    onClick={() => setEyeStatus(!eyeStatus)}\r\n                  >\r\n                    <VisibilityIcon />\r\n                  </Box>\r\n                )}\r\n                {\r\n                  hasError(\"password\") ?\r\n                    <span className={classes.errorText}>\r\n                      {formState.errors.password[0]}\r\n                    </span>\r\n                    :\r\n                    null\r\n                }\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    onChange={handleCheckboxChange}\r\n                    name='doNotSell'\r\n                    color='primary'\r\n                  />\r\n                }\r\n              />\r\n              <span\r\n                className={classes.modalTriggerLable}\r\n                onClick={modalTriggering}\r\n              >\r\n                Do not sell my personal information.\r\n              </span>\r\n              <Modal\r\n                fullWidth={true}\r\n                open={modalState}\r\n                handleClose={handleClose}\r\n                iFrame={true}\r\n                title={<h4 className={classes.modalTitle}>MY DATA RIGHTS</h4>}\r\n                content={\r\n                  getTemplateData && getTemplateData.content.length\r\n                    ? ReactHtmlParser(getTemplateData.content)\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.marginNegative}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    onChange={handleCheckboxChange1}\r\n                    name='privacyPolicy'\r\n                    color='primary'\r\n                    checked={templeteCheckboxes.privacyPolicy}\r\n                  />\r\n                }\r\n              /><span className={classes.modalNoneTriggerText}>I accept</span>\r\n              <span\r\n                className={classes.modalTriggerLable}\r\n                onClick={modalTriggering1}\r\n              >\r\n                privacy policy\r\n              </span>\r\n\r\n              <Modal\r\n                fullWidth={true}\r\n                open={modalOneState}\r\n                handleClose={handleClose1}\r\n                iFrame={true}\r\n                // title={<h4 className={classes.modalTitle}>Privacy Policy</h4>}\r\n                content={\r\n                  privayPolicyData && privayPolicyData.content.length\r\n                    ? ReactHtmlParser(privayPolicyData.content)\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.marginNegative}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    onChange={handleCheckboxChange1}\r\n                    name='termsConditions'\r\n                    color='primary'\r\n                    checked={templeteCheckboxes.termsConditions}\r\n\r\n                  />\r\n                }\r\n              />\r\n              <span className={classes.modalNoneTriggerText}>\r\n                I have read and understood\r\n              </span>\r\n              <span\r\n                className={classes.modalTriggerLable}\r\n                onClick={modalTriggering2}\r\n              >\r\n                terms and conditions.\r\n              </span>\r\n\r\n              <Modal\r\n                fullWidth={true}\r\n                open={modalTwoState}\r\n                handleClose={handleClose2}\r\n                iFrame={true}\r\n                // title={<h4 className={classes.modalTitle}></h4>}\r\n\r\n                content={\r\n                  termsNcondtionData && termsNcondtionData.content.length\r\n                    ? ReactHtmlParser(termsNcondtionData.content)\r\n                    : null\r\n\r\n                }\r\n              />\r\n\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <i>\r\n                <Typography variant='subtitle2'>\r\n                  Fields that are marked with an asterisk (*) sign are required.\r\n                </Typography>\r\n              </i>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                size='large'\r\n                variant='contained'\r\n                disabled={disableState}\r\n                type='submit'\r\n                color='primary'\r\n                fullWidth\r\n                className={classes.commonBtn}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>\r\n            {props.setSignUpOpen ? (\r\n              <Grid item xs={12}>\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"center\"}\r\n                  alignItems={\"center\"}\r\n                >\r\n                  <Typography\r\n                    variant='subtitle1'\r\n                    color='textPrimary'\r\n                    align='center'\r\n                    className={classes.cusTextPrimary}\r\n                  >\r\n                    Already have an account?\r\n                  </Typography>\r\n                  <span\r\n                    onClick={() => props.setSignUpOpen(false)}\r\n                    className={classes.link}\r\n                  >\r\n                    &nbsp; Sign In\r\n                  </span>\r\n                </Box>\r\n              </Grid>\r\n            ) : (\r\n              <Grid item xs={12}>\r\n                <Typography\r\n                  variant='subtitle1'\r\n                  color='textPrimary'\r\n                  align='center'\r\n                  className={classes.cusTextPrimary}\r\n                >\r\n                  Already have an account?{\" \"}\r\n                  <Link href='/signin'>\r\n                    <a className={classes.authLink}>\r\n                      <LearnMoreLink title='Sign in' />\r\n                    </a>\r\n                  </Link>\r\n\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}