{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\Dashboard\\\\components\\\\Security\\\\Security.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { ApiHelper } from \"../../../../helper\";\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport Toast from 'components/toaster';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Loader from 'components/common/Loader/loader';\nconst schema = {\n  oldPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    }\n  },\n  newPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    }\n  },\n  repeatPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    },\n    equality: \"newPassword\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  switchTitle: {\n    fontWeight: 700\n  },\n  titleCta: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  btnWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\"\n    }\n  },\n  errorText: {\n    color: 'red',\n    fontSize: \"14px\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  }\n}));\n\nconst Security = props => {\n  _s();\n\n  const {\n    className,\n    authToken\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"authToken\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    console.log(formState, \"thsi si state\");\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      setLoader(true);\n      const data = {\n        oldPassword: formState.values.oldPassword,\n        newPassword: formState.values.newPassword\n      };\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.USERPASSWORDUPDATE.service, ApiRoutes.USERPASSWORDUPDATE.url, ApiRoutes.USERPASSWORDUPDATE.method, ApiRoutes.USERPASSWORDUPDATE.authenticate, authToken, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.messages\n        });\n        setLoader(false);\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.messages\n        });\n        setLoader(false);\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(React.Fragment, null, loader ? __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }) : null, __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }), __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.titleCta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Change Password\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Current password\"), __jsx(TextField, {\n    placeholder: \"Current password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"oldPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"oldPassword\") ? formState.errors.oldPassword[0] : null,\n    error: hasError(\"oldPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), hasError(\"oldPassword\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, formState.errors.oldPassword[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, \"New password\"), __jsx(TextField, {\n    placeholder: \"New password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"newPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"newPassword\") ? formState.errors.newPassword[0] : null,\n    error: hasError(\"newPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }), hasError(\"newPassword\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, formState.errors.newPassword[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), __jsx(TextField, {\n    placeholder: \"Confirm Password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"repeatPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"repeatPassword\") ? formState.errors.repeatPassword[0] : null,\n    error: hasError(\"repeatPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }), hasError(\"repeatPassword\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, formState.errors.repeatPassword[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    container: true,\n    justifyContent: \"flex-start\",\n    xs: 12,\n    className: classes.btnWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    className: classes.commonBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Reset Password\"))))));\n};\n\n_s(Security, \"GwEfkLwo5QBAvHgoi0YVvcBNZZ4=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Security;\nSecurity.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string\n};\nexport default Security;\n\nvar _c;\n\n$RefreshReg$(_c, \"Security\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/Dashboard/components/Security/Security.js"],"names":["React","useState","PropTypes","validate","ApiHelper","ApiRoutes","Toast","makeStyles","useTheme","Button","useMediaQuery","Grid","Typography","TextField","Divider","Loader","schema","oldPassword","presence","allowEmpty","message","length","minimum","newPassword","repeatPassword","equality","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","switchTitle","titleCta","display","justifyContent","alignItems","btnWrapper","breakpoints","down","errorText","color","fontSize","commonBtn","padding","backgroundColor","minWidth","border","textAlign","transition","boxShadow","Security","props","className","authToken","rest","classes","isMd","up","defaultMatches","formState","setFormState","isValid","values","touched","errors","useEffect","handleChange","event","console","log","persist","target","name","value","handleSubmit","preventDefault","setLoader","data","response","FetchFromServer","USERPASSWORDUPDATE","service","url","method","authenticate","undefined","isError","fire","icon","title","messages","loader","hasError","field","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { ApiHelper } from \"../../../../helper\";\r\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\r\nimport Toast from 'components/toaster';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport Button from '@material-ui/core/Button';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Loader from 'components/common/Loader/loader';\r\n\r\nconst schema = {\r\n  oldPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n  newPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n  repeatPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n    equality: \"newPassword\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputTitle: {\r\n    fontWeight: 700,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  switchTitle: {\r\n    fontWeight: 700,\r\n  },\r\n  titleCta: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  btnWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  errorText:\r\n  {\r\n    color:'red',\r\n    fontSize:\"14px\"\r\n  },\r\n  commonBtn: {\r\n    display: \"inline-block\",\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    minWidth: 200,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Security = (props) => {\r\n  const { className, authToken, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    console.log(formState,\"thsi si state\")\r\n    event.persist();\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (formState.isValid) {\r\n      setLoader(true)\r\n      const data = {\r\n        oldPassword: formState.values.oldPassword,\r\n        newPassword: formState.values.newPassword,\r\n      };\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.USERPASSWORDUPDATE.service,\r\n        ApiRoutes.USERPASSWORDUPDATE.url,\r\n        ApiRoutes.USERPASSWORDUPDATE.method,\r\n        ApiRoutes.USERPASSWORDUPDATE.authenticate,\r\n        authToken,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.messages,\r\n        });\r\n        setLoader(false)\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.messages,\r\n        });\r\n        setLoader(false)\r\n      }\r\n    }\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n  const [loader,setLoader]=useState(false)\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n  return (\r\n    <>\r\n    {loader ? <Loader/> : null}\r\n    <div className={className} {...rest}>\r\n      <form name='password-reset-form' method='post' onSubmit={handleSubmit}>\r\n        <Grid container spacing={isMd ? 4 : 2}>\r\n          <Grid item xs={12}>\r\n            <div className={classes.titleCta}>\r\n              <Typography variant='h6' color='textPrimary'>\r\n                Change Password\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              className={classes.inputTitle}\r\n            >\r\n              Current password\r\n            </Typography>\r\n            <TextField\r\n              placeholder='Current password'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='oldPassword'\r\n              fullWidth\r\n              type='password'\r\n              helpertext={\r\n                hasError(\"oldPassword\") ? formState.errors.oldPassword[0] : null\r\n              }\r\n              error={hasError(\"oldPassword\")}\r\n              onChange={handleChange}\r\n            />\r\n             {\r\n                hasError(\"oldPassword\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.oldPassword[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              className={classes.inputTitle}\r\n            >\r\n              New password\r\n            </Typography>\r\n            <TextField\r\n              placeholder='New password'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='newPassword'\r\n              fullWidth\r\n              type='password'\r\n              helpertext={\r\n                hasError(\"newPassword\") ? formState.errors.newPassword[0] : null\r\n              }\r\n              error={hasError(\"newPassword\")}\r\n              onChange={handleChange}\r\n            />\r\n             {\r\n                hasError(\"newPassword\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.newPassword[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              className={classes.inputTitle}\r\n            >\r\n              Confirm Password\r\n            </Typography>\r\n            <TextField\r\n              placeholder='Confirm Password'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='repeatPassword'\r\n              fullWidth\r\n              type='password'\r\n              helpertext={\r\n                hasError(\"repeatPassword\")\r\n                  ? formState.errors.repeatPassword[0]\r\n                  : null\r\n              }\r\n              error={hasError(\"repeatPassword\")}\r\n              onChange={handleChange}\r\n            />\r\n              {\r\n                hasError(\"repeatPassword\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.repeatPassword[0]}  \r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            justifyContent='flex-start'\r\n            xs={12}\r\n            className={classes.btnWrapper}\r\n          >\r\n            <Button\r\n              variant='contained'\r\n              type='submit'\r\n              color='primary'\r\n              onClick={handleSubmit}\r\n              className={classes.commonBtn}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nSecurity.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Security;\r\n"]},"metadata":{},"sourceType":"module"}