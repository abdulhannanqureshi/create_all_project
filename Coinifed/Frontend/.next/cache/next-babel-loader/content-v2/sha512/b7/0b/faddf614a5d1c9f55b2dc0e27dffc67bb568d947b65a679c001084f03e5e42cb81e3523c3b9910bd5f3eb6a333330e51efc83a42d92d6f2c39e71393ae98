{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ApiHelper } from 'helper';\nimport { ApiRoutes } from 'config';\nimport Toast from 'components/toaster';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Image } from 'components/atoms';\nimport { Section } from 'components/organisms';\nimport { Hero, Products, Content } from './components';\nimport leftHalfCircle from \"../../../public/assets/left-half-circle.png\";\nimport rightyHalfCircle from \"../../../public/assets/right-half-circle.png\";\nconst useStyles = makeStyles(theme => ({\n  sectionDescription: {\n    background: \"#F8FCFF\",\n    background: \"linear-gradient(90deg, #F8FCFF 0%, #E0ECFF 100%)\"\n  },\n  sectionAlternateForm: {\n    background: \"transparent\",\n    backgroundImage: `linear-gradient(180deg, ${theme.palette.background.paper} 300px, ${theme.palette.primary.dark} 0%)`\n  },\n  shapBlock: {\n    position: \"relative\"\n  },\n  leftShapeImage: {\n    position: \"absolute\",\n    width: \"500px\",\n    height: \"500px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"300px\",\n      height: \"400px\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"150px\",\n      height: \"300px\"\n    }\n  },\n  rightShapeImage: {\n    position: \"absolute\",\n    width: \"500px\",\n    height: \"500px\",\n    right: \"0px\",\n    [theme.breakpoints.down(1200)]: {\n      width: \"300px\",\n      height: \"400px\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"260px\",\n      height: \"360px\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"150px\",\n      height: \"160px\"\n    }\n  }\n}));\n\nconst Expo = () => {\n  const classes = useStyles();\n  const [loader, setLoader] = React.useState(false);\n  const {\n    0: courseData,\n    1: setCourseData\n  } = useState([]);\n  const {\n    0: templateData,\n    1: setTemplateData\n  } = useState([]);\n  const {\n    0: getTemplateData,\n    1: setGetTemplateData\n  } = useState(null);\n  useEffect(() => {\n    fetchData();\n    fetchCertificateData();\n  }, []);\n\n  const fetchData = async () => {\n    setLoader(true);\n    const response = await new ApiHelper().FetchFromServer(ApiRoutes.COURSELIST.service, `${ApiRoutes.COURSELIST.url}?limit=${3}&isActive=${\"true\"}`, ApiRoutes.COURSELIST.method, ApiRoutes.COURSELIST.authenticate, undefined, undefined);\n\n    if (response && !response.isError) {\n      const data = response.data.data;\n      let filterData = data.filter(course => course.isActive);\n      setCourseData(filterData);\n      setLoader(false);\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: \"Something went wrong\"\n      });\n    }\n  };\n\n  const fetchCertificateData = async () => {\n    setLoader(true);\n    const response = await new ApiHelper().FetchFromServer(ApiRoutes.FRONT_PAGE_DATA.service, ApiRoutes.FRONT_PAGE_DATA.url, ApiRoutes.FRONT_PAGE_DATA.method, ApiRoutes.FRONT_PAGE_DATA.authenticate, undefined, undefined);\n\n    if (response && !response.isError) {\n      const data = response.data.data;\n      setTemplateData(data);\n      setLoader(false);\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: \"Something went wrong\"\n      });\n    }\n  }; // For Get Template Data\n\n\n  useEffect(() => {\n    if (templateData && templateData.length) {\n      let getData = templateData.filter(e => e.titleSlug === \"home\");\n      setGetTemplateData(...getData);\n    }\n  }, [templateData]);\n  return __jsx(\"div\", null, __jsx(Hero, null), __jsx(\"div\", {\n    className: classes.sectionDescription\n  }, __jsx(Section, null, __jsx(Products, {\n    data: courseData\n  }))), __jsx(\"div\", {\n    className: classes.shapBlock\n  }, __jsx(Image, {\n    src: leftHalfCircle,\n    srcSet: leftHalfCircle,\n    lazy: false,\n    alt: \"left side vector\",\n    className: classes.leftShapeImage\n  }), __jsx(Image, {\n    src: rightyHalfCircle,\n    srcSet: rightyHalfCircle,\n    lazy: false,\n    alt: \"left side vector\",\n    className: classes.rightShapeImage\n  })), __jsx(Section, null, getTemplateData ? __jsx(Content, {\n    sending: getTemplateData\n  }) : null));\n};\n\nexport default Expo;","map":null,"metadata":{},"sourceType":"module"}