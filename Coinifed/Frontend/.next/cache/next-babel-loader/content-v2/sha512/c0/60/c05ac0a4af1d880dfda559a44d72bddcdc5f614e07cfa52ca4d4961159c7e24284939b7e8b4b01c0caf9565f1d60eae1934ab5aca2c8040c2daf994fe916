{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport yellow from '@material-ui/core/colors/yellow';\nimport AppConfig from \"../../../../config/appConfig\";\nimport { Image } from 'components/atoms';\nimport { useEffect } from 'react';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { HeroBackground } from 'components/organisms';\nimport { Section } from \"components/organisms\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    boxShadow: \"0 9px 18px 0 rgba(0, 0, 0, 0.1)\",\n    borderRadius: theme.spacing(2)\n  },\n  cardMedia: {\n    padding: theme.spacing(3, 3, 0, 3),\n    position: \"relative\",\n    // background: colors.indigo[50],\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  cardContent: {\n    padding: theme.spacing(5),\n    minHeight: \"550px\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(0, 3),\n      minHeight: \"auto\",\n      textAlign: \"center\"\n    }\n  },\n  imageCard: {\n    boxShadow: \"none\",\n    padding: \"30px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      textAlign: \"center\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: \"20px 15px\"\n    }\n  },\n  image: {\n    objectFit: \"contain\",\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"500px\"\n    }\n  },\n  fontWeightBold: {\n    fontWeight: \"bold\"\n  },\n  hearIconContainer: {\n    position: \"absolute\",\n    top: theme.spacing(3),\n    right: theme.spacing(3)\n  },\n  ratingContainer: {\n    margin: theme.spacing(2, 0),\n    padding: theme.spacing(4, 0),\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: theme.spacing(1, 0),\n      padding: theme.spacing(1, 0)\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 16\n    }\n  },\n  commonText: {\n    \"& .MuiTypography-body1\": {\n      fontSize: 18\n    }\n  },\n  ratingIcon: {\n    color: yellow[700],\n    marginRight: theme.spacing(1 / 2)\n  },\n  affiliateWrapper: {\n    padding: theme.spacing(2, 6, 3)\n  },\n  affilateBlock: {\n    padding: \"0 80px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"0px !important\"\n    }\n  },\n  textWhite: {\n    color: \"#fff\"\n  },\n  textCenter: {\n    textAlign: \"center\"\n  },\n  fontWeight700: {\n    fontWeight: \"700\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: 10,\n    backgroundColor: \"#5120FF\",\n    color: \"#fff\",\n    fontSize: 16,\n    borderRadius: 5,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\"\n    }\n  },\n  whiteBtn: {\n    backgroundColor: \"#fff\",\n    color: \"#5120FF\",\n    fontWeight: \"600\",\n    \"&:hover\": {\n      backgroundColor: \"#5120FF\",\n      color: \"#fff\",\n      border: \"solid 1px #fff\"\n    }\n  },\n  priceCta: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: \"10px\"\n  },\n  textCenter: {\n    textAlign: \"center\"\n  },\n  contentWrap: {\n    padding: \"50px 10px\"\n  },\n  contentWrap2: {\n    padding: \"10px 10px\"\n  },\n  orderSm: {\n    [theme.breakpoints.down(\"sm\")]: {\n      order: 1,\n      textAlign: \"center\"\n    }\n  },\n  orderSm1: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      justifyContent: \"center !important\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex !important\",\n      justifyContent: \"center !important\"\n    }\n  },\n  orderSm2: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex !important\",\n      justifyContent: \"center !important\"\n    }\n  },\n  borderRadius: {\n    borderRadius: \"20px\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  smallCommonBtn: {\n    minWidth: 132,\n    padding: \"8px 10px\",\n    fontSize: 15\n  }\n}));\n\nconst Content = props => {\n  // const { data, className, ...rest } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const router = useRouter();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  }); // useEffect(() => {\n  // }, [props])\n  // const rating = (count) => {\n  //   const ratingArray = [];\n  //   for (let i = 1; i <= 5; i += 1) {\n  //     ratingArray.push(\n  //       <i\n  //         className={clsx(\n  //           i <= count ? \"fas fa-star\" : \"far fa-star\",\n  //           classes.ratingIcon\n  //         )}\n  //         key={i}\n  //       />\n  //     );\n  //   }\n  //   return ratingArray;\n  // };\n\n  return (// <div className={className} {...rest}>\n    __jsx(\"div\", null, __jsx(\"div\", {\n      className: classes.contentWrap\n    }, __jsx(Grid, {\n      container: true,\n      spacing: isMd ? 4 : 2\n    }, props.sending ? __jsx(React.Fragment, null, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(Card, {\n      className: classes.imageCard\n    }, __jsx(Image, {\n      src: `${AppConfig.IMAGE_URL}/${props.sending.blockImage1}`,\n      srcSet: `${AppConfig.IMAGE_URL}/${props.sending.blockImage1}`,\n      alt: \"item.title\",\n      className: classes.image\n    }))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(Card, {\n      className: classes.card\n    }, __jsx(CardContent, {\n      className: classes.cardContent\n    }, __jsx(Typography, {\n      color: \"textPrimary\",\n      variant: \"h4\",\n      className: clsx(classes.fontWeightBold)\n    }, ReactHtmlParser(props.sending.blockTitle1)), __jsx(\"div\", {\n      className: clsx(classes.ratingContainer, classes.commonText)\n    }, __jsx(Typography, {\n      color: \"textPrimary\",\n      variant: \"body1\"\n    }, ReactHtmlParser(props.sending.block1))), __jsx(\"div\", {\n      className: classes.priceCta\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: clsx(classes.commonBtn, classes.smallCommonBtn),\n      onClick: () => router.push('/labs')\n    }, \"Learn More\")))))) : null)), __jsx(\"div\", {\n      className: classes.contentWrap\n    }, __jsx(HeroBackground, {\n      backgroundColor: \"#5120FF\",\n      className: classes.borderRadius\n    }, __jsx(Section //  innernarrowed\n    , {\n      className: classes.affiliateWrapper\n    }, __jsx(Box, {\n      className: clsx(classes.affilateBlock)\n    }, __jsx(Typography, {\n      variant: \"h3\",\n      className: clsx(classes.textWhite, classes.fontWeight700, classes.textCenter)\n    }, props.sending ? props.sending.blockTitle3 : \"Affilate block content\"), __jsx(Box, {\n      pt: 3\n    }, __jsx(Grid, {\n      container: true,\n      spacing: isMd ? 4 : 2,\n      className: classes.orderSm2\n    }, __jsx(Grid, {\n      item: true,\n      md: 6,\n      sm: 12,\n      className: classes.orderSm1\n    }, __jsx(Button, {\n      className: clsx(classes.commonBtn, classes.whiteBtn),\n      onClick: () => router.push('/marketing')\n    }, \"Become Affiliate\")), __jsx(Grid, {\n      item: true,\n      md: 6,\n      sm: 12,\n      className: classes.orderSm1\n    }, __jsx(Button, {\n      className: clsx(classes.commonBtn, classes.whiteBtn),\n      onClick: () => router.push('/marketing')\n    }, \"Become Referral\")))))))), __jsx(\"div\", {\n      className: classes.contentWrap2\n    }, __jsx(Box, {\n      pt: 0,\n      pb: 5\n    }), __jsx(Grid, {\n      container: true,\n      spacing: isMd ? 4 : 2\n    }, props.sending ? __jsx(React.Fragment, null, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      \"data-aos\": \"fade-up\",\n      className: classes.orderSm\n    }, __jsx(Card, {\n      className: classes.card\n    }, __jsx(CardContent, {\n      className: classes.cardContent\n    }, __jsx(Typography, {\n      color: \"textPrimary\",\n      variant: \"h4\",\n      className: clsx(classes.fontWeightBold)\n    }, props.sending.blockTitle2), __jsx(\"div\", {\n      className: clsx(classes.ratingContainer, classes.commonText)\n    }, __jsx(Typography, {\n      color: \"textPrimary\",\n      variant: \"body1\"\n    }, ReactHtmlParser(props.sending.block2))), __jsx(\"div\", {\n      className: classes.priceCta\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: clsx(classes.commonBtn, classes.smallCommonBtn),\n      onClick: () => router.push('/certificate')\n    }, \"Learn More\"))))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(Card, {\n      className: classes.imageCard\n    }, __jsx(Image, {\n      src: `${AppConfig.IMAGE_URL}/${props.sending.blockImage2}`,\n      srcSet: `${AppConfig.IMAGE_URL}/${props.sending.blockImage2}`,\n      alt: \"item.title\",\n      className: classes.image\n    })))) : null)))\n  );\n}; // Content.propTypes = {\n//   /**\n//    * External classes\n//    */\n//   className: PropTypes.string,\n//   /**\n//    * data to be rendered\n//    */\n//   data: PropTypes.array.isRequired,\n// };\n\n\nexport default Content;","map":null,"metadata":{},"sourceType":"module"}