{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nconst useStyles = makeStyles(theme => ({\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"6px 22px\",\n    backgroundColor: \"#5120FF\",\n    color: \"#fff\",\n    fontSize: 16,\n    borderRadius: 5,\n    minWidth: 142,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  anotherCommonBtn: {\n    backgroundColor: \"#fff\",\n    color: \"#5120FF\",\n    \"&:hover\": {\n      backgroundColor: \"#5120FF\",\n      color: \"#fff\"\n    }\n  }\n}));\n\nconst Modal = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n  return __jsx(\"div\", null, __jsx(Dialog, {\n    fullWidth: props.fullWidth,\n    maxWidth: props.maxWidth,\n    fullScreen: fullScreen,\n    open: props.open,\n    onRequestClose: props.handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\"\n  }, props.title ? props.title : \"\"), __jsx(DialogContent, null, props.contentText ? __jsx(DialogContentText, null, props.contentText) : \"\", props.url ? __jsx(\"iframe\", {\n    class: \"embed-responsive-item\",\n    src: `${props.url}?rel=0&amp;enablejsapi=1&amp;`,\n    allowfullscreen: \"\",\n    \"data-gtm-yt-inspected-1170188_142\": \"true\",\n    id: \"438041764\",\n    width: \"500\",\n    height: \"350\"\n  }) : \"\", props.content ? props.content : \"\"), __jsx(DialogActions, null, props.cancleStatus ? __jsx(Button, {\n    autoFocus: true,\n    onClick: props.handleClose\n  }, props.cancleName ? props.cancleName : \"Close\") : \"\", __jsx(Button, {\n    className: clsx(classes.commonBtn, classes.anotherCommonBtn),\n    variant: \"outline\",\n    color: \"secondary\",\n    onClick: props.handleClose,\n    autoFocus: true\n  }, props.saveName ? props.saveName : \"Cancel\"))));\n};\n\nexport default Modal;","map":null,"metadata":{},"sourceType":"module"}