{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { SectionHeader } from 'components/molecules';\nimport { Section, Parallax } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    background: 'white',\n    overflow: 'hidden'\n  },\n  sectionWrapper: {\n    height: 400,\n    backgroundColor: '#5120FF'\n  },\n  textWhite: {\n    color: 'white'\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  section: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    height: 60,\n    width: 60\n  },\n  backButton: {\n    top: \"25px\",\n    zIndex: \"1\",\n    background: \"transparent\",\n    color: \"#fff\"\n  }\n}));\n\nconst Hero = props => {\n  const {\n    className,\n    cover,\n    title,\n    subtitle,\n    date\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"cover\", \"title\", \"subtitle\", \"date\"]);\n\n  const classes = useStyles();\n  const router = useRouter();\n\n  const handleRedirect = () => {\n    router.push(`/blog`);\n  };\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(Parallax, {\n    backgroundImage: cover\n  }, __jsx(\"div\", {\n    className: classes.sectionWrapper\n  }, __jsx(Section, {\n    className: classes.section\n  }, __jsx(React.Fragment, null, __jsx(SectionHeader, {\n    title: title,\n    subtitle: subtitle,\n    align: \"left\",\n    \"data-aos\": \"fade-up\",\n    titleProps: {\n      className: clsx(classes.title, classes.textWhite),\n      variant: \"h3\"\n    },\n    subtitleProps: {\n      className: classes.textWhite\n    }\n  }), __jsx(List, {\n    disablePadding: true\n  }, __jsx(ListItem, {\n    disableGutters: true\n  }, __jsx(ListItemText, {\n    primary: `Published by Admin`,\n    secondary: `on ${moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}`,\n    primaryTypographyProps: {\n      className: classes.textWhite,\n      variant: \"subtitle1\"\n    },\n    secondaryTypographyProps: {\n      className: classes.textWhite,\n      variant: \"subtitle1\"\n    }\n  }))), __jsx(Button, {\n    variant: \"contained\",\n    className: classes.backButton,\n    onClick: handleRedirect\n  }, __jsx(ArrowBackIosIcon, null), \" Back to list\"))))));\n};\n\nexport default Hero;","map":null,"metadata":{},"sourceType":"module"}