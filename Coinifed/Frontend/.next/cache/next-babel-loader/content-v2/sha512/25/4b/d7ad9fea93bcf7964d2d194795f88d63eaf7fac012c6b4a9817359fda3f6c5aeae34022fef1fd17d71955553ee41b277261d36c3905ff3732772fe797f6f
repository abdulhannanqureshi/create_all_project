{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\Expo\\\\components\\\\About\\\\About.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { HeroSideImage } from 'components/organisms';\nconst useStyles = makeStyles(() => ({\n  fontWeight700: {\n    fontWeight: 700\n  },\n  textWhite: {\n    color: 'white'\n  }\n}));\n\nconst About = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className,\n    \"data-aos\": \"fade-up\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), data.map((item, index) => __jsx(HeroSideImage, {\n    imageSrc: item.image.src,\n    imageSrcSet: item.image.srcSet,\n    reverse: index % 2 === 0,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: isMd ? 'h4' : 'h5',\n    color: \"primary\",\n    className: clsx(isMd ? '' : classes.textWhite, classes.fontWeight700),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, item.title)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: isMd ? 'h6' : 'body1',\n    className: clsx(isMd ? '' : classes.textWhite, classes.fontWeight700),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, item.subtitle)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: isMd ? 'body1' : 'body2',\n    color: \"textSecondary\",\n    className: isMd ? '' : classes.textWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, item.description))))));\n};\n\n_s(About, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = About;\nAbout.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * data to be rendered\r\n   */\n  data: PropTypes.array.isRequired\n};\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/Expo/components/About/About.js"],"names":["React","PropTypes","clsx","makeStyles","useTheme","useMediaQuery","Grid","Typography","HeroSideImage","useStyles","fontWeight700","fontWeight","textWhite","color","About","props","data","className","rest","classes","theme","isMd","breakpoints","up","defaultMatches","map","item","index","image","src","srcSet","title","subtitle","description","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport  makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport  useTheme  from '@material-ui/core/styles/useTheme';\r\nimport  useMediaQuery  from '@material-ui/core/useMediaQuery';\r\nimport  Grid  from '@material-ui/core/Grid';\r\nimport  Typography  from '@material-ui/core/Typography';\r\nimport { HeroSideImage } from 'components/organisms';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  fontWeight700: {\r\n    fontWeight: 700,\r\n  },\r\n  textWhite: {\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nconst About = props => {\r\n  const { data, className, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\r\n    defaultMatches: true,\r\n  });\r\n\r\n  return (\r\n    <div className={className} data-aos=\"fade-up\" {...rest}>\r\n      {data.map((item, index) => (\r\n        <HeroSideImage\r\n          imageSrc={item.image.src}\r\n          imageSrcSet={item.image.srcSet}\r\n          reverse={index % 2 === 0}\r\n          key={index}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant={isMd ? 'h4' : 'h5'}\r\n                color=\"primary\"\r\n                className={clsx(\r\n                  isMd ? '' : classes.textWhite,\r\n                  classes.fontWeight700,\r\n                )}\r\n              >\r\n                {item.title}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant={isMd ? 'h6' : 'body1'}\r\n                className={clsx(\r\n                  isMd ? '' : classes.textWhite,\r\n                  classes.fontWeight700,\r\n                )}\r\n              >\r\n                {item.subtitle}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant={isMd ? 'body1' : 'body2'}\r\n                color=\"textSecondary\"\r\n                className={isMd ? '' : classes.textWhite}\r\n              >\r\n                {item.description}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </HeroSideImage>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * data to be rendered\r\n   */\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default About;\r\n"]},"metadata":{},"sourceType":"module"}