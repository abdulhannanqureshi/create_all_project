{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\Dashboard\\\\components\\\\Security\\\\Security.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { ApiHelper } from \"../../../../helper\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport Toast from 'components/toaster';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Loader from 'components/common/Loader/loader';\nconst schema = {\n  oldPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    }\n  },\n  newPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    }\n  },\n  repeatPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    },\n    equality: \"newPassword\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  switchTitle: {\n    fontWeight: 700\n  },\n  titleCta: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  btnWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\"\n    }\n  },\n  errorText: {\n    color: 'red',\n    fontSize: \"14px\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  loaderDiv: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"90px\"\n  }\n}));\n\nconst Security = props => {\n  _s();\n\n  const {\n    className,\n    authToken,\n    insideLoader\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"authToken\", \"insideLoader\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      setLoader(true);\n      const data = {\n        oldPassword: formState.values.oldPassword,\n        newPassword: formState.values.newPassword\n      };\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.USERPASSWORDUPDATE.service, ApiRoutes.USERPASSWORDUPDATE.url, ApiRoutes.USERPASSWORDUPDATE.method, ApiRoutes.USERPASSWORDUPDATE.authenticate, authToken, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.messages\n        });\n        setLoader(false);\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.messages\n        });\n        setLoader(false);\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(React.Fragment, null, loader ? __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }) : null, insideLoader ? __jsx(\"div\", {\n    className: classes.loaderDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })) : null, __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: classes.titleCta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"Change Password\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, \"Current password\"), __jsx(TextField, {\n    placeholder: \"Current password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"oldPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"oldPassword\") ? formState.errors.oldPassword[0] : null,\n    error: hasError(\"oldPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }), hasError(\"oldPassword\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 23\n    }\n  }, formState.errors.oldPassword[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, \"New password\"), __jsx(TextField, {\n    placeholder: \"New password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"newPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"newPassword\") ? formState.errors.newPassword[0] : null,\n    error: hasError(\"newPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }), hasError(\"newPassword\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, formState.errors.newPassword[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }\n  }, \"Confirm Password\"), __jsx(TextField, {\n    placeholder: \"Confirm Password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"repeatPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"repeatPassword\") ? formState.errors.repeatPassword[0] : null,\n    error: hasError(\"repeatPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }), hasError(\"repeatPassword\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  }, formState.errors.repeatPassword[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    container: true,\n    justifyContent: \"flex-start\",\n    xs: 12,\n    className: classes.btnWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    className: classes.commonBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, \"Reset Password\"))))));\n};\n\n_s(Security, \"vSk26wIvnw8B541/hgkrvAMFKa0=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Security;\nSecurity.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string\n};\nexport default Security;\n\nvar _c;\n\n$RefreshReg$(_c, \"Security\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/Dashboard/components/Security/Security.js"],"names":["React","useState","PropTypes","validate","ApiHelper","CircularProgress","ApiRoutes","Toast","makeStyles","useTheme","Button","useMediaQuery","Grid","Typography","TextField","Divider","Loader","schema","oldPassword","presence","allowEmpty","message","length","minimum","newPassword","repeatPassword","equality","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","switchTitle","titleCta","display","justifyContent","alignItems","btnWrapper","breakpoints","down","errorText","color","fontSize","commonBtn","padding","backgroundColor","minWidth","border","textAlign","transition","boxShadow","loaderDiv","marginTop","Security","props","className","authToken","insideLoader","rest","classes","isMd","up","defaultMatches","formState","setFormState","isValid","values","touched","errors","useEffect","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","setLoader","data","response","FetchFromServer","USERPASSWORDUPDATE","service","url","method","authenticate","undefined","isError","fire","icon","title","messages","loader","hasError","field","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { ApiHelper } from \"../../../../helper\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\r\nimport Toast from 'components/toaster';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport Button from '@material-ui/core/Button';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Loader from 'components/common/Loader/loader';\r\n\r\nconst schema = {\r\n  oldPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n  newPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n  repeatPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n    equality: \"newPassword\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputTitle: {\r\n    fontWeight: 700,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  switchTitle: {\r\n    fontWeight: 700,\r\n  },\r\n  titleCta: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  btnWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  errorText:\r\n  {\r\n    color: 'red',\r\n    fontSize: \"14px\"\r\n  },\r\n  commonBtn: {\r\n    display: \"inline-block\",\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    minWidth: 200,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  loaderDiv:\r\n  {\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    marginTop:\"90px\"\r\n  }\r\n}));\r\n\r\nconst Security = (props) => {\r\n  const { className, authToken, insideLoader, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (formState.isValid) {\r\n      setLoader(true)\r\n      const data = {\r\n        oldPassword: formState.values.oldPassword,\r\n        newPassword: formState.values.newPassword,\r\n      };\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.USERPASSWORDUPDATE.service,\r\n        ApiRoutes.USERPASSWORDUPDATE.url,\r\n        ApiRoutes.USERPASSWORDUPDATE.method,\r\n        ApiRoutes.USERPASSWORDUPDATE.authenticate,\r\n        authToken,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.messages,\r\n        });\r\n        setLoader(false)\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.messages,\r\n        });\r\n        setLoader(false)\r\n      }\r\n    }\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n  const [loader, setLoader] = useState(false)\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n  return (\r\n    <>\r\n      {loader ? <Loader /> : null}\r\n      {\r\n        insideLoader ?\r\n          <div className={classes.loaderDiv}>\r\n            <Loader />\r\n          </div> : null }\r\n          <div className={className} {...rest}>\r\n            <form name='password-reset-form' method='post' onSubmit={handleSubmit}>\r\n              <Grid container spacing={isMd ? 4 : 2}>\r\n                <Grid item xs={12}>\r\n                  <div className={classes.titleCta}>\r\n                    <Typography variant='h6' color='textPrimary'>\r\n                      Change Password\r\n                    </Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant='subtitle1'\r\n                    color='textPrimary'\r\n                    className={classes.inputTitle}\r\n                  >\r\n                    Current password\r\n                  </Typography>\r\n                  <TextField\r\n                    placeholder='Current password'\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    name='oldPassword'\r\n                    fullWidth\r\n                    type='password'\r\n                    helpertext={\r\n                      hasError(\"oldPassword\") ? formState.errors.oldPassword[0] : null\r\n                    }\r\n                    error={hasError(\"oldPassword\")}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {\r\n                    hasError(\"oldPassword\") ?\r\n                      <span className={classes.errorText}>\r\n                        {formState.errors.oldPassword[0]}\r\n                      </span>\r\n                      :\r\n                      null\r\n                  }\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant='subtitle1'\r\n                    color='textPrimary'\r\n                    className={classes.inputTitle}\r\n                  >\r\n                    New password\r\n                  </Typography>\r\n                  <TextField\r\n                    placeholder='New password'\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    name='newPassword'\r\n                    fullWidth\r\n                    type='password'\r\n                    helpertext={\r\n                      hasError(\"newPassword\") ? formState.errors.newPassword[0] : null\r\n                    }\r\n                    error={hasError(\"newPassword\")}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {\r\n                    hasError(\"newPassword\") ?\r\n                      <span className={classes.errorText}>\r\n                        {formState.errors.newPassword[0]}\r\n                      </span>\r\n                      :\r\n                      null\r\n                  }\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant='subtitle1'\r\n                    color='textPrimary'\r\n                    className={classes.inputTitle}\r\n                  >\r\n                    Confirm Password\r\n                  </Typography>\r\n                  <TextField\r\n                    placeholder='Confirm Password'\r\n                    variant='outlined'\r\n                    size='medium'\r\n                    name='repeatPassword'\r\n                    fullWidth\r\n                    type='password'\r\n                    helpertext={\r\n                      hasError(\"repeatPassword\")\r\n                        ? formState.errors.repeatPassword[0]\r\n                        : null\r\n                    }\r\n                    error={hasError(\"repeatPassword\")}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {\r\n                    hasError(\"repeatPassword\") ?\r\n                      <span className={classes.errorText}>\r\n                        {formState.errors.repeatPassword[0]}\r\n                      </span>\r\n                      :\r\n                      null\r\n                  }\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Divider />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  justifyContent='flex-start'\r\n                  xs={12}\r\n                  className={classes.btnWrapper}\r\n                >\r\n                  <Button\r\n                    variant='contained'\r\n                    type='submit'\r\n                    color='primary'\r\n                    onClick={handleSubmit}\r\n                    className={classes.commonBtn}\r\n                  >\r\n                    Reset Password\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n    </>\r\n  );\r\n};\r\n\r\nSecurity.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Security;\r\n"]},"metadata":{},"sourceType":"module"}