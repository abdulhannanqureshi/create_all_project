{"ast":null,"code":"/**\r\n * Caution: Consider this file when using NextJS or GatsbyJS\r\n *\r\n * You may delete this file and its occurrences from the project filesystem if you are using react-scripts\r\n */\nimport CourseDetail from 'views/CourseDetail';\nimport { ApiHelper } from \"helper\";\nimport { ApiRoutes } from \"config\";\nexport async function getServerSideProps({\n  req\n}) {\n  const authToken = req.cookies.token || null;\n  const responseCMS = await new ApiHelper().FetchFromServer(ApiRoutes.CERTIFICATE_DATA.service, ApiRoutes.CERTIFICATE_DATA.url, ApiRoutes.CERTIFICATE_DATA.method, ApiRoutes.CERTIFICATE_DATA.authenticate, undefined, undefined, undefined);\n  let cmsData = [];\n\n  if (responseCMS && !responseCMS.isError) {\n    cmsData = responseCMS.data.data;\n  } //  For get University Data\n\n\n  const responseUniversity = await new ApiHelper().FetchFromServer(ApiRoutes.GETUNIVERSITY.service, ApiRoutes.GETUNIVERSITY.url, ApiRoutes.GETUNIVERSITY.method, ApiRoutes.GETUNIVERSITY.authenticate, undefined, undefined, undefined);\n  let universityData = [];\n\n  if (responseUniversity && !responseUniversity.isError) {\n    universityData = responseUniversity.data.data;\n  } // For get Corporate data\n\n\n  const responseCorporate = await new ApiHelper().FetchFromServer(ApiRoutes.GETCORPORATE.service, ApiRoutes.GETCORPORATE.url, ApiRoutes.GETCORPORATE.method, ApiRoutes.GETCORPORATE.authenticate, undefined, undefined, undefined);\n  let corporateData = [];\n\n  if (responseCorporate && !responseCorporate.isError) {\n    corporateData = responseCorporate.data.data;\n  }\n\n  return {\n    props: {\n      authToken,\n      cmsData,\n      universityData,\n      corporateData\n    }\n  };\n}\nexport default CourseDetail;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/pages/course-detail/[id].js"],"names":["CourseDetail","ApiHelper","ApiRoutes","getServerSideProps","req","authToken","cookies","token","responseCMS","FetchFromServer","CERTIFICATE_DATA","service","url","method","authenticate","undefined","cmsData","isError","data","responseUniversity","GETUNIVERSITY","universityData","responseCorporate","GETCORPORATE","corporateData","props"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACC,OAAOA,YAAP,MAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,eAAeC,kBAAf,CAAkC;AAACC,EAAAA;AAAD,CAAlC,EAAyC;AAC7C,QAAMC,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAYC,KAAZ,IAAqB,IAAvC;AACA,QAAMC,WAAW,GAAG,MAAM,IAAIP,SAAJ,GAAgBQ,eAAhB,CACxBP,SAAS,CAACQ,gBAAV,CAA2BC,OADH,EAExBT,SAAS,CAACQ,gBAAV,CAA2BE,GAFH,EAGxBV,SAAS,CAACQ,gBAAV,CAA2BG,MAHH,EAIxBX,SAAS,CAACQ,gBAAV,CAA2BI,YAJH,EAKxBC,SALwB,EAMxBA,SANwB,EAOxBA,SAPwB,CAA1B;AASD,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAIR,WAAW,IAAI,CAACA,WAAW,CAACS,OAAhC,EAAyC;AACvCD,IAAAA,OAAO,GAAGR,WAAW,CAACU,IAAZ,CAAiBA,IAA3B;AACD,GAd6C,CAe/C;;;AACA,QAAMC,kBAAkB,GAAG,MAAM,IAAIlB,SAAJ,GAAgBQ,eAAhB,CAC7BP,SAAS,CAACkB,aAAV,CAAwBT,OADK,EAE7BT,SAAS,CAACkB,aAAV,CAAwBR,GAFK,EAG7BV,SAAS,CAACkB,aAAV,CAAwBP,MAHK,EAI7BX,SAAS,CAACkB,aAAV,CAAwBN,YAJK,EAK7BC,SAL6B,EAM7BA,SAN6B,EAO7BA,SAP6B,CAAjC;AASA,MAAIM,cAAc,GAAG,EAArB;;AACA,MAAIF,kBAAkB,IAAI,CAACA,kBAAkB,CAACF,OAA9C,EAAuD;AACnDI,IAAAA,cAAc,GAAGF,kBAAkB,CAACD,IAAnB,CAAwBA,IAAzC;AACH,GA5B8C,CA6B/C;;;AACA,QAAMI,iBAAiB,GAAG,MAAM,IAAIrB,SAAJ,GAAgBQ,eAAhB,CAC5BP,SAAS,CAACqB,YAAV,CAAuBZ,OADK,EAE5BT,SAAS,CAACqB,YAAV,CAAuBX,GAFK,EAG5BV,SAAS,CAACqB,YAAV,CAAuBV,MAHK,EAI5BX,SAAS,CAACqB,YAAV,CAAuBT,YAJK,EAK5BC,SAL4B,EAM5BA,SAN4B,EAO5BA,SAP4B,CAAhC;AASA,MAAIS,aAAa,GAAG,EAApB;;AACA,MAAIF,iBAAiB,IAAI,CAACA,iBAAiB,CAACL,OAA5C,EAAqD;AACjDO,IAAAA,aAAa,GAAGF,iBAAiB,CAACJ,IAAlB,CAAuBA,IAAvC;AACH;;AACC,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLpB,MAAAA,SADK;AAELW,MAAAA,OAFK;AAGLK,MAAAA,cAHK;AAILG,MAAAA;AAJK;AADF,GAAP;AAQD;AAEF,eAAexB,YAAf","sourcesContent":["/**\r\n * Caution: Consider this file when using NextJS or GatsbyJS\r\n *\r\n * You may delete this file and its occurrences from the project filesystem if you are using react-scripts\r\n */\r\n import CourseDetail from 'views/CourseDetail';\r\n import { ApiHelper } from \"helper\";\r\n import { ApiRoutes } from \"config\";\r\n export async function getServerSideProps({req}) {\r\n    const authToken = req.cookies.token || null;\r\n    const responseCMS = await new ApiHelper().FetchFromServer(\r\n      ApiRoutes.CERTIFICATE_DATA.service,\r\n      ApiRoutes.CERTIFICATE_DATA.url,\r\n      ApiRoutes.CERTIFICATE_DATA.method,\r\n      ApiRoutes.CERTIFICATE_DATA.authenticate,\r\n      undefined,\r\n      undefined,\r\n      undefined\r\n   );\r\n   let cmsData = [];\r\n   if (responseCMS && !responseCMS.isError) {\r\n     cmsData = responseCMS.data.data;\r\n   }\r\n  //  For get University Data\r\n  const responseUniversity = await new ApiHelper().FetchFromServer(\r\n      ApiRoutes.GETUNIVERSITY.service,\r\n      ApiRoutes.GETUNIVERSITY.url,\r\n      ApiRoutes.GETUNIVERSITY.method,\r\n      ApiRoutes.GETUNIVERSITY.authenticate,\r\n      undefined,\r\n      undefined,\r\n      undefined\r\n  );\r\n  let universityData = [];\r\n  if (responseUniversity && !responseUniversity.isError) {\r\n      universityData = responseUniversity.data.data;\r\n  }\r\n  // For get Corporate data\r\n  const responseCorporate = await new ApiHelper().FetchFromServer(\r\n      ApiRoutes.GETCORPORATE.service,\r\n      ApiRoutes.GETCORPORATE.url,\r\n      ApiRoutes.GETCORPORATE.method,\r\n      ApiRoutes.GETCORPORATE.authenticate,\r\n      undefined,\r\n      undefined,\r\n      undefined\r\n  );\r\n  let corporateData = [];\r\n  if (responseCorporate && !responseCorporate.isError) {\r\n      corporateData = responseCorporate.data.data;\r\n  }\r\n    return {\r\n      props: {\r\n        authToken,\r\n        cmsData,\r\n        universityData,\r\n        corporateData\r\n      }\r\n    }\r\n  }\r\n\r\n export default CourseDetail;\r\n"]},"metadata":{},"sourceType":"module"}