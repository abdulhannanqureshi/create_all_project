{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\SignupSimple\\\\components\\\\Form\\\\Form.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport clsx from \"clsx\";\nimport { LearnMoreLink } from \"components/atoms\";\nimport { Modal } from \"components/common\";\nimport Toast from \"components/toaster\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport validate from \"validate.js\";\nimport Link from 'next/link';\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport { ApiHelper } from \"../../../../helper\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  link: {\n    color: \"#3f51b5\",\n    cursor: \"pointer\",\n    fontWeight: \"600\"\n  },\n  commonBtn: {\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  cusTextPrimary: {\n    \"& .MuiTypography-colorPrimary\": {\n      color: \"#5120ff\"\n    }\n  },\n  modalNoneTriggerText: {\n    marginRight: \"5px\",\n    fontWeight: \"500\",\n    verticalAlign: \"middle\",\n    paddingRight: \"17px\",\n    marginLeft: \"-14px\"\n  },\n  modalTriggerLable: {\n    marginLeft: \"-16px\",\n    cursor: \"pointer\",\n    color: \"#5120ff\",\n    fontWeight: \"500\",\n    verticalAlign: \"middle\"\n  },\n  eyeWrapper: {\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    lineHeight: \"10px\",\n    right: 20,\n    cursor: \"pointer\",\n    \"& svg\": {\n      fill: \"#5120ff\"\n    }\n  },\n  negativeMarginTop: {\n    marginTop: \"-2px\"\n  },\n  marginNegative: {\n    marginTop: \"-28px\"\n  },\n  listings: {\n    marginLeft: \"15px\"\n  },\n  modalTitle: {\n    fontSize: \"18px\",\n    marginBottom: \"-15px\"\n  },\n  modalHeading: {\n    fontSize: \"18px\",\n    marginTop: \"15px\",\n    marginBottom: \"8px\"\n  },\n  positionRelative: {\n    position: \"relative\"\n  },\n  loader: {\n    display: \"flex\",\n    minHeight: \"200px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    },\n    email: true,\n    length: {\n      maximum: 300\n    }\n  },\n  firstName: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    },\n    length: {\n      maximum: 120\n    }\n  },\n  lastName: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    },\n    length: {\n      maximum: 120\n    }\n  },\n  userRole: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    },\n    length: {\n      minimum: 8\n    }\n  }\n};\nconst userRoles = [{\n  value: \"Individual\",\n  label: \"Individual\"\n}, {\n  value: \"Student\",\n  label: \"Student\"\n}, {\n  value: \"Corporate Employee\",\n  label: \"Corporate Employee\"\n}];\n\nconst Form = props => {\n  const {\n    cmsData,\n    universityData,\n    corporateData\n  } = props;\n  const classes = useStyles();\n  const router = useRouter();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [doNotSell, setDoNotSell] = React.useState(false);\n  const [templeteCheckboxes, setTempleteCheckboxes] = React.useState({\n    termsConditions: true,\n    privacyPolicy: true\n  });\n  const [modalState, setModalState] = React.useState(false);\n  const [modalOneState, setModalOneState] = React.useState(false);\n  const [modalTwoState, setModalTwoState] = React.useState(false);\n  const [eyeStatus, setEyeStatus] = React.useState(true); // For Get Do not sell Modal Content\n\n  const {\n    0: getTemplateData,\n    1: setGetTemplateData\n  } = useState(null);\n  const {\n    0: termsNcondtionData,\n    1: setTermsNcondtionData\n  } = useState(null);\n  const {\n    0: privayPolicyData,\n    1: setPrivacyPolicyData\n  } = useState(null);\n  const {\n    0: disableState,\n    1: setDisableState\n  } = useState(true); // For Get Template Data\n\n  useEffect(() => {\n    if (cmsData && cmsData.length) {\n      let getData = cmsData.filter(e => e.pageName === \"Do Not Sell\");\n      setGetTemplateData(...getData);\n      let termsConditionData = cmsData.filter(e => e.pageName === \"Terms And Condition\");\n      setTermsNcondtionData(...termsConditionData);\n      let privacyPolicyData = cmsData.filter(e => e.pageName === \"Privacy Policy\");\n      setPrivacyPolicyData(...privacyPolicyData);\n    }\n  }, [cmsData]);\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n  React.useEffect(() => {\n    const {\n      userRole\n    } = formState.values;\n\n    if (userRole === \"Student\") {\n      // getUniversityData();\n      setFormState(prevFormstate => _objectSpread(_objectSpread({}, prevFormstate), {}, {\n        values: _objectSpread(_objectSpread({}, prevFormstate.values), {}, {\n          corporation: \"\"\n        })\n      }));\n    } else if (userRole === \"Corporate Employee\") {\n      // getCorporateData();\n      setFormState(prevFormstate => _objectSpread(_objectSpread({}, prevFormstate), {}, {\n        values: _objectSpread(_objectSpread({}, prevFormstate.values), {}, {\n          university: \"\"\n        })\n      }));\n    } else if (userRole === \"Individual\") {\n      setFormState(prevFormstate => _objectSpread(_objectSpread({}, prevFormstate), {}, {\n        values: _objectSpread(_objectSpread({}, prevFormstate.values), {}, {\n          corporation: \"\",\n          university: \"\"\n        })\n      }));\n    }\n  }, [formState.values.userRole]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      const data = {\n        firstName: formState.values.firstName,\n        lastName: formState.values.lastName,\n        email: formState.values.email,\n        password: formState.values.password,\n        role: formState.values.userRole,\n        university: formState.values.university,\n        corporate: formState.values.corporation,\n        doNotSell: doNotSell\n      };\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.SIGNUP.service, ApiRoutes.SIGNUP.url, ApiRoutes.SIGNUP.method, ApiRoutes.SIGNUP.authenticate, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.data.message\n        });\n\n        if (props.categoryId && props.categoryId !== \"\") {\n          props.setSignUpOpen(false); //props.handleAuthModalClose()\n        } else {\n          router.push(\"/signin\");\n        }\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.messages[0]\n        });\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const handleCheckboxChange = event => {\n    setDoNotSell(event.target.checked);\n  };\n\n  const handleCheckboxChange1 = e => {\n    setTempleteCheckboxes(_objectSpread(_objectSpread({}, templeteCheckboxes), {}, {\n      [e.target.name]: e.target.checked\n    }));\n  };\n\n  useEffect(() => {\n    if (templeteCheckboxes.privacyPolicy && templeteCheckboxes.termsConditions) {\n      setDisableState(false);\n    } else {\n      setDisableState(true);\n    }\n  }, [templeteCheckboxes]);\n\n  const modalTriggering = () => {\n    setModalState(true);\n  };\n\n  const modalTriggering1 = () => {\n    setModalOneState(true);\n  };\n\n  const modalTriggering2 = () => {\n    setModalTwoState(true);\n  };\n\n  const handleClose = () => {\n    setModalState(false);\n  };\n\n  const handleClose1 = () => {\n    setModalOneState(false);\n  };\n\n  const handleClose2 = () => {\n    setModalTwoState(false);\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"First name\",\n    label: \"First name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"firstName\",\n    fullWidth: true,\n    helpertext: hasError(\"firstName\") ? formState.errors.firstName[0] : null,\n    error: hasError(\"firstName\"),\n    onChange: handleChange,\n    type: \"firstName\",\n    value: formState.values.firstName || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Last name\",\n    label: \"Last name *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"lastName\",\n    fullWidth: true,\n    helpertext: hasError(\"lastName\") ? formState.errors.lastName[0] : null,\n    error: hasError(\"lastName\"),\n    onChange: handleChange,\n    type: \"lastName\",\n    value: formState.values.lastName || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-select-currency-native\",\n    select: true,\n    size: \"medium\",\n    name: \"userRole\",\n    fullWidth: true,\n    label: \"\",\n    value: formState.values.userRole,\n    onChange: handleChange,\n    SelectProps: {\n      native: true\n    },\n    helpertext: hasError(\"userRole\") ? formState.errors.userRole[0] : null,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }, \"Please select Type\"), userRoles.map((option, index) => __jsx(\"option\", {\n    key: index,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 17\n    }\n  }, option.label)))), formState.values.userRole === \"Student\" ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-select-currency-native\",\n    select: true,\n    size: \"medium\",\n    name: \"university\",\n    fullWidth: true,\n    value: formState.values.university,\n    onChange: handleChange,\n    SelectProps: {\n      native: true\n    },\n    helpertext: hasError(\"userRole\") ? formState.errors.userRole[0] : null,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, \"Please select University\"), universityData.map((option, index) => __jsx(\"option\", {\n    key: index,\n    value: option.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 19\n    }\n  }, option.name)))) : \"\", formState.values.userRole === \"Corporate Employee\" ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-select-currency-native\",\n    select: true,\n    size: \"medium\",\n    name: \"corporation\",\n    fullWidth: true,\n    value: formState.values.corporation,\n    onChange: handleChange,\n    SelectProps: {\n      native: true\n    },\n    helpertext: hasError(\"userRole\") ? formState.errors.userRole[0] : null,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }, \"Please select Corporate\"), corporateData.map((option, index) => __jsx(\"option\", {\n    key: option.index,\n    value: option.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 19\n    }\n  }, option.name)))) : \"\", __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"E-mail\",\n    label: \"E-mail *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helpertext: hasError(\"email\") ? formState.errors.email[0] : null,\n    error: hasError(\"email\"),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: classes.positionRelative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Password\",\n    label: \"Password *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"password\",\n    fullWidth: true,\n    helpertext: hasError(\"password\") ? formState.errors.password[0] : null,\n    error: hasError(\"password\"),\n    onChange: handleChange,\n    type: eyeStatus ? \"password\" : \"text\",\n    value: formState.values.password || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 15\n    }\n  }), eyeStatus ? __jsx(Box, {\n    className: clsx(classes.eyeWrapper, classes.eyeVisible),\n    onClick: () => setEyeStatus(!eyeStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, __jsx(VisibilityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 19\n    }\n  })) : __jsx(Box, {\n    className: clsx(classes.eyeWrapper, classes.eyeOff),\n    onClick: () => setEyeStatus(!eyeStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 17\n    }\n  }, __jsx(VisibilityOffIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 19\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: handleCheckboxChange,\n      name: \"doNotSell\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: classes.modalTriggerLable,\n    onClick: modalTriggering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }\n  }, \"Do not sell my personal information.\"), __jsx(Modal, {\n    fullWidth: true,\n    open: modalState,\n    handleClose: handleClose,\n    iFrame: true,\n    title: __jsx(\"h4\", {\n      className: classes.modalTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 22\n      }\n    }, \"MY DATA RIGHTS\"),\n    content: getTemplateData && getTemplateData.content.length ? ReactHtmlParser(getTemplateData.content) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.marginNegative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: handleCheckboxChange1,\n      name: \"privacyPolicy\",\n      color: \"primary\",\n      checked: templeteCheckboxes.privacyPolicy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: classes.modalNoneTriggerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 15\n    }\n  }, \"I accept\"), __jsx(\"span\", {\n    className: classes.modalTriggerLable,\n    onClick: modalTriggering1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 13\n    }\n  }, \"privacy policy\"), __jsx(Modal, {\n    fullWidth: true,\n    open: modalOneState,\n    handleClose: handleClose1,\n    iFrame: true // title={<h4 className={classes.modalTitle}>Privacy Policy</h4>}\n    ,\n    content: privayPolicyData && privayPolicyData.content.length ? ReactHtmlParser(privayPolicyData.content) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.marginNegative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: handleCheckboxChange1,\n      name: \"termsConditions\",\n      color: \"primary\",\n      checked: templeteCheckboxes.termsConditions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: classes.modalNoneTriggerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 13\n    }\n  }, \"I have read and understood\"), __jsx(\"span\", {\n    className: classes.modalTriggerLable,\n    onClick: modalTriggering2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 13\n    }\n  }, \"terms and conditions.\"), __jsx(Modal, {\n    fullWidth: true,\n    open: modalTwoState,\n    handleClose: handleClose2,\n    iFrame: true // title={<h4 className={classes.modalTitle}></h4>}\n    ,\n    content: termsNcondtionData && termsNcondtionData.content.length ? ReactHtmlParser(termsNcondtionData.content) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 15\n    }\n  }, \"Fields that are marked with an asterisk (*) sign are required.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    disabled: disableState,\n    type: \"submit\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.commonBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }\n  }, \"Sign Up\")), props.setSignUpOpen ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 17\n    }\n  }, \"Already have an account?\"), __jsx(\"span\", {\n    onClick: () => props.setSignUpOpen(false),\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 17\n    }\n  }, \"\\xA0 Sign In\"))) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 15\n    }\n  }, \"Already have an account?\", \" \", __jsx(Link, {\n    href: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: classes.authLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 19\n    }\n  }, __jsx(LearnMoreLink, {\n    title: \"Sign in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/SignupSimple/components/Form/Form.js"],"names":["Box","Button","Checkbox","FormControlLabel","Grid","makeStyles","TextField","Typography","VisibilityIcon","VisibilityOffIcon","clsx","LearnMoreLink","Modal","Toast","useRouter","React","useEffect","useState","ReactHtmlParser","validate","Link","ApiRoutes","ApiHelper","useStyles","theme","root","width","link","color","cursor","fontWeight","commonBtn","padding","backgroundColor","fontSize","border","textAlign","transition","boxShadow","cusTextPrimary","modalNoneTriggerText","marginRight","verticalAlign","paddingRight","marginLeft","modalTriggerLable","eyeWrapper","position","top","transform","lineHeight","right","fill","negativeMarginTop","marginTop","marginNegative","listings","modalTitle","marginBottom","modalHeading","positionRelative","loader","display","minHeight","justifyContent","alignItems","schema","email","presence","allowEmpty","message","length","maximum","firstName","lastName","userRole","password","minimum","userRoles","value","label","Form","props","cmsData","universityData","corporateData","classes","router","formState","setFormState","isValid","values","touched","errors","doNotSell","setDoNotSell","templeteCheckboxes","setTempleteCheckboxes","termsConditions","privacyPolicy","modalState","setModalState","modalOneState","setModalOneState","modalTwoState","setModalTwoState","eyeStatus","setEyeStatus","getTemplateData","setGetTemplateData","termsNcondtionData","setTermsNcondtionData","privayPolicyData","setPrivacyPolicyData","disableState","setDisableState","getData","filter","e","pageName","termsConditionData","privacyPolicyData","prevFormstate","corporation","university","handleChange","event","persist","target","name","type","checked","handleSubmit","preventDefault","data","role","corporate","response","FetchFromServer","SIGNUP","service","url","method","authenticate","undefined","isError","fire","icon","title","categoryId","setSignUpOpen","push","messages","handleCheckboxChange","handleCheckboxChange1","modalTriggering","modalTriggering1","modalTriggering2","handleClose","handleClose1","handleClose2","hasError","field","native","map","option","index","eyeVisible","eyeOff","content","authLink"],"mappings":"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","sourcesContent":["import Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport clsx from \"clsx\";\r\nimport { LearnMoreLink } from \"components/atoms\";\r\nimport { Modal } from \"components/common\";\r\nimport Toast from \"components/toaster\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport validate from \"validate.js\";\r\nimport Link from 'next/link';\r\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\r\nimport { ApiHelper } from \"../../../../helper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    color: \"#3f51b5\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"600\",\r\n  },\r\n  commonBtn: {\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  cusTextPrimary: {\r\n    \"& .MuiTypography-colorPrimary\": {\r\n      color: \"#5120ff\",\r\n    },\r\n  },\r\n  modalNoneTriggerText:\r\n  {\r\n    marginRight: \"5px\",\r\n    fontWeight: \"500\",\r\n    verticalAlign: \"middle\",\r\n    paddingRight: \"17px\",\r\n    marginLeft: \"-14px\"\r\n  },\r\n  modalTriggerLable: {\r\n    marginLeft: \"-16px\",\r\n    cursor: \"pointer\",\r\n    color: \"#5120ff\",\r\n    fontWeight: \"500\",\r\n    verticalAlign: \"middle\",\r\n  },\r\n  eyeWrapper: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    lineHeight: \"10px\",\r\n    right: 20,\r\n    cursor: \"pointer\",\r\n    \"& svg\": {\r\n      fill: \"#5120ff\",\r\n    },\r\n  },\r\n  negativeMarginTop: {\r\n    marginTop: \"-2px\",\r\n  },\r\n  marginNegative:\r\n  {\r\n    marginTop: \"-28px\"\r\n  },\r\n  listings: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  modalTitle: {\r\n    fontSize: \"18px\",\r\n    marginBottom: \"-15px\",\r\n  },\r\n  modalHeading: {\r\n    fontSize: \"18px\",\r\n    marginTop: \"15px\",\r\n    marginBottom: \"8px\",\r\n  },\r\n  positionRelative: {\r\n    position: \"relative\",\r\n  },\r\n  loader: {\r\n    display: \"flex\",\r\n    minHeight: \"200px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n    email: true,\r\n    length: {\r\n      maximum: 300,\r\n    },\r\n  },\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n    length: {\r\n      maximum: 120,\r\n    },\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n    length: {\r\n      maximum: 120,\r\n    },\r\n  },\r\n  userRole: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst userRoles = [\r\n  {\r\n    value: \"Individual\",\r\n    label: \"Individual\",\r\n  },\r\n  {\r\n    value: \"Student\",\r\n    label: \"Student\",\r\n  },\r\n  {\r\n    value: \"Corporate Employee\",\r\n    label: \"Corporate Employee\",\r\n  },\r\n];\r\n\r\nconst Form = (props) => {\r\n  const { cmsData, universityData, corporateData } = props\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n  const [doNotSell, setDoNotSell] = React.useState(false);\r\n  const [templeteCheckboxes, setTempleteCheckboxes] = React.useState({\r\n    termsConditions: true,\r\n    privacyPolicy: true\r\n  });\r\n  const [modalState, setModalState] = React.useState(false);\r\n  const [modalOneState, setModalOneState] = React.useState(false);\r\n  const [modalTwoState, setModalTwoState] = React.useState(false);\r\n  const [eyeStatus, setEyeStatus] = React.useState(true);\r\n\r\n  // For Get Do not sell Modal Content\r\n  const [getTemplateData, setGetTemplateData] = useState(null);\r\n  const [termsNcondtionData,setTermsNcondtionData]=useState(null);\r\n  const [privayPolicyData,setPrivacyPolicyData]=useState(null);\r\n  const [disableState,setDisableState]=useState(true)\r\n\r\n\r\n  // For Get Template Data\r\n  useEffect(() => {\r\n    if (cmsData && cmsData.length) {\r\n      let getData = cmsData.filter((e) => e.pageName === \"Do Not Sell\");\r\n      setGetTemplateData(...getData);\r\n      let termsConditionData=cmsData.filter((e) => e.pageName === \"Terms And Condition\")\r\n      setTermsNcondtionData(...termsConditionData)\r\n      let privacyPolicyData=cmsData.filter((e) => e.pageName === \"Privacy Policy\")\r\n      setPrivacyPolicyData(...privacyPolicyData);\r\n    }\r\n  }, [cmsData]);\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  React.useEffect(() => {\r\n    const { userRole } = formState.values;\r\n    if (userRole === \"Student\") {\r\n      // getUniversityData();\r\n      setFormState((prevFormstate) => ({\r\n        ...prevFormstate,\r\n        values: {\r\n          ...prevFormstate.values,\r\n          corporation: \"\",\r\n        },\r\n      }));\r\n    } else if (userRole === \"Corporate Employee\") {\r\n      // getCorporateData();\r\n      setFormState((prevFormstate) => ({\r\n        ...prevFormstate,\r\n        values: {\r\n          ...prevFormstate.values,\r\n          university: \"\",\r\n        },\r\n      }));\r\n    } else if (userRole === \"Individual\") {\r\n      setFormState((prevFormstate) => ({\r\n        ...prevFormstate,\r\n        values: {\r\n          ...prevFormstate.values,\r\n          corporation: \"\",\r\n          university: \"\",\r\n        },\r\n      }));\r\n    }\r\n  }, [formState.values.userRole]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formState.isValid) {\r\n      const data = {\r\n        firstName: formState.values.firstName,\r\n        lastName: formState.values.lastName,\r\n        email: formState.values.email,\r\n        password: formState.values.password,\r\n        role: formState.values.userRole,\r\n        university: formState.values.university,\r\n        corporate: formState.values.corporation,\r\n        doNotSell: doNotSell,\r\n      };\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.SIGNUP.service,\r\n        ApiRoutes.SIGNUP.url,\r\n        ApiRoutes.SIGNUP.method,\r\n        ApiRoutes.SIGNUP.authenticate,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.data.message,\r\n        });\r\n        if (props.categoryId && props.categoryId !== \"\") {\r\n          props.setSignUpOpen(false);\r\n          //props.handleAuthModalClose()\r\n        } else {\r\n          router.push(\"/signin\");\r\n        }\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.messages[0],\r\n        });\r\n      }\r\n    }\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    setDoNotSell(event.target.checked);\r\n  };\r\n  const handleCheckboxChange1 = (e) => {\r\n\r\n    setTempleteCheckboxes({...templeteCheckboxes,[e.target.name]:e.target.checked});\r\n  }\r\n  useEffect(() => {\r\n    if (templeteCheckboxes.privacyPolicy && templeteCheckboxes.termsConditions) {\r\n      setDisableState(false)\r\n    }\r\n    else {\r\n      setDisableState(true)\r\n    }\r\n  }, [templeteCheckboxes])\r\n  const modalTriggering = () => {\r\n    setModalState(true);\r\n  };\r\n  const modalTriggering1 = () => {\r\n    setModalOneState(true);\r\n  };\r\n  const modalTriggering2 = () => {\r\n    setModalTwoState(true);\r\n  };\r\n  const handleClose = () => {\r\n    setModalState(false);\r\n  };\r\n  const handleClose1 = () => {\r\n    setModalOneState(false);\r\n  };\r\n  const handleClose2 = () => {\r\n    setModalTwoState(false);\r\n  };\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n  return (\r\n    <div className={classes.root}>\r\n      <form name='password-reset-form' method='post' onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              placeholder='First name'\r\n              label='First name *'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='firstName'\r\n              fullWidth\r\n              helpertext={\r\n                hasError(\"firstName\") ? formState.errors.firstName[0] : null\r\n              }\r\n              error={hasError(\"firstName\")}\r\n              onChange={handleChange}\r\n              type='firstName'\r\n              value={formState.values.firstName || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              placeholder='Last name'\r\n              label='Last name *'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='lastName'\r\n              fullWidth\r\n              helpertext={\r\n                hasError(\"lastName\") ? formState.errors.lastName[0] : null\r\n              }\r\n              error={hasError(\"lastName\")}\r\n              onChange={handleChange}\r\n              type='lastName'\r\n              value={formState.values.lastName || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='outlined-select-currency-native'\r\n              select\r\n              size='medium'\r\n              name={\"userRole\"}\r\n              fullWidth\r\n              label=''\r\n              value={formState.values.userRole}\r\n              onChange={handleChange}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n              helpertext={\r\n                hasError(\"userRole\") ? formState.errors.userRole[0] : null\r\n              }\r\n              variant='outlined'\r\n            >\r\n              <option value={\"\"}>Please select Type</option>\r\n              {userRoles.map((option, index) => (\r\n                <option key={index} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          {formState.values.userRole === \"Student\" ? (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id='outlined-select-currency-native'\r\n                select\r\n                size='medium'\r\n                name={\"university\"}\r\n                fullWidth\r\n                value={formState.values.university}\r\n                onChange={handleChange}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                helpertext={\r\n                  hasError(\"userRole\") ? formState.errors.userRole[0] : null\r\n                }\r\n                variant='outlined'\r\n              >\r\n                <option value={\"\"}>Please select University</option>\r\n                {universityData.map((option, index) => (\r\n                  <option key={index} value={option.name}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {formState.values.userRole === \"Corporate Employee\" ? (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id='outlined-select-currency-native'\r\n                select\r\n                size='medium'\r\n                name={\"corporation\"}\r\n                fullWidth\r\n                value={formState.values.corporation}\r\n                onChange={handleChange}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                helpertext={\r\n                  hasError(\"userRole\") ? formState.errors.userRole[0] : null\r\n                }\r\n                variant='outlined'\r\n              >\r\n                <option value={\"\"}>Please select Corporate</option>\r\n                {corporateData.map((option, index) => (\r\n                  <option key={option.index} value={option.name}>\r\n                    {option.name}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              placeholder='E-mail'\r\n              label='E-mail *'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='email'\r\n              fullWidth\r\n              helpertext={hasError(\"email\") ? formState.errors.email[0] : null}\r\n              error={hasError(\"email\")}\r\n              onChange={handleChange}\r\n              type='email'\r\n              value={formState.values.email || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box className={classes.positionRelative}>\r\n              <TextField\r\n                placeholder='Password'\r\n                label='Password *'\r\n                variant='outlined'\r\n                size='medium'\r\n                name='password'\r\n                fullWidth\r\n                helpertext={\r\n                  hasError(\"password\") ? formState.errors.password[0] : null\r\n                }\r\n                error={hasError(\"password\")}\r\n                onChange={handleChange}\r\n                type={eyeStatus ? \"password\" : \"text\"}\r\n                value={formState.values.password || \"\"}\r\n              />\r\n              {eyeStatus ? (\r\n                <Box\r\n                  className={clsx(classes.eyeWrapper, classes.eyeVisible)}\r\n                  onClick={() => setEyeStatus(!eyeStatus)}\r\n                >\r\n                  <VisibilityIcon />\r\n                </Box>\r\n              ) : (\r\n                <Box\r\n                  className={clsx(classes.eyeWrapper, classes.eyeOff)}\r\n                  onClick={() => setEyeStatus(!eyeStatus)}\r\n                >\r\n                  <VisibilityOffIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={handleCheckboxChange}\r\n                  name='doNotSell'\r\n                  color='primary'\r\n                />\r\n              }\r\n            />\r\n            <span\r\n              className={classes.modalTriggerLable}\r\n              onClick={modalTriggering}\r\n            >\r\n              Do not sell my personal information.\r\n            </span>\r\n            <Modal\r\n              fullWidth={true}\r\n              open={modalState}\r\n              handleClose={handleClose}\r\n              iFrame={true}\r\n              title={<h4 className={classes.modalTitle}>MY DATA RIGHTS</h4>}\r\n              content={\r\n                getTemplateData && getTemplateData.content.length\r\n                  ? ReactHtmlParser(getTemplateData.content)\r\n                  : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.marginNegative}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={handleCheckboxChange1}\r\n                  name='privacyPolicy'\r\n                  color='primary'\r\n                  checked={templeteCheckboxes.privacyPolicy}\r\n                />\r\n              }\r\n            /><span className={classes.modalNoneTriggerText}>I accept</span>\r\n            <span\r\n              className={classes.modalTriggerLable}\r\n              onClick={modalTriggering1}\r\n            >\r\n              privacy policy\r\n            </span>\r\n\r\n            <Modal\r\n              fullWidth={true}\r\n              open={modalOneState}\r\n              handleClose={handleClose1}\r\n              iFrame={true}\r\n              // title={<h4 className={classes.modalTitle}>Privacy Policy</h4>}\r\n              content={\r\n                privayPolicyData && privayPolicyData.content.length\r\n                  ? ReactHtmlParser(privayPolicyData.content)\r\n                  : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.marginNegative}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  onChange={handleCheckboxChange1}\r\n                  name='termsConditions'\r\n                  color='primary'\r\n                  checked={templeteCheckboxes.termsConditions}\r\n\r\n                />\r\n              }\r\n            />\r\n            <span className={classes.modalNoneTriggerText}>\r\n              I have read and understood\r\n            </span>\r\n            <span\r\n              className={classes.modalTriggerLable}\r\n              onClick={modalTriggering2}\r\n            >\r\n              terms and conditions.\r\n            </span>\r\n\r\n            <Modal\r\n              fullWidth={true}\r\n              open={modalTwoState}\r\n              handleClose={handleClose2}\r\n              iFrame={true}\r\n              // title={<h4 className={classes.modalTitle}></h4>}\r\n\r\n              content={\r\n                termsNcondtionData && termsNcondtionData.content.length\r\n                  ? ReactHtmlParser(termsNcondtionData.content)\r\n                  : null\r\n\r\n              }\r\n            />\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <i>\r\n              <Typography variant='subtitle2'>\r\n                Fields that are marked with an asterisk (*) sign are required.\r\n              </Typography>\r\n            </i>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size='large'\r\n              variant='contained'\r\n              disabled={disableState}\r\n              type='submit'\r\n              color='primary'\r\n              fullWidth\r\n              className={classes.commonBtn}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Grid>\r\n          {props.setSignUpOpen ? (\r\n            <Grid item xs={12}>\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Typography\r\n                  variant='subtitle1'\r\n                  color='textPrimary'\r\n                  align='center'\r\n                  className={classes.cusTextPrimary}\r\n                >\r\n                  Already have an account?\r\n                </Typography>\r\n                <span\r\n                  onClick={() => props.setSignUpOpen(false)}\r\n                  className={classes.link}\r\n                >\r\n                  &nbsp; Sign In\r\n                </span>\r\n              </Box>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant='subtitle1'\r\n                color='textPrimary'\r\n                align='center'\r\n                className={classes.cusTextPrimary}\r\n              >\r\n                Already have an account?{\" \"}\r\n                <Link href='/signin'>\r\n                  <a className={classes.authLink}>\r\n                    <LearnMoreLink title='Sign in' />\r\n                  </a>\r\n                </Link>\r\n\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}