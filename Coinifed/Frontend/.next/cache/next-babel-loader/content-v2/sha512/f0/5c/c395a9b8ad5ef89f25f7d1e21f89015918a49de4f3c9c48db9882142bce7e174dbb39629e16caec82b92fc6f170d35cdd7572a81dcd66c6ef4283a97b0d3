{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport blue from '@material-ui/core/colors/blue';\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from 'clsx';\nimport Toast from 'components/toaster';\nimport { ApiRoutes } from 'config';\nimport { ApiHelper } from 'helper';\nimport router from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport InputMask from 'react-input-mask';\nimport Swal from 'sweetalert2';\nimport validate from 'validate.js';\nimport { useStore } from '../../../../store';\nvar useStyles = makeStyles(function (theme) {\n  var _cardInput;\n\n  return {\n    root: {\n      '& .MuiTextField-root': {\n        backgroundColor: '#fff'\n      }\n    },\n    sectionDescription: {\n      background: blue[900]\n    },\n    sectionAlternateForm: {\n      background: 'transparent',\n      backgroundImage: \"linear-gradient(180deg, \".concat(theme.palette.background.paper, \" 300px, \").concat(theme.palette.primary.dark, \" 0%)\")\n    },\n    textWhite: {\n      color: '#fff'\n    },\n    error_msg: {\n      color: \"red\"\n    },\n    success_msg: {\n      color: \"green\"\n    },\n    heroContainer: {\n      minWidth: \"1236px\"\n    },\n    contentSection: {\n      minHeight: \"500px\",\n      position: \"relative\",\n      '& p': {\n        fontSize: \"18px\",\n        lineHeight: \"28px\"\n      }\n    },\n    sectionHeader: {\n      paddingBottom: \"30px\",\n      borderBottom: \"1px solid #ddd\",\n      marginBottom: \"20px\"\n    },\n    listItem: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    modualWrap: {\n      borderBottom: \"1px solid #ddd\",\n      marginBottom: \"20px\"\n    },\n    modualAmount: {\n      width: \"100px\",\n      fontWeight: \"700\"\n    },\n    modualList: {\n      fontSize: \"18px\",\n      position: \"relative\",\n      paddingLeft: \"20px\",\n      paddingBottom: \"20px\",\n      fontWeight: \"300\",\n      color: \"#020202\",\n      '&::before': {\n        content: ' \"\" ',\n        display: \"block\",\n        width: \"10px\",\n        height: \"10px\",\n        position: \"absolute\",\n        backgroundColor: '#000',\n        top: '5px',\n        left: '0px',\n        borderRadius: \"50%\"\n      }\n    },\n    calculationBlock: {\n      paddingBottom: \"15px\"\n    },\n    calcTitle: {\n      paddingRight: \"20px\",\n      textAlign: \"right\",\n      width: \"calc(100% - 100px)\",\n      fontSize: '18px'\n    },\n    calcValue: {\n      width: \"100px\",\n      fontSize: '18px',\n      fontWeight: '800'\n    },\n    apply_btn: {\n      width: \"200px\"\n    },\n    paymentWrap: {\n      backgroundColor: \"#eeeeee85\",\n      border: \"1px solid #ddd\"\n    },\n    paymentLoader: {\n      position: 'absolute',\n      zIndex: '10',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      background: '#fff',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    formError: {\n      color: \"red\",\n      fontSize: \"18px\"\n    },\n    cardInput: (_cardInput = {\n      border: \"1px solid rgba(0, 0, 0, 0.23)\",\n      padding: \"18.5px 14px\",\n      height: \"1.1876em\",\n      margin: \"0\",\n      display: \"block\",\n      minWidth: \"0\",\n      background: \"none\",\n      // boxSizing: \"content-box\",\n      letterSpacing: \"inherit\",\n      animationDuration: \"10ms\",\n      borderRadius: \"4px\",\n      backgroundColor: \"#fff\"\n    }, _defineProperty(_cardInput, \"height\", \"61px\"), _defineProperty(_cardInput, \"fontSize\", \"1rem\"), _defineProperty(_cardInput, \"width\", \"100%\"), _cardInput),\n    promoCodeBlock: {\n      fontSize: \"16px\"\n    },\n    promoCode: {\n      padding: \"5px 10px\",\n      fontWeight: \"900\",\n      color: \"#f95c20\",\n      border: \"1px solid #f96b36\",\n      margin: \"0px 5px\",\n      borderRadius: \"20px\"\n    },\n    paymentButton: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      padding: '10px 30px',\n      color: '#fff',\n      fontWeight: '900',\n      fontSize: '16px',\n      width: \"100%\"\n    },\n    fontWeight700: {\n      fontWeight: \"700\"\n    },\n    errorText: {\n      color: 'red',\n      fontSize: \"14px\"\n    }\n  };\n});\nvar schema = {\n  cardHolderName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 120\n    }\n  },\n  cardNumber: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 17,\n      maximum: 19\n    }\n  },\n  expiry: {\n    presence: {\n      allowEmpty: false,\n      message: 'date is required'\n    }\n  },\n  cvc: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 3,\n      maximum: 4\n    }\n  }\n};\n\nvar OrderDetail = function OrderDetail(props) {\n  var authToken = props.authToken;\n  var classes = useStyles();\n  var modualData = props.modualData,\n      selectedId = props.selectedId,\n      courseId = props.courseId,\n      courseTitle = props.courseTitle,\n      promoId = props.promoId;\n\n  var _useState = useState(false),\n      loader = _useState[0],\n      setLoader = _useState[1];\n\n  var _useState2 = useState(false),\n      paymentloader = _useState2[0],\n      setPaymentLoader = _useState2[1];\n\n  var _useState3 = useState([]),\n      modualFinal = _useState3[0],\n      setModualFinal = _useState3[1]; // As per condition 4 module 1000 and 8 module 2000\n\n\n  var _useState4 = useState(''),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(''),\n      formError = _useState5[0],\n      setFormError = _useState5[1];\n\n  var _useStore = useStore(),\n      getCartLength = _useStore.getCartLength;\n\n  var _React$useState = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formState = _React$useState2[0],\n      setFormState = _React$useState2[1];\n\n  var theme = useTheme();\n  var isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  useEffect(function (props) {\n    fetchUserData();\n  }, []);\n  useEffect(function () {\n    var errors = validate(formState.values, schema);\n    setFormState(function (formState) {\n      return _objectSpread(_objectSpread({}, formState), {}, {\n        isValid: errors ? false : true,\n        errors: errors || {}\n      });\n    });\n  }, []);\n  useEffect(function () {\n    var modualData = [];\n    setModualFinal(props.selectedId);\n  }, [modualData]);\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    var errors = validate(_objectSpread(_objectSpread({}, formState.values), {}, _defineProperty({}, event.target.name, event.target.value)), schema);\n    setFormState(function (formState) {\n      return _objectSpread(_objectSpread({}, formState), {}, {\n        errors: _objectSpread({}, errors),\n        values: _objectSpread(_objectSpread({}, formState.values), {}, _defineProperty({}, event.target.name, event.target.value)),\n        touched: _objectSpread(_objectSpread({}, formState.touched), {}, _defineProperty({}, event.target.name, true)),\n        isValid: errors ? false : true\n      });\n    });\n    setFormError('');\n    setPaymentResponse('');\n  };\n\n  var fetchUserData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return new ApiHelper().FetchFromServer(ApiRoutes.GETUSERDETAILS.service, ApiRoutes.GETUSERDETAILS.url, ApiRoutes.GETUSERDETAILS.method, ApiRoutes.GETUSERDETAILS.authenticate, authToken, undefined, undefined);\n\n            case 2:\n              response = _context.sent;\n\n              if (response && !response.isError) {\n                data = response.data.data;\n                setFormState(function (formState) {\n                  return _objectSpread(_objectSpread({}, formState), {}, {\n                    values: {\n                      firstName: data.firstName,\n                      lastName: data.lastName,\n                      email: data.email\n                    }\n                  });\n                });\n                setLoader(false);\n              } else {\n                Toast.fire({\n                  icon: 'error',\n                  title: \"Something went wrong\"\n                });\n                router.push('/signin');\n                localStorage.setItem('orderDetails', '');\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchUserData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handlePayment = function handlePayment() {\n    if (formState.isValid) {\n      var _formState$values = formState.values,\n          firstName = _formState$values.firstName,\n          lastName = _formState$values.lastName,\n          email = _formState$values.email,\n          cardHolderName = _formState$values.cardHolderName,\n          cardNumber = _formState$values.cardNumber,\n          cvc = _formState$values.cvc,\n          expiry = _formState$values.expiry;\n      var getCurrentYear = new Date().getFullYear();\n      var currentYear = getCurrentYear.toString().substring(2);\n      var card_exp_month = expiry.substring(0, 2);\n      var card_exp_year = expiry.substring(3);\n\n      if (card_exp_month > 12) {\n        setFormError(\"Please enter a valid month\");\n        return;\n      }\n\n      if (card_exp_year < currentYear) {\n        setFormError(\"Card expiry can not be set to less than current year\");\n        return;\n      }\n\n      var data = {\n        email: email,\n        name: \"\".concat(firstName).concat(lastName),\n        cardNumber: cardNumber.replace(/\\s/g, \"\"),\n        cardExpMonth: card_exp_month,\n        cardExpYear: card_exp_year,\n        cardCvc: cvc,\n        cardName: cardHolderName,\n        promoId: promoId,\n        moduleId: modualFinal\n      };\n      makePayment(data);\n    } else {\n      setFormState(function (formState) {\n        return _objectSpread(_objectSpread({}, formState), {}, {\n          touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors),\n          isValid: false\n        });\n      });\n    }\n  };\n\n  var _useState6 = useState(''),\n      paymentResponse = _useState6[0],\n      setPaymentResponse = _useState6[1];\n\n  var makePayment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var response, _data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setPaymentLoader(true);\n              props.handleCancelBtn(true);\n              _context2.next = 4;\n              return new ApiHelper().FetchFromServer(ApiRoutes.MAKEPAYMENT.service, ApiRoutes.MAKEPAYMENT.url, ApiRoutes.MAKEPAYMENT.method, ApiRoutes.MAKEPAYMENT.authenticate, authToken, undefined, data);\n\n            case 4:\n              response = _context2.sent;\n\n              if (response && !response.isError) {\n                _data = response.data.data;\n                Toast.fire({\n                  icon: 'success',\n                  title: \"Payment successfull\"\n                });\n                props.handleOrderModalClose();\n                props.handleLoader(true);\n                localStorage.setItem(\"SelectedCourseModules\", JSON.stringify([]));\n                localStorage.setItem(\"purchaseCompleteCourse\", JSON.stringify({}));\n                localStorage.setItem(\"allCourseModules\", JSON.stringify([]));\n                getCartLength(0);\n                alertBox();\n              } else {\n                Toast.fire({\n                  icon: 'error',\n                  title: response.messages[0]\n                });\n                setPaymentResponse(response.messages[0]);\n                setPaymentLoader(false);\n                props.handleCancelBtn(false);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function makePayment(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var alertBox = function alertBox() {\n    Swal.fire({\n      text: 'Your Order has been Successfully Placed',\n      padding: '2em',\n      showDenyButton: false,\n      showCancelButton: false,\n      confirmButtonColor: '#3085d6',\n      confirmButtonText: 'Go  To Dashboard'\n    }).then(function (result) {\n      router.push('/dashboard?pid=billing');\n    });\n  };\n\n  var hasError = function hasError(field) {\n    return formState.touched[field] && formState.errors[field] ? true : false;\n  };\n\n  return __jsx(\"div\", null, __jsx(Box, {\n    className: classes.contentSection\n  }, paymentloader ? __jsx(\"div\", {\n    className: classes.paymentLoader\n  }, __jsx(Box, null, __jsx(CircularProgress, null)), __jsx(Box, {\n    pt: 2\n  }, __jsx(Typography, {\n    variant: \"h6\"\n  }, \"Please Wait....\")), __jsx(Box, null, __jsx(Typography, {\n    variant: \"h6\"\n  }, \"Don't refresh page or don't use back button while payment is in progress.\"))) : \"\", !loader ? __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12\n  }, __jsx(Box, {\n    p: 2,\n    className: clsx(classes.paymentWrap, classes.root)\n  }, __jsx(Typography, {\n    variant: isMd ? 'h5' : 'body1',\n    className: clsx(classes.fontWeight700, classes.sectionHeader)\n  }, \"Payment Details\"), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 2 : 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"First Name\"), __jsx(TextField, {\n    placeholder: \"First name*\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    name: \"firstName\",\n    type: \"firstName\",\n    error: hasError('firstName'),\n    value: formState.values.firstName || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"Last Name\"), __jsx(TextField, {\n    placeholder: \"Last Name *\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    name: \"lastName\",\n    type: \"lastName\",\n    value: formState.values.lastName || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"E-mail\"), __jsx(TextField, {\n    placeholder: \"Email\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    name: \"email\",\n    type: \"email\",\n    value: formState.values.email || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"Card Details*\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"Card Number*\"), __jsx(InputMask, {\n    mask: \"9999-9999-9999-9999\",\n    maskChar: \" \",\n    onChange: handleChange,\n    value: formState.values.cardNumber || ''\n  }, function (inputProps) {\n    return __jsx(TextField, {\n      placeholder: \"9999-9999-9999-9999\",\n      label: \"\",\n      variant: \"outlined\",\n      size: \"medium\",\n      fullWidth: true,\n      name: \"cardNumber\",\n      helpertext: hasError('cardNumber') ? formState.errors.cardNumber[0] : null,\n      error: hasError('cardNumber')\n    });\n  }), hasError('cardNumber') ? __jsx(\"span\", {\n    className: classes.errorText\n  }, formState.errors.cardNumber[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"Expiry* (MM-YY)\"), __jsx(InputMask, {\n    mask: \"99-99\",\n    maskChar: \" \",\n    onChange: handleChange,\n    value: formState.values.expiry || ''\n  }, function (inputProps) {\n    return __jsx(TextField, {\n      placeholder: \"MM-YY\",\n      label: \"\",\n      variant: \"outlined\",\n      size: \"medium\",\n      fullWidth: true,\n      name: \"expiry\",\n      helpertext: hasError('expiry') ? formState.errors.expiry[0] : null,\n      error: hasError('expiry')\n    });\n  }), hasError('expiry') ? __jsx(\"span\", {\n    className: classes.errorText\n  }, formState.errors.expiry[0]) : null, formError ? __jsx(\"span\", {\n    className: classes.errorText\n  }, formError) : null), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"CVC*\"), __jsx(TextField // placeholder=\"CVC*\"\n  , {\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    type: \"password\",\n    fullWidth: true,\n    name: \"cvc\",\n    onChange: handleChange,\n    value: formState.values.cvc || '',\n    helpertext: hasError('cvc') ? formState.errors.cvc[0] : null,\n    error: hasError('cvc')\n  }), hasError('cvc') ? __jsx(\"span\", {\n    className: classes.errorText\n  }, formState.errors.cvc[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle\n  }, \"Card Holder Name*\"), __jsx(TextField, {\n    placeholder: \"Card holder name*\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    name: \"cardHolderName\",\n    helpertext: hasError('cardHolderName') ? formState.errors.cardHolderName[0] : null,\n    error: hasError('cardHolderName'),\n    type: \"cardHolderName\",\n    onChange: handleChange,\n    value: formState.values.cardHolderName || ''\n  }), hasError('cardHolderName') ? __jsx(\"span\", {\n    className: classes.errorText\n  }, formState.errors.cardHolderName[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handlePayment,\n    size: \"large\",\n    className: classes.paymentButton\n  }, \"Make Payment\")), __jsx(Box, {\n    className: classes.formError,\n    pt: 3\n  }, paymentResponse)))))) : \"\"));\n};\n\nexport default OrderDetail;","map":null,"metadata":{},"sourceType":"module"}