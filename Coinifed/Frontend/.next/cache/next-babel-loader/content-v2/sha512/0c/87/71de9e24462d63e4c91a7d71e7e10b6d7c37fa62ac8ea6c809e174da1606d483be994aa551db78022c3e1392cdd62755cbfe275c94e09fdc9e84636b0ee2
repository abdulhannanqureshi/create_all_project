{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\About\\\\components\\\\Team\\\\Team.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from \"@material-ui/core/Popover\";\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from \"clsx\";\nimport { SectionHeader } from \"components/molecules\";\nimport { CardBase } from \"components/organisms\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport AppConfig from \"../../../../config/appConfig\";\nconst useStyles = makeStyles(theme => ({\n  cardBase: {\n    boxShadow: \"none\",\n    background: theme.palette.alternate.main,\n    borderRadius: theme.spacing(1),\n    \"& .card-base__content\": {\n      padding: theme.spacing(1),\n      [theme.breakpoints.up(\"sm\")]: {\n        padding: theme.spacing(3)\n      },\n      [theme.breakpoints.down(\"md\")]: {\n        padding: theme.spacing(1)\n      }\n    },\n    \"& a\": {\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: \"0.7rem\"\n      }\n    }\n  },\n  avatar: {\n    width: 110,\n    objectFit: \"cover\",\n    objectPosition: \"center top\",\n    height: 110,\n    border: `4px solid ${theme.palette.alternate.dark}`,\n    borderRadius: \"100%\",\n    boxShadow: \"0 5px 10px 0 rgba(0, 0, 0, 0.1)\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: 80,\n      height: 80\n    }\n  },\n  listItem: {\n    padding: 0,\n    marginBottom: 10,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\"\n    }\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down(\"md\")]: {\n      marginRight: theme.spacing(1.5)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: theme.spacing(0)\n    }\n  },\n  listItemText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    margin: 0,\n    height: \"100%\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"1rem\"\n    }\n  },\n  popover_div: {\n    maxWidth: \"400px\",\n    textAlign: \"justify\",\n    padding: \"10px\"\n  },\n  customised_popover: {\n    boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  smallCommonBtn: {\n    minWidth: 132,\n    padding: \"8px 10px\",\n    fontSize: 15\n  }\n}));\n\nconst Team = props => {\n  _s();\n\n  const {\n    className,\n    cmsData,\n    teamList\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"cmsData\", \"teamList\"]);\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  const [authorDetail, setauthorDetails] = React.useState([]);\n\n  const handleClick = (event, id) => {\n    setAnchorEl(null);\n    let required_id = event.currentTarget.id;\n    let newData = teamList.filter((newArray, index) => index == required_id);\n    setauthorDetails(newData);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? `simple-popover` : undefined; // For Get Template Data\n\n  const {\n    0: getTemplateData,\n    1: setGetTemplateData\n  } = useState(null);\n  useEffect(() => {\n    if (cmsData && cmsData.length) {\n      let getData = cmsData.filter(e => e.titleSlug === \"aboutUs\");\n      setGetTemplateData(...getData);\n    }\n  }, [cmsData]);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }), __jsx(SectionHeader, {\n    title: getTemplateData && getTemplateData.blockTitle2.length ? getTemplateData.blockTitle2 : \"Meet our team\",\n    subtitle: getTemplateData && getTemplateData.block2.length ? ReactHtmlParser(getTemplateData.block2) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 2 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, teamList && teamList.length ? teamList.map((item, index) => item.isActive ? __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    md: 4,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, __jsx(CardBase, {\n    className: classes.cardBase,\n    liftUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, __jsx(ListItem, {\n    disableGutters: true,\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, __jsx(ListItemAvatar, {\n    className: classes.listItemAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, __jsx(Avatar, {\n    src: `${AppConfig.IMAGE_URL}/${item.teamMemberImage}`,\n    srcSet: `${AppConfig.IMAGE_URL}/${item.teamMemberImage}`,\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, __jsx(ListItemText, {\n    className: classes.listItemText,\n    primary: `${item.firstName} ${item.lastName}`,\n    secondary: item.designation,\n    primaryTypographyProps: {\n      className: classes.title,\n      variant: \"h6\",\n      align: isMd ? \"left\" : \"center\"\n    },\n    secondaryTypographyProps: {\n      color: \"textPrimary\",\n      align: isMd ? \"left\" : \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }))), __jsx(Button, {\n    id: index,\n    href: \"#outlined-buttons\",\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    className: clsx(classes.commonBtn, classes.smallCommonBtn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, \"More Details\")), authorDetail.map(data => {\n    return __jsx(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      elevation: 2,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      className: classes.customised_popover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: classes.popover_div,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, ReactHtmlParser(data.aboutUs)));\n  })) : null) : null));\n};\n\n_s(Team, \"JLjefGFHoZ7FZ5zBTzp9aqAy/84=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Team;\nTeam.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string\n};\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/About/components/Team/Team.js"],"names":["Avatar","Button","Grid","ListItem","ListItemAvatar","ListItemText","Popover","makeStyles","useTheme","useMediaQuery","clsx","SectionHeader","CardBase","PropTypes","React","useEffect","useState","ReactHtmlParser","AppConfig","useStyles","theme","cardBase","boxShadow","background","palette","alternate","main","borderRadius","spacing","padding","breakpoints","up","down","fontSize","avatar","width","objectFit","objectPosition","height","border","dark","listItem","marginBottom","flexDirection","listItemAvatar","marginRight","listItemText","display","justifyContent","margin","title","fontWeight","popover_div","maxWidth","textAlign","customised_popover","commonBtn","backgroundColor","minWidth","transition","color","smallCommonBtn","Team","props","className","cmsData","teamList","rest","classes","anchorEl","setAnchorEl","isMd","defaultMatches","authorDetail","setauthorDetails","handleClick","event","id","required_id","currentTarget","newData","filter","newArray","index","handleClose","open","Boolean","undefined","getTemplateData","setGetTemplateData","length","getData","e","titleSlug","blockTitle2","block2","map","item","isActive","IMAGE_URL","teamMemberImage","firstName","lastName","designation","variant","align","data","vertical","horizontal","aboutUs","propTypes","string"],"mappings":"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","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport clsx from \"clsx\";\r\nimport { SectionHeader } from \"components/molecules\";\r\nimport { CardBase } from \"components/organisms\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport AppConfig from \"../../../../config/appConfig\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardBase: {\r\n    boxShadow: \"none\",\r\n    background: theme.palette.alternate.main,\r\n    borderRadius: theme.spacing(1),\r\n    \"& .card-base__content\": {\r\n      padding: theme.spacing(1),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        padding: theme.spacing(3),\r\n      },\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    \"& a\": {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"0.7rem\",\r\n      },\r\n    },\r\n  },\r\n  avatar: {\r\n    width: 110,\r\n    objectFit:\"cover\",\r\n    objectPosition:\"center top\",\r\n    height: 110,\r\n    border: `4px solid ${theme.palette.alternate.dark}`,\r\n    borderRadius: \"100%\",\r\n    boxShadow: \"0 5px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 80,\r\n      height: 80,\r\n    },\r\n  },\r\n  listItem: {\r\n    padding: 0,\r\n    marginBottom: 10,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  listItemAvatar: {\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginRight: theme.spacing(0),\r\n    },\r\n  },\r\n  listItemText: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    margin: 0,\r\n    height: \"100%\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n  popover_div: {\r\n    maxWidth: \"400px\",\r\n    textAlign: \"justify\",\r\n    padding: \"10px\",\r\n  },\r\n  customised_popover: {\r\n    boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\r\n  },\r\n  commonBtn: {\r\n    display: \"inline-block\",\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    minWidth: 200,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  smallCommonBtn: {\r\n    minWidth: 132,\r\n    padding: \"8px 10px\",\r\n    fontSize: 15,\r\n  },\r\n}));\r\n\r\nconst Team = (props) => {\r\n  const { className, cmsData, teamList, ...rest } = props;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n  const [authorDetail, setauthorDetails] = React.useState([]);\r\n\r\n  const handleClick = (event, id) => {\r\n    setAnchorEl(null);\r\n    let required_id = event.currentTarget.id;\r\n    let newData = teamList.filter((newArray, index) => index == required_id);\r\n    setauthorDetails(newData);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? `simple-popover` : undefined;\r\n\r\n  // For Get Template Data\r\n  const [getTemplateData, setGetTemplateData] = useState(null);\r\n  useEffect(() => {\r\n    if (cmsData && cmsData.length) {\r\n      let getData = cmsData.filter((e) => e.titleSlug === \"aboutUs\");\r\n      setGetTemplateData(...getData);\r\n    }\r\n  }, [cmsData]);\r\n\r\n  return (\r\n    <div className={className} {...rest}>\r\n      <SectionHeader\r\n        title={\r\n          getTemplateData && getTemplateData.blockTitle2.length\r\n            ? getTemplateData.blockTitle2\r\n            : \"Meet our team\"\r\n        }\r\n        subtitle={\r\n          getTemplateData && getTemplateData.block2.length\r\n            ? ReactHtmlParser(getTemplateData.block2)\r\n            : null\r\n        }\r\n      />\r\n      <Grid container spacing={isMd ? 2 : 1}>\r\n        {teamList && teamList.length\r\n          ? teamList.map((item, index) => (\r\n            item.isActive ?\r\n              <Grid item xs={6} sm={6} md={4} key={index} data-aos='fade-up'>\r\n                <CardBase className={classes.cardBase} liftUp>\r\n                  <ListItem disableGutters className={classes.listItem}>\r\n                    <ListItemAvatar className={classes.listItemAvatar}>\r\n                      <Avatar\r\n                        src={`${AppConfig.IMAGE_URL}/${item.teamMemberImage}`}\r\n                        srcSet={`${AppConfig.IMAGE_URL}/${item.teamMemberImage}`}\r\n                        className={classes.avatar}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <div>\r\n                      <ListItemText\r\n                        className={classes.listItemText}\r\n                        primary={`${item.firstName} ${item.lastName}`}\r\n                        secondary={item.designation}\r\n                        primaryTypographyProps={{\r\n                          className: classes.title,\r\n                          variant: \"h6\",\r\n                          align: isMd ? \"left\" : \"center\",\r\n                        }}\r\n                        secondaryTypographyProps={{\r\n                          color: \"textPrimary\",\r\n                          align: isMd ? \"left\" : \"center\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </ListItem>\r\n                  <Button\r\n                    id={index}\r\n                    href='#outlined-buttons'\r\n                    aria-describedby={id}\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={handleClick}\r\n                    className={clsx(classes.commonBtn, classes.smallCommonBtn)}\r\n                  >\r\n                    More Details\r\n                  </Button>\r\n                </CardBase>\r\n                {authorDetail.map((data) => {\r\n                  return (\r\n                    <Popover\r\n                      id={id}\r\n                      open={open}\r\n                      anchorEl={anchorEl}\r\n                      onClose={handleClose}\r\n                      elevation={2}\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                      className={classes.customised_popover}\r\n                    >\r\n                      <div className={classes.popover_div}>\r\n                        {ReactHtmlParser(data.aboutUs)}\r\n                      </div>\r\n                    </Popover>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              : null\r\n            ))\r\n          : null}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nTeam.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Team;\r\n"]},"metadata":{},"sourceType":"module"}