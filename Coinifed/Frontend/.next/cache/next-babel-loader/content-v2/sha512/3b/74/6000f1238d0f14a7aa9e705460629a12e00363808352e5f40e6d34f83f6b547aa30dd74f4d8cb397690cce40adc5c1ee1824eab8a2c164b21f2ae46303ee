{"ast":null,"code":"import _regeneratorRuntime from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport Axios from \"axios\";\nimport { ErrorHandlerHelper } from \"./ErrorHandlerHelper\";\nimport { SuccessHandlerHelper } from \"./SuccessHandlerHelper\";\nimport AppConfig from \"../config/appConfig\";\n/**\r\n * ApiHelper Class - For making Api Requests\r\n */\n\nvar CancelToken = Axios.CancelToken;\nvar cancel;\nexport var ApiHelper = /*#__PURE__*/function () {\n  function ApiHelper() {\n    var _this = this;\n\n    _classCallCheck(this, ApiHelper);\n\n    _defineProperty(this, \"_portalGateway\", void 0);\n\n    _defineProperty(this, \"_apiVersion\", void 0);\n\n    _defineProperty(this, \"setHost\", function (host) {\n      _this._portalGateway = host;\n    });\n\n    _defineProperty(this, \"setApiVersion\", function (version) {\n      _this._apiVersion = version;\n    });\n\n    _defineProperty(this, \"cancelRequest\", function (err) {\n      cancel && cancel(err);\n    });\n\n    this._portalGateway = AppConfig.API_ENDPOINT;\n    this._apiVersion = \"\";\n    this.source = Axios.CancelToken.source();\n    this.cancelToken = this.source.token;\n  }\n\n  _createClass(ApiHelper, [{\n    key: \"FetchFromServer\",\n\n    /**\r\n     * Fetches from the Gateway defined by the instantiated object. Accepts <T> as output object.\r\n     * @example <caption>\"/Auth/UserAccount\", \"/GetCurrentUser\", \"GET\", \"JWT Content\"</caption>\r\n     * @param {service} service - wanting to be access ex. \"UserAuth/Auth\"\r\n     * @param {endpoint} endpoint - you wish to call ex. \"/Login\"\r\n     * @param {method} mehotd - method (GET, UPDATE, DELETE, POST)\r\n     * @param {jwt} JWT - JSON Web Token (Optional)\r\n     * @param {queryOptions} Query - query options for \"GET\" methods (Optional)\r\n     * @param {body} body - JSON body for \"UPDATE, DELETE and POST\" methods (Optional)\r\n     */\n    value: function () {\n      var _FetchFromServer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(service, endpoint, method) {\n        var authenticated,\n            queryOptions,\n            body,\n            responseType,\n            url,\n            headers,\n            storageSession,\n            response,\n            errorObject,\n            data,\n            errorHelper,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authenticated = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;\n                queryOptions = _args.length > 4 && _args[4] !== undefined ? _args[4] : undefined;\n                body = _args.length > 5 && _args[5] !== undefined ? _args[5] : undefined;\n                responseType = _args.length > 6 ? _args[6] : undefined;\n                url = this._portalGateway + service + endpoint;\n                ;\n                headers = {\n                  \"Content-Type\": \"application/json\"\n                };\n\n                if (authenticated) {\n                  storageSession = localStorage.getItem(\"token\");\n                  headers.Authorization = storageSession;\n                }\n\n                _context.prev = 8;\n                method = method.toLowerCase();\n                _context.next = 12;\n                return Axios.request({\n                  method: method,\n                  url: url,\n                  data: body,\n                  headers: headers,\n                  params: queryOptions,\n                  cancelToken: new CancelToken(function executor(c) {\n                    // An executor function receives a cancel function as a parameter\n                    cancel = c;\n                  })\n                });\n\n              case 12:\n                response = _context.sent;\n\n                if (!(response.ok === false || response.status !== 200)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                errorObject = {\n                  code: response.status,\n                  data: response.data\n                };\n                throw errorObject;\n\n              case 16:\n                data = new SuccessHandlerHelper(response.data);\n                return _context.abrupt(\"return\", data.data);\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](8);\n\n                if (!(Axios.isCancel(_context.t0) || !_context.t0.response)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  isError: true,\n                  error: \"Request cancelled\",\n                  messages: _context.t0.message === \"cancel\" ? [] : [\"Request cancelled\"]\n                });\n\n              case 26:\n                errorHelper = new ErrorHandlerHelper(_context.t0.response);\n                return _context.abrupt(\"return\", errorHelper.error);\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 20]]);\n      }));\n\n      function FetchFromServer(_x, _x2, _x3) {\n        return _FetchFromServer.apply(this, arguments);\n      }\n\n      return FetchFromServer;\n    }()\n    /**\r\n     * Cancels the last request.\r\n     */\n\n  }]);\n\n  return ApiHelper;\n}();","map":null,"metadata":{},"sourceType":"module"}