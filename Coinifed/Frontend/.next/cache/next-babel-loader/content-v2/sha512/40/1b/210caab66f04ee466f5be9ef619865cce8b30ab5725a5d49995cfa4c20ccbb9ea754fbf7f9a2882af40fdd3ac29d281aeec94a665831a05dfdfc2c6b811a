{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\Expo\\\\components\\\\Gallery\\\\Gallery.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Image } from 'components/atoms';\nconst useStyles = makeStyles(() => ({\n  image: {\n    objectFit: 'cover'\n  }\n}));\n\nconst Gallery = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), __jsx(GridList, {\n    cellHeight: isMd ? 300 : 100,\n    cols: 4,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(GridListTile, {\n    key: index,\n    cols: item.cols || 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(Image, _extends({}, item.image, {\n    alt: item.title,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }))))));\n};\n\n_s(Gallery, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Gallery;\nGallery.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * data to be rendered\r\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/Expo/components/Gallery/Gallery.js"],"names":["React","PropTypes","GridList","GridListTile","makeStyles","useTheme","useMediaQuery","Image","useStyles","image","objectFit","Gallery","props","data","className","rest","classes","theme","isMd","breakpoints","up","defaultMatches","map","item","index","cols","title","width","height","propTypes","string","array","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAQC,QAAR,MAAuB,4BAAvB;AACA,OAAQC,YAAR,MAA2B,gCAA3B;AACA,OAAQC,UAAR,MAAwB,qCAAxB;AACA,OAAQC,QAAR,MAAuB,mCAAvB;AACA,OAAQC,aAAR,MAA4B,iCAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,OAAO;AAClCK,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAD2B,CAAP,CAAD,CAA5B;;AAMA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AACA,QAAMI,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAMS,KAAK,GAAGZ,QAAQ,EAAtB;AACA,QAAMa,IAAI,GAAGZ,aAAa,CAACW,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AACrDC,IAAAA,cAAc,EAAE;AADqC,GAA7B,CAA1B;AAIA,SACE;AAAK,IAAA,SAAS,EAAEP;AAAhB,KAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEG,IAAI,GAAG,GAAH,GAAS,GAAnC;AAAwC,IAAA,IAAI,EAAE,CAA9C;AAAiD,IAAA,OAAO,EAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACS,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KACR,MAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,KAAnB;AAA0B,IAAA,IAAI,EAAED,IAAI,CAACE,IAAL,IAAa,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,eACMF,IAAI,CAACd,KADX;AAEE,IAAA,GAAG,EAAEc,IAAI,CAACG,KAFZ;AAGE,IAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAHb;AAIE,IAAA,SAAS,EAAEZ,OAAO,CAACP,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADD,CADH,CADF,CADF;AAgBD,CAzBD;;GAAME,O;UAEYH,S,EAEFH,Q,EACDC,a;;;KALTK,O;AA2BNA,OAAO,CAACkB,SAAR,GAAoB;AAClB;AACF;AACA;AACEf,EAAAA,SAAS,EAAEb,SAAS,CAAC6B,MAJH;;AAKlB;AACF;AACA;AACEjB,EAAAA,IAAI,EAAEZ,SAAS,CAAC8B,KAAV,CAAgBC;AARJ,CAApB;AAWA,eAAerB,OAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  GridList  from '@material-ui/core/GridList';\r\nimport  GridListTile  from '@material-ui/core/GridListTile';\r\nimport  makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport  useTheme  from '@material-ui/core/styles/useTheme';\r\nimport  useMediaQuery  from '@material-ui/core/useMediaQuery';\r\nimport { Image } from 'components/atoms';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  image: {\r\n    objectFit: 'cover',\r\n  },\r\n}));\r\n\r\nconst Gallery = props => {\r\n  const { data, className, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\r\n    defaultMatches: true,\r\n  });\r\n\r\n  return (\r\n    <div className={className} {...rest}>\r\n      <GridList cellHeight={isMd ? 300 : 100} cols={4} spacing={0}>\r\n        {data.map((item, index) => (\r\n          <GridListTile key={index} cols={item.cols || 1}>\r\n            <Image\r\n              {...item.image}\r\n              alt={item.title}\r\n              lazyProps={{ width: '100%', height: '100%' }}\r\n              className={classes.image}\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nGallery.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * data to be rendered\r\n   */\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Gallery;\r\n"]},"metadata":{},"sourceType":"module"}