{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from \"@material-ui/core/Popover\";\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from \"clsx\";\nimport { SectionHeader } from \"components/molecules\";\nimport { CardBase } from \"components/organisms\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport AppConfig from \"../../../../config/appConfig\";\nvar useStyles = makeStyles(function (theme) {\n  var _cardBase__conten, _listItemAvatar;\n\n  return {\n    cardBase: {\n      boxShadow: \"none\",\n      background: theme.palette.alternate.main,\n      borderRadius: theme.spacing(1),\n      \"& .card-base__content\": (_cardBase__conten = {\n        padding: theme.spacing(1)\n      }, _defineProperty(_cardBase__conten, theme.breakpoints.up(\"sm\"), {\n        padding: theme.spacing(3)\n      }), _defineProperty(_cardBase__conten, theme.breakpoints.down(\"md\"), {\n        padding: theme.spacing(1)\n      }), _cardBase__conten),\n      \"& a\": _defineProperty({}, theme.breakpoints.down(\"xs\"), {\n        fontSize: \"0.7rem\"\n      })\n    },\n    avatar: _defineProperty({\n      width: 110,\n      objectFit: \"cover\",\n      objectPosition: \"center top\",\n      height: 110,\n      border: \"4px solid \".concat(theme.palette.alternate.dark),\n      borderRadius: \"100%\",\n      boxShadow: \"0 5px 10px 0 rgba(0, 0, 0, 0.1)\"\n    }, theme.breakpoints.down(\"md\"), {\n      width: 80,\n      height: 80\n    }),\n    listItem: _defineProperty({\n      padding: 0,\n      marginBottom: 10\n    }, theme.breakpoints.down(\"sm\"), {\n      flexDirection: \"column\"\n    }),\n    listItemAvatar: (_listItemAvatar = {\n      marginRight: theme.spacing(3)\n    }, _defineProperty(_listItemAvatar, theme.breakpoints.down(\"md\"), {\n      marginRight: theme.spacing(1.5)\n    }), _defineProperty(_listItemAvatar, theme.breakpoints.down(\"sm\"), {\n      marginRight: theme.spacing(0)\n    }), _listItemAvatar),\n    listItemText: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n      margin: 0,\n      height: \"100%\"\n    },\n    title: _defineProperty({\n      fontWeight: \"bold\"\n    }, theme.breakpoints.down(\"xs\"), {\n      fontSize: \"1rem\"\n    }),\n    popover_div: {\n      maxWidth: \"400px\",\n      textAlign: \"justify\",\n      padding: \"10px\"\n    },\n    customised_popover: {\n      boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\n    },\n    commonBtn: {\n      display: \"inline-block\",\n      padding: \"7px 10px\",\n      backgroundColor: \"#5120FF\",\n      fontSize: 16,\n      minWidth: 200,\n      border: \"solid 1px #5120FF\",\n      textAlign: \"center\",\n      transition: \"all 0.3s ease-in-out\",\n      boxShadow: \"none\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n        color: \"#5120FF\",\n        boxShadow: \"none\"\n      }\n    },\n    smallCommonBtn: {\n      minWidth: 132,\n      padding: \"8px 10px\",\n      fontSize: 15\n    }\n  };\n});\n\nvar Team = function Team(props) {\n  var className = props.className,\n      cmsData = props.cmsData,\n      teamList = props.teamList,\n      rest = _objectWithoutProperties(props, [\"className\", \"cmsData\", \"teamList\"]);\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var theme = useTheme();\n  var isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      authorDetail = _React$useState4[0],\n      setauthorDetails = _React$useState4[1];\n\n  var handleClick = function handleClick(event, id) {\n    setAnchorEl(null);\n    var required_id = event.currentTarget.id;\n    var newData = teamList.filter(function (newArray, index) {\n      return index == required_id;\n    });\n    setauthorDetails(newData);\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? \"simple-popover\" : undefined; // For Get Template Data\n\n  var _useState = useState(null),\n      getTemplateData = _useState[0],\n      setGetTemplateData = _useState[1];\n\n  useEffect(function () {\n    if (cmsData && cmsData.length) {\n      var getData = cmsData.filter(function (e) {\n        return e.titleSlug === \"aboutUs\";\n      });\n      setGetTemplateData.apply(void 0, _toConsumableArray(getData));\n    }\n  }, [cmsData]);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(SectionHeader, {\n    title: getTemplateData && getTemplateData.blockTitle2.length ? getTemplateData.blockTitle2 : \"Meet our team\",\n    subtitle: getTemplateData && getTemplateData.block2.length ? ReactHtmlParser(getTemplateData.block2) : null\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 2 : 1\n  }, teamList && teamList.length ? teamList.map(function (item, index) {\n    return __jsx(Grid, {\n      item: true,\n      xs: 6,\n      sm: 6,\n      md: 4,\n      key: index,\n      \"data-aos\": \"fade-up\"\n    }, __jsx(CardBase, {\n      className: classes.cardBase,\n      liftUp: true\n    }, __jsx(ListItem, {\n      disableGutters: true,\n      className: classes.listItem\n    }, __jsx(ListItemAvatar, {\n      className: classes.listItemAvatar\n    }, __jsx(Avatar, {\n      src: \"\".concat(AppConfig.IMAGE_URL, \"/\").concat(item.teamMemberImage),\n      srcSet: \"\".concat(AppConfig.IMAGE_URL, \"/\").concat(item.teamMemberImage),\n      className: classes.avatar\n    })), __jsx(\"div\", null, __jsx(ListItemText, {\n      className: classes.listItemText,\n      primary: \"\".concat(item.firstName, \" \").concat(item.lastName),\n      secondary: item.designation,\n      primaryTypographyProps: {\n        className: classes.title,\n        variant: \"h6\",\n        align: isMd ? \"left\" : \"center\"\n      },\n      secondaryTypographyProps: {\n        color: \"textPrimary\",\n        align: isMd ? \"left\" : \"center\"\n      }\n    }))), __jsx(Button, {\n      id: index,\n      href: \"#outlined-buttons\",\n      \"aria-describedby\": id,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClick,\n      className: clsx(classes.commonBtn, classes.smallCommonBtn)\n    }, \"More Details\")), authorDetail.map(function (data) {\n      return __jsx(Popover, {\n        id: id,\n        open: open,\n        anchorEl: anchorEl,\n        onClose: handleClose,\n        elevation: 2,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        },\n        transformOrigin: {\n          vertical: \"top\",\n          horizontal: \"center\"\n        },\n        className: classes.customised_popover\n      }, __jsx(\"div\", {\n        className: classes.popover_div\n      }, ReactHtmlParser(data.aboutUs)));\n    }));\n  }) : null));\n};\n\nexport default Team;","map":null,"metadata":{},"sourceType":"module"}