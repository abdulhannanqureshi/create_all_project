{"ast":null,"code":"/**\r\n * Caution: Consider this file when using NextJS or GatsbyJS\r\n *\r\n * You may delete this file and its occurrences from the project filesystem if you are using react-scripts\r\n */\nimport BlogArticle from 'views/BlogArticle';\nimport { ApiHelper } from \"helper\";\nimport { ApiRoutes } from \"config\";\nexport async function getStaticPaths() {\n  // For Get Blog LIst\n  const response = await new ApiHelper().FetchFromServer(ApiRoutes.BLOGLIST.service, ApiRoutes.BLOGLIST.url, ApiRoutes.BLOGLIST.method, ApiRoutes.BLOGLIST.authenticate, undefined, undefined);\n  let blogData = [];\n\n  if (response && !response.isError) {\n    blogData = response.data.data;\n  }\n\n  const paths = blogData.map(e => {\n    return {\n      params: {\n        id: e._id\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const id = await context.params.id; // For Get Blog Details Data\n\n  const response = await new ApiHelper().FetchFromServer(ApiRoutes.BLOGDETAIL.service, ApiRoutes.BLOGDETAIL.url.replace(\":id\", id), ApiRoutes.BLOGDETAIL.method, ApiRoutes.BLOGDETAIL.authenticate, undefined, undefined);\n  let blogDetails = [];\n\n  if (response && !response.isError) {\n    blogDetails = response.data.data;\n  } // For Get CMS Data\n\n\n  const responseCMS = await new ApiHelper().FetchFromServer(ApiRoutes.FRONT_PAGE_DATA.service, ApiRoutes.FRONT_PAGE_DATA.url, ApiRoutes.FRONT_PAGE_DATA.method, ApiRoutes.FRONT_PAGE_DATA.authenticate, undefined, undefined);\n  let cmsData = [];\n\n  if (responseCMS && !responseCMS.isError) {\n    cmsData = responseCMS.data.data;\n  }\n\n  return {\n    props: {\n      blogDetails,\n      cmsData\n    },\n    revalidate: 1\n  };\n}\nexport default BlogArticle;","map":null,"metadata":{},"sourceType":"module"}