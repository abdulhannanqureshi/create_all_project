{"ast":null,"code":"import _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/**\r\n * SuccessHandlerHelper Class - For managing successful response\r\n */\nexport class SuccessHandlerHelper {\n  constructor(data) {\n    _defineProperty(this, \"rawData\", void 0);\n\n    _defineProperty(this, \"data\", {\n      code: 200,\n      isError: false,\n      timestamp: Date.now(),\n      error: undefined,\n      messages: []\n    });\n\n    _defineProperty(this, \"setSucccess\", () => {\n      const messages = [];\n\n      for (let i in this.rawData) {\n        if (typeof this.rawData[i] === \"string\") {\n          messages.push(this.rawData[i]);\n        }\n      }\n\n      this.data.data = this.rawData;\n      this.data.messages = messages;\n    });\n\n    this.rawData = data;\n    this.setSucccess();\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/helper/SuccessHandlerHelper.js"],"names":["SuccessHandlerHelper","constructor","data","code","isError","timestamp","Date","now","error","undefined","messages","i","rawData","push","setSucccess"],"mappings":";;AAAA;AACA;AACA;AACA,OAAO,MAAMA,oBAAN,CAA2B;AAU9BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA;;AAAA,kCARX;AACLC,MAAAA,IAAI,EAAE,GADD;AAELC,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHN;AAILC,MAAAA,KAAK,EAAEC,SAJF;AAKLC,MAAAA,QAAQ,EAAE;AALL,KAQW;;AAAA,yCAKJ,MAAM;AAClB,YAAMA,QAAQ,GAAG,EAAjB;;AAEA,WAAK,IAAIC,CAAT,IAAc,KAAKC,OAAnB,EAA4B;AAC1B,YAAI,OAAO,KAAKA,OAAL,CAAaD,CAAb,CAAP,KAA2B,QAA/B,EAAyC;AACvCD,UAAAA,QAAQ,CAACG,IAAT,CAAc,KAAKD,OAAL,CAAaD,CAAb,CAAd;AACD;AACF;;AACD,WAAKT,IAAL,CAAUA,IAAV,GAAiB,KAAKU,OAAtB;AACA,WAAKV,IAAL,CAAUQ,QAAV,GAAqBA,QAArB;AACD,KAfiB;;AAChB,SAAKE,OAAL,GAAeV,IAAf;AACA,SAAKY,WAAL;AACD;;AAb6B","sourcesContent":["/**\r\n * SuccessHandlerHelper Class - For managing successful response\r\n */\r\nexport class SuccessHandlerHelper {\r\n    rawData;\r\n    data = {\r\n      code: 200,\r\n      isError: false,\r\n      timestamp: Date.now(),\r\n      error: undefined,\r\n      messages: [],\r\n    };\r\n  \r\n    constructor(data) {\r\n      this.rawData = data;\r\n      this.setSucccess();\r\n    }\r\n  \r\n    setSucccess = () => {\r\n      const messages = [];\r\n  \r\n      for (let i in this.rawData) {\r\n        if (typeof this.rawData[i] === \"string\") {\r\n          messages.push(this.rawData[i]);\r\n        }\r\n      }\r\n      this.data.data = this.rawData;\r\n      this.data.messages = messages;\r\n    };\r\n  }"]},"metadata":{},"sourceType":"module"}