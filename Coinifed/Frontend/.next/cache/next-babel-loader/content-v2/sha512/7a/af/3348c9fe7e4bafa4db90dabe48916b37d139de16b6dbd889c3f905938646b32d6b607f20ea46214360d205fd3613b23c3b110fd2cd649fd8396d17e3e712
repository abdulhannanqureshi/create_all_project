{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\ContactPage\\\\components\\\\Newsletter\\\\Newsletter.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { CircularProgress } from '@material-ui/core';\nimport indigo from '@material-ui/core/colors/indigo';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport clsx from 'clsx';\nimport { Icon } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { Section } from 'components/organisms';\nimport Toast from 'components/toaster';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport validate from 'validate.js';\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport { ApiHelper } from \"../../../../helper\";\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 120\n    }\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: `rgb(83 98 252) `,\n    backgroundSize: \"cover\",\n    borderRadius: theme.spacing(2)\n  },\n  textWhite: {\n    color: \"white\"\n  },\n  paperPlane: {\n    cursor: \"pointer\"\n  },\n  errorText: {\n    color: 'red',\n    fontSize: \"14px\",\n    backgroundColor: \"white\",\n    marginTop: \"3px\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  loaderCommon: {\n    width: \"20px !important\",\n    height: \"20px !important\",\n    color: \"white\"\n  },\n  formControl: {\n    maxWidth: 400,\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"white\"\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"white\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"white\"\n      }\n    },\n    \"& .MuiInputBase-root\": {\n      color: \"white\"\n    },\n    \"& .MuiInputAdornment-root i\": {\n      color: \"white !important\"\n    }\n  }\n}));\n\nconst Newsletter = props => {\n  const {\n    className,\n    cmsData\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"cmsData\"]);\n\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      const data = {\n        email: formState.values.email\n      };\n      setIsLoading(true);\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.NEWSLETTERSUBSCRIBE.service, ApiRoutes.NEWSLETTERSUBSCRIBE.url, ApiRoutes.NEWSLETTERSUBSCRIBE.method, ApiRoutes.NEWSLETTERSUBSCRIBE.authenticate, undefined, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.messages[0]\n        });\n        setIsLoading(false);\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.messages[0]\n        });\n        setIsLoading(false);\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false; // For Get Template Data\n\n\n  const {\n    0: getTemplateData,\n    1: setGetTemplateData\n  } = useState(null);\n  useEffect(() => {\n    if (cmsData && cmsData.length) {\n      let getData = cmsData.filter(e => e.titleSlug === \"marketing\");\n      setGetTemplateData(...getData);\n    }\n  }, [cmsData]);\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }), __jsx(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, __jsx(React.Fragment, null, __jsx(SectionHeader, {\n    title: __jsx(\"span\", {\n      className: classes.textWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, getTemplateData ? getTemplateData.blockTitle12 : null),\n    subtitle: __jsx(\"span\", {\n      className: classes.textWhite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, getTemplateData ? getTemplateData.blockTitle13 : null),\n    fadeUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }), __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    \"data-aos\": \"fade-up\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, __jsx(OutlinedInput, {\n    name: \"email\",\n    fullWidth: true,\n    helpertext: hasError(\"email\") ? formState.errors.email[0] : null,\n    error: hasError(\"email\"),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || \"\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, isLoading ? __jsx(CircularProgress, {\n      className: classes.loaderCommon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }) : __jsx(Icon, {\n      className: classes.paperPlane,\n      fontIconClass: \"fas fa-paper-plane\",\n      fontIconColor: indigo[900],\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    })),\n    placeholder: \"Enter your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }), hasError(\"email\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, formState.errors.email[0]) : null))))));\n};\n\nNewsletter.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string\n};\nexport default Newsletter;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/ContactPage/components/Newsletter/Newsletter.js"],"names":["CircularProgress","indigo","FormControl","InputAdornment","OutlinedInput","makeStyles","clsx","Icon","SectionHeader","Section","Toast","PropTypes","React","useEffect","useState","validate","ApiRoutes","ApiHelper","schema","email","presence","allowEmpty","message","length","maximum","useStyles","theme","root","background","backgroundSize","borderRadius","spacing","textWhite","color","paperPlane","cursor","errorText","fontSize","backgroundColor","marginTop","inputContainer","display","justifyContent","loaderCommon","width","height","formControl","maxWidth","borderColor","Newsletter","props","className","cmsData","rest","classes","formState","setFormState","isValid","values","touched","errors","handleChange","event","persist","target","name","value","isLoading","setIsLoading","handleSubmit","preventDefault","data","response","FetchFromServer","NEWSLETTERSUBSCRIBE","service","url","method","authenticate","undefined","isError","fire","icon","title","messages","hasError","field","getTemplateData","setGetTemplateData","getData","filter","e","titleSlug","blockTitle12","blockTitle13","propTypes","string"],"mappings":"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","sourcesContent":["import { CircularProgress } from '@material-ui/core';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\nimport { Icon } from 'components/atoms';\r\nimport { SectionHeader } from 'components/molecules';\r\nimport { Section } from 'components/organisms';\r\nimport Toast from 'components/toaster';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport validate from 'validate.js';\r\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\r\nimport { ApiHelper } from \"../../../../helper\";\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 120,\r\n    },\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: `rgb(83 98 252) `,\r\n    backgroundSize: \"cover\",\r\n    borderRadius: theme.spacing(2),\r\n  },\r\n  textWhite: {\r\n    color: \"white\",\r\n  },\r\n  paperPlane:\r\n  {\r\n    cursor: \"pointer\"\r\n  },\r\n  errorText:\r\n  {\r\n    color:'red',\r\n    fontSize:\"14px\",\r\n    backgroundColor:\"white\",\r\n    marginTop:\"3px\"\r\n  },\r\n  inputContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  loaderCommon:\r\n  {\r\n    width: \"20px !important\",\r\n    height: \"20px !important\",\r\n    color: \"white\",\r\n  },\r\n  formControl: {\r\n    maxWidth: 400,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n    \"& .MuiInputBase-root\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiInputAdornment-root i\": {\r\n      color: \"white !important\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Newsletter = (props) => {\r\n  const { className, cmsData, ...rest } = props;\r\n  const classes = useStyles();\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (formState.isValid) {\r\n      const data = {\r\n        email: formState.values.email,\r\n      };\r\n      setIsLoading(true)\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.NEWSLETTERSUBSCRIBE.service,\r\n        ApiRoutes.NEWSLETTERSUBSCRIBE.url,\r\n        ApiRoutes.NEWSLETTERSUBSCRIBE.method,\r\n        ApiRoutes.NEWSLETTERSUBSCRIBE.authenticate,\r\n        undefined,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.messages[0],\r\n        });\r\n        setIsLoading(false)\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.messages[0],\r\n        });\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  // For Get Template Data\r\n  const [getTemplateData, setGetTemplateData] = useState(null);\r\n  useEffect(() => {\r\n    if (cmsData && cmsData.length) {\r\n      let getData = cmsData.filter((e) => e.titleSlug === \"marketing\");\r\n      setGetTemplateData(...getData);\r\n    }\r\n  }, [cmsData]);\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Section>\r\n        <>\r\n          <SectionHeader\r\n            title={\r\n              <span className={classes.textWhite}>{getTemplateData ? getTemplateData.blockTitle12 : null}\r\n              </span>\r\n            }\r\n            subtitle={\r\n              <span className={classes.textWhite}>{getTemplateData ? getTemplateData.blockTitle13 : null}\r\n              </span>\r\n            }\r\n            fadeUp\r\n          />\r\n          <form\r\n            name='password-reset-form'\r\n            method='post'\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div className={classes.inputContainer}>\r\n              <FormControl\r\n                fullWidth\r\n                variant='outlined'\r\n                data-aos='fade-up'\r\n                className={classes.formControl}\r\n              >\r\n                <OutlinedInput\r\n                  name='email'\r\n                  fullWidth\r\n                  helpertext={\r\n                    hasError(\"email\") ? formState.errors.email[0] : null\r\n                  }\r\n                  error={hasError(\"email\")}\r\n                  onChange={handleChange}\r\n                  type='email'\r\n                  value={formState.values.email || \"\"}\r\n                  endAdornment={\r\n                    <InputAdornment position='end'>\r\n                      {\r\n                        isLoading ? <CircularProgress className={classes.loaderCommon} />\r\n                          :\r\n                          <Icon\r\n                            className={classes.paperPlane}\r\n                            fontIconClass='fas fa-paper-plane'\r\n                            fontIconColor={indigo[900]}\r\n                            onClick={handleSubmit}\r\n                          />\r\n                      }\r\n                    </InputAdornment>\r\n                  }\r\n                  placeholder='Enter your email'\r\n                />\r\n                {\r\n                  hasError(\"email\") ?\r\n                    <span className={classes.errorText}>\r\n                      {formState.errors.email[0]}\r\n                    </span>\r\n                    :\r\n                    null\r\n                }\r\n              </FormControl>\r\n              {/* <TextField\r\n            placeholder=\"Email\"\r\n            label=\"Email *\"\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            name=\"email\"\r\n            fullWidth\r\n            helpertext={\r\n              hasError('email') ? formState.errors.email[0] : null\r\n            }\r\n            error={hasError('email')}\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={formState.values.email || ''}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleSubmit}\r\n          >\r\n             <Icon\r\n                fontIconClass=\"fas fa-paper-plane\"\r\n                fontIconColor={colors.indigo[900]}\r\n              />\r\n          </Button> */}\r\n            </div>\r\n          </form>\r\n        </>\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nNewsletter.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Newsletter;\r\n"]},"metadata":{},"sourceType":"module"}