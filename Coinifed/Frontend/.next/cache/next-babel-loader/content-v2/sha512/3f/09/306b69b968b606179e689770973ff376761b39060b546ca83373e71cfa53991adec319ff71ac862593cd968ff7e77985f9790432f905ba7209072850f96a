{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\About\\\\components\\\\Story\\\\Story.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Image } from \"components/atoms\";\nimport { SectionHeader } from \"components/molecules\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport AppConfig from \"../../../../config/appConfig\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    maxWidth: 420\n  },\n  spCenter: {\n    [theme.breakpoints.down(\"sm\")]: {\n      textAlign: \"center\",\n      justifyContent: \"center\"\n    },\n    \"& h4\": {\n      textAlign: \"center\",\n      marginTop: 10\n    },\n    \"& p\": {\n      textAlign: \"center\",\n      fontSize: 18\n    }\n  }\n}));\n\nconst Story = props => {\n  const {\n    className,\n    cmsData\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"cmsData\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  }); // For Get Template Data\n\n  const {\n    0: getTemplateData,\n    1: setGetTemplateData\n  } = useState(null);\n  useEffect(() => {\n    if (cmsData && cmsData.length) {\n      let getData = cmsData.filter(e => e.titleSlug === \"aboutUs\");\n      setGetTemplateData(...getData);\n    }\n  }, [cmsData]);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justifyContent: \"space-between\",\n    spacing: isMd ? 4 : 2,\n    direction: isMd ? \"row\" : \"column-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    xs: 12,\n    md: 7,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(SectionHeader, {\n    title: getTemplateData && getTemplateData.blockTitle1.length ? getTemplateData.blockTitle1 : \"Our story\",\n    subtitle: getTemplateData && getTemplateData.block1.length ? ReactHtmlParser(getTemplateData.block1) : null,\n    align: \"left\",\n    disableGutter: true,\n    subtitleProps: {\n      color: \"textPrimary\",\n      variant: \"body1\"\n    },\n    className: classes.spCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), getTemplateData && getTemplateData.blockImage1.length ? __jsx(Grid, {\n    item: true,\n    container: true,\n    justifyContent: isMd ? \"flex-end\" : \"flex-start\",\n    alignItems: \"center\",\n    xs: 12,\n    md: 5,\n    \"data-aos\": \"fade-up\",\n    className: classes.spCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    src: `${AppConfig.IMAGE_URL}/${getTemplateData.blockImage1}`,\n    srcSet: `${AppConfig.IMAGE_URL}/${getTemplateData.blockImage1}`,\n    alt: \"Our story\",\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })) : null));\n};\n\nStory.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string\n};\nexport default Story;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/About/components/Story/Story.js"],"names":["Grid","makeStyles","useTheme","useMediaQuery","Image","SectionHeader","PropTypes","React","useEffect","useState","ReactHtmlParser","AppConfig","useStyles","theme","image","maxWidth","spCenter","breakpoints","down","textAlign","justifyContent","marginTop","fontSize","Story","props","className","cmsData","rest","classes","isMd","up","defaultMatches","getTemplateData","setGetTemplateData","length","getData","filter","e","titleSlug","blockTitle1","block1","color","variant","blockImage1","IMAGE_URL","propTypes","string"],"mappings":"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","sourcesContent":["import Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Image } from \"components/atoms\";\r\nimport { SectionHeader } from \"components/molecules\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport AppConfig from \"../../../../config/appConfig\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    maxWidth: 420,\r\n  },\r\n  spCenter: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    \"& h4\": {\r\n      textAlign: \"center\",\r\n      marginTop: 10,\r\n    },\r\n    \"& p\": {\r\n      textAlign: \"center\",\r\n      fontSize: 18,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Story = (props) => {\r\n  const { className, cmsData, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n  // For Get Template Data\r\n  const [getTemplateData, setGetTemplateData] = useState(null);\r\n  useEffect(() => {\r\n    if (cmsData && cmsData.length) {\r\n      let getData = cmsData.filter((e) => e.titleSlug === \"aboutUs\");\r\n      setGetTemplateData(...getData);\r\n    }\r\n  }, [cmsData]);\r\n\r\n  return (\r\n    <div className={className} {...rest}>\r\n      <Grid\r\n        container\r\n        justifyContent='space-between'\r\n        spacing={isMd ? 4 : 2}\r\n        direction={isMd ? \"row\" : \"column-reverse\"}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems='center'\r\n          justifyContent='flex-start'\r\n          xs={12}\r\n          md={7}\r\n          data-aos={\"fade-up\"}\r\n        >\r\n          <div>\r\n            <SectionHeader\r\n              title={\r\n                getTemplateData && getTemplateData.blockTitle1.length\r\n                  ? getTemplateData.blockTitle1\r\n                  : \"Our story\"\r\n              }\r\n              subtitle={\r\n                getTemplateData && getTemplateData.block1.length\r\n                  ? ReactHtmlParser(getTemplateData.block1)\r\n                  : null\r\n              }\r\n              align='left'\r\n              disableGutter\r\n              subtitleProps={{\r\n                color: \"textPrimary\",\r\n                variant: \"body1\",\r\n              }}\r\n              className={classes.spCenter}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        {getTemplateData && getTemplateData.blockImage1.length ? (\r\n          <Grid\r\n            item\r\n            container\r\n            justifyContent={isMd ? \"flex-end\" : \"flex-start\"}\r\n            alignItems='center'\r\n            xs={12}\r\n            md={5}\r\n            data-aos={\"fade-up\"}\r\n            className={classes.spCenter}\r\n          >\r\n            <Image\r\n              src={`${AppConfig.IMAGE_URL}/${getTemplateData.blockImage1}`}\r\n              srcSet={`${AppConfig.IMAGE_URL}/${getTemplateData.blockImage1}`}\r\n              alt='Our story'\r\n              className={classes.image}\r\n            />\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nStory.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Story;\r\n"]},"metadata":{},"sourceType":"module"}