{"ast":null,"code":"import _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport Axios from \"axios\";\nimport { ErrorHandlerHelper } from \"./ErrorHandlerHelper\";\nimport { SuccessHandlerHelper } from \"./SuccessHandlerHelper\";\nimport AppConfig from \"../config/appConfig\";\n/**\r\n * ApiHelper Class - For making Api Requests\r\n */\n\nlet CancelToken = Axios.CancelToken;\nlet cancel;\nexport class ApiHelper {\n  constructor() {\n    _defineProperty(this, \"_portalGateway\", void 0);\n\n    _defineProperty(this, \"_apiVersion\", void 0);\n\n    _defineProperty(this, \"setHost\", host => {\n      this._portalGateway = host;\n    });\n\n    _defineProperty(this, \"setApiVersion\", version => {\n      this._apiVersion = version;\n    });\n\n    _defineProperty(this, \"cancelRequest\", err => {\n      cancel && cancel(err);\n    });\n\n    this._portalGateway = AppConfig.API_ENDPOINT;\n    this._apiVersion = \"\";\n    this.source = Axios.CancelToken.source();\n    this.cancelToken = this.source.token;\n  }\n\n  /**\r\n   * Fetches from the Gateway defined by the instantiated object. Accepts <T> as output object.\r\n   * @example <caption>\"/Auth/UserAccount\", \"/GetCurrentUser\", \"GET\", \"JWT Content\"</caption>\r\n   * @param {service} service - wanting to be access ex. \"UserAuth/Auth\"\r\n   * @param {endpoint} endpoint - you wish to call ex. \"/Login\"\r\n   * @param {method} mehotd - method (GET, UPDATE, DELETE, POST)\r\n   * @param {jwt} JWT - JSON Web Token (Optional)\r\n   * @param {authToken} JWT - JSON Web Token (Optional)\r\n   * @param {queryOptions} Query - query options for \"GET\" methods (Optional)\r\n   * @param {body} body - JSON body for \"UPDATE, DELETE and POST\" methods (Optional)\r\n   */\n  async FetchFromServer(service, endpoint, method, authenticated = false, authToken = undefined, queryOptions = undefined, body = undefined, responseType) {\n    let url = this._portalGateway + service + endpoint;\n    let headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (authenticated) {\n      // const storageSession = localStorage.getItem(\"token\");\n      const storageSession = authToken;\n      headers.Authorization = storageSession;\n    }\n\n    try {\n      method = method.toLowerCase();\n      let response = await Axios.request({\n        method,\n        url,\n        data: body,\n        headers: headers,\n        params: queryOptions,\n        cancelToken: new CancelToken(function executor(c) {\n          // An executor function receives a cancel function as a parameter\n          cancel = c;\n        })\n      });\n\n      if (response.ok === false || response.status !== 200) {\n        let errorObject = {\n          code: response.status,\n          data: response.data\n        };\n        throw errorObject;\n      }\n\n      const data = new SuccessHandlerHelper(response.data);\n      return data.data;\n    } catch (err) {\n      if (Axios.isCancel(err) || !err.response) {\n        return {\n          isError: true,\n          error: \"Request cancelled\",\n          messages: err.message === \"cancel\" ? [] : [\"Request cancelled\"]\n        };\n      } else {\n        const errorHelper = new ErrorHandlerHelper(err.response);\n        return errorHelper.error;\n      }\n    }\n  }\n  /**\r\n   * Cancels the last request.\r\n   */\n\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/helper/ApiHelper.js"],"names":["Axios","ErrorHandlerHelper","SuccessHandlerHelper","AppConfig","CancelToken","cancel","ApiHelper","constructor","host","_portalGateway","version","_apiVersion","err","API_ENDPOINT","source","cancelToken","token","FetchFromServer","service","endpoint","method","authenticated","authToken","undefined","queryOptions","body","responseType","url","headers","storageSession","Authorization","toLowerCase","response","request","data","params","executor","c","ok","status","errorObject","code","isCancel","isError","error","messages","message","errorHelper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,SAAP,MAAuB,qBAAvB;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAGJ,KAAK,CAACI,WAAxB;AACA,IAAIC,MAAJ;AAEA,OAAO,MAAMC,SAAN,CAAgB;AAIrBC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AAAA,qCAMHC,IAAD,IAAU;AAClB,WAAKC,cAAL,GAAsBD,IAAtB;AACD,KARa;;AAAA,2CASGE,OAAD,IAAa;AAC3B,WAAKC,WAAL,GAAmBD,OAAnB;AACD,KAXa;;AAAA,2CAgFGE,GAAD,IAAS;AACvBP,MAAAA,MAAM,IAAIA,MAAM,CAACO,GAAD,CAAhB;AACD,KAlFa;;AACZ,SAAKH,cAAL,GAAsBN,SAAS,CAACU,YAAhC;AACA,SAAKF,WAAL,GAAmB,EAAnB;AACA,SAAKG,MAAL,GAAcd,KAAK,CAACI,WAAN,CAAkBU,MAAlB,EAAd;AACA,SAAKC,WAAL,GAAmB,KAAKD,MAAL,CAAYE,KAA/B;AACD;;AAOD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAAMC,eAAN,CACEC,OADF,EAEEC,QAFF,EAGEC,MAHF,EAIEC,aAAa,GAAG,KAJlB,EAKEC,SAAS,GAAGC,SALd,EAMEC,YAAY,GAAGD,SANjB,EAOEE,IAAI,GAAGF,SAPT,EAQEG,YARF,EASE;AACA,QAAIC,GAAG,GAAG,KAAKlB,cAAL,GAAsBS,OAAtB,GAAgCC,QAA1C;AACA,QAAIS,OAAO,GAAG;AAAE,sBAAgB;AAAlB,KAAd;;AACA,QAAIP,aAAJ,EAAmB;AACjB;AACA,YAAMQ,cAAc,GAAGP,SAAvB;AACAM,MAAAA,OAAO,CAACE,aAAR,GAAwBD,cAAxB;AACD;;AACD,QAAI;AACFT,MAAAA,MAAM,GAAGA,MAAM,CAACW,WAAP,EAAT;AACA,UAAIC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,OAAN,CAAc;AACjCb,QAAAA,MADiC;AAEjCO,QAAAA,GAFiC;AAGjCO,QAAAA,IAAI,EAAET,IAH2B;AAIjCG,QAAAA,OAAO,EAAEA,OAJwB;AAKjCO,QAAAA,MAAM,EAAEX,YALyB;AAMjCT,QAAAA,WAAW,EAAE,IAAIX,WAAJ,CAAgB,SAASgC,QAAT,CAAkBC,CAAlB,EAAqB;AAChD;AACAhC,UAAAA,MAAM,GAAGgC,CAAT;AACD,SAHY;AANoB,OAAd,CAArB;;AAYA,UAAIL,QAAQ,CAACM,EAAT,KAAgB,KAAhB,IAAyBN,QAAQ,CAACO,MAAT,KAAoB,GAAjD,EAAsD;AACpD,YAAIC,WAAW,GAAG;AAChBC,UAAAA,IAAI,EAAET,QAAQ,CAACO,MADC;AAEhBL,UAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFC,SAAlB;AAKA,cAAMM,WAAN;AACD;;AACD,YAAMN,IAAI,GAAG,IAAIhC,oBAAJ,CAAyB8B,QAAQ,CAACE,IAAlC,CAAb;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAxBD,CAwBE,OAAOtB,GAAP,EAAY;AACZ,UAAIZ,KAAK,CAAC0C,QAAN,CAAe9B,GAAf,KAAuB,CAACA,GAAG,CAACoB,QAAhC,EAA0C;AACxC,eAAO;AACLW,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,KAAK,EAAE,mBAFF;AAGLC,UAAAA,QAAQ,EAAEjC,GAAG,CAACkC,OAAJ,KAAgB,QAAhB,GAA2B,EAA3B,GAAgC,CAAC,mBAAD;AAHrC,SAAP;AAKD,OAND,MAMO;AACL,cAAMC,WAAW,GAAG,IAAI9C,kBAAJ,CAAuBW,GAAG,CAACoB,QAA3B,CAApB;AACA,eAAOe,WAAW,CAACH,KAAnB;AACD;AACF;AACF;AACD;AACF;AACA;;;AAnFuB","sourcesContent":["import Axios from \"axios\";\r\nimport { ErrorHandlerHelper } from \"./ErrorHandlerHelper\";\r\nimport { SuccessHandlerHelper } from \"./SuccessHandlerHelper\";\r\nimport AppConfig  from \"../config/appConfig\";\r\n/**\r\n * ApiHelper Class - For making Api Requests\r\n */\r\nlet CancelToken = Axios.CancelToken;\r\nlet cancel;\r\n\r\nexport class ApiHelper {\r\n  _portalGateway;\r\n  _apiVersion;\r\n\r\n  constructor() {\r\n    this._portalGateway = AppConfig.API_ENDPOINT;\r\n    this._apiVersion = \"\";\r\n    this.source = Axios.CancelToken.source();\r\n    this.cancelToken = this.source.token;\r\n  }\r\n  setHost = (host) => {\r\n    this._portalGateway = host;\r\n  };\r\n  setApiVersion = (version) => {\r\n    this._apiVersion = version;\r\n  };\r\n  /**\r\n   * Fetches from the Gateway defined by the instantiated object. Accepts <T> as output object.\r\n   * @example <caption>\"/Auth/UserAccount\", \"/GetCurrentUser\", \"GET\", \"JWT Content\"</caption>\r\n   * @param {service} service - wanting to be access ex. \"UserAuth/Auth\"\r\n   * @param {endpoint} endpoint - you wish to call ex. \"/Login\"\r\n   * @param {method} mehotd - method (GET, UPDATE, DELETE, POST)\r\n   * @param {jwt} JWT - JSON Web Token (Optional)\r\n   * @param {authToken} JWT - JSON Web Token (Optional)\r\n   * @param {queryOptions} Query - query options for \"GET\" methods (Optional)\r\n   * @param {body} body - JSON body for \"UPDATE, DELETE and POST\" methods (Optional)\r\n   */\r\n  async FetchFromServer(\r\n    service,\r\n    endpoint,\r\n    method,\r\n    authenticated = false,\r\n    authToken = undefined,\r\n    queryOptions = undefined,\r\n    body = undefined,\r\n    responseType,\r\n  ) {\r\n    let url = this._portalGateway + service + endpoint;\r\n    let headers = { \"Content-Type\": \"application/json\" };\r\n    if (authenticated) {\r\n      // const storageSession = localStorage.getItem(\"token\");\r\n      const storageSession = authToken;\r\n      headers.Authorization = storageSession;\r\n    }\r\n    try {\r\n      method = method.toLowerCase();\r\n      let response = await Axios.request({\r\n        method,\r\n        url,\r\n        data: body,\r\n        headers: headers,\r\n        params: queryOptions,\r\n        cancelToken: new CancelToken(function executor(c) {\r\n          // An executor function receives a cancel function as a parameter\r\n          cancel = c;\r\n        }),\r\n      });\r\n\r\n      if (response.ok === false || response.status !== 200) {\r\n        let errorObject = {\r\n          code: response.status,\r\n          data: response.data,\r\n        };\r\n\r\n        throw errorObject;\r\n      }\r\n      const data = new SuccessHandlerHelper(response.data);\r\n      return data.data;\r\n    } catch (err) {\r\n      if (Axios.isCancel(err) || !err.response) {\r\n        return {\r\n          isError: true,\r\n          error: \"Request cancelled\",\r\n          messages: err.message === \"cancel\" ? [] : [\"Request cancelled\"],\r\n        };\r\n      } else {\r\n        const errorHelper = new ErrorHandlerHelper(err.response);\r\n        return errorHelper.error;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Cancels the last request.\r\n   */\r\n  cancelRequest = (err) => {\r\n    cancel && cancel(err);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}