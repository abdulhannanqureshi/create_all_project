{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\components\\\\organisms\\\\SectionAlternate\\\\SectionAlternate.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: theme.palette.alternate.main\n  },\n  inner: {\n    maxWidth: theme.layout.contentWidth,\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(6, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(8, 8)\n    },\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(12, 8)\n    }\n  },\n  innerNarrowed: {\n    maxWidth: 800\n  }\n}));\n/**\r\n * Component to display the alternative sections\r\n *\r\n * @param {Object} props\r\n */\n\nconst SectionAlternate = props => {\n  const {\n    children,\n    innernarrowed,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\", \"innernarrowed\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"section\", _extends({\n    className: clsx('section-alternate', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: clsx('section-alternate__content', classes.inner, innernarrowed ? classes.innerNarrowed : {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nSectionAlternate.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Children to placed inside the section\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Should show narrow sections\r\n   */\n  innernarrowed: PropTypes.bool\n};\nexport default SectionAlternate;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/components/organisms/SectionAlternate/SectionAlternate.js"],"names":["React","clsx","PropTypes","makeStyles","useStyles","theme","root","background","palette","alternate","main","inner","maxWidth","layout","contentWidth","width","margin","padding","spacing","breakpoints","up","innerNarrowed","SectionAlternate","props","children","innernarrowed","className","rest","classes","propTypes","string","node","bool"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,SAAd,CAAwBC;AADhC,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEP,KAAK,CAACQ,MAAN,CAAaC,YADlB;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,MAAM,EAAE,QAHH;AAILC,IAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJJ;AAKL,KAACb,KAAK,CAACc,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADmB,KALzB;AAQL,KAACb,KAAK,CAACc,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAc,EAAd,EAAkB,CAAlB;AADmB;AARzB,GAJ8B;AAgBrCG,EAAAA,aAAa,EAAE;AACbT,IAAAA,QAAQ,EAAE;AADG;AAhBsB,CAAL,CAAN,CAA5B;AAqBA;AACA;AACA;AACA;AACA;;AACA,MAAMU,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA;AAA3B,MAAkDH,KAAxD;AAAA,QAA+CI,IAA/C,4BAAwDJ,KAAxD;;AAEA,QAAMK,OAAO,GAAGxB,SAAS,EAAzB;AAEA,SACE;AACE,IAAA,SAAS,EAAEH,IAAI,CAAC,mBAAD,EAAsB2B,OAAO,CAACtB,IAA9B,EAAoCoB,SAApC;AADjB,KAEMC,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIE;AACE,IAAA,SAAS,EAAE1B,IAAI,CACb,4BADa,EAEb2B,OAAO,CAACjB,KAFK,EAGbc,aAAa,GAAGG,OAAO,CAACP,aAAX,GAA2B,EAH3B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGG,QAPH,CAJF,CADF;AAgBD,CArBD;;AAuBAF,gBAAgB,CAACO,SAAjB,GAA6B;AAC3B;AACF;AACA;AACEH,EAAAA,SAAS,EAAExB,SAAS,CAAC4B,MAJM;;AAK3B;AACF;AACA;AACEN,EAAAA,QAAQ,EAAEtB,SAAS,CAAC6B,IARO;;AAS3B;AACF;AACA;AACEN,EAAAA,aAAa,EAAEvB,SAAS,CAAC8B;AAZE,CAA7B;AAeA,eAAeV,gBAAf","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background: theme.palette.alternate.main,\r\n  },\r\n  inner: {\r\n    maxWidth: theme.layout.contentWidth,\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(6, 2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(8, 8),\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(12, 8),\r\n    },\r\n  },\r\n  innerNarrowed: {\r\n    maxWidth: 800,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the alternative sections\r\n *\r\n * @param {Object} props\r\n */\r\nconst SectionAlternate = props => {\r\n  const { children, innernarrowed, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section\r\n      className={clsx('section-alternate', classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <div\r\n        className={clsx(\r\n          'section-alternate__content',\r\n          classes.inner,\r\n          innernarrowed ? classes.innerNarrowed : {},\r\n        )}\r\n      >\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSectionAlternate.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Children to placed inside the section\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Should show narrow sections\r\n   */\r\n  innernarrowed: PropTypes.bool,\r\n};\r\n\r\nexport default SectionAlternate;\r\n"]},"metadata":{},"sourceType":"module"}