{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\components\\\\common\\\\Modal\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nconst useStyles = makeStyles(theme => ({\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"6px 22px\",\n    backgroundColor: \"#5120FF\",\n    color: \"#fff\",\n    fontSize: 16,\n    borderRadius: 5,\n    minWidth: 142,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  anotherCommonBtn: {\n    backgroundColor: \"#fff\",\n    color: \"#5120FF\",\n    \"&:hover\": {\n      backgroundColor: \"#5120FF\",\n      color: \"#fff\"\n    }\n  }\n}));\n\nconst Modal = props => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Dialog, {\n    fullWidth: props.fullWidth,\n    maxWidth: props.maxWidth,\n    fullScreen: fullScreen,\n    open: props.open,\n    onRequestClose: props.handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, props.title ? props.title : \"\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, props.contentText ? __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, props.contentText) : \"\", props.url ? __jsx(\"iframe\", {\n    class: \"embed-responsive-item\",\n    src: `${props.url}?rel=0&amp;enablejsapi=1&amp;`,\n    allowfullscreen: \"\",\n    \"data-gtm-yt-inspected-1170188_142\": \"true\",\n    id: \"438041764\",\n    width: \"500\",\n    height: \"350\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }) : \"\", props.content ? props.content : \"\"), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, props.cancleStatus ? __jsx(Button, {\n    autoFocus: true,\n    onClick: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, props.cancleName ? props.cancleName : \"Close\") : \"\", __jsx(Button, {\n    className: clsx(classes.commonBtn, classes.anotherCommonBtn),\n    variant: \"outline\",\n    color: \"secondary\",\n    onClick: props.handleClose,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, props.saveName ? props.saveName : \"Cancel\"))));\n};\n\n_s(Modal, \"HuLHdww4fxgsJ0uDCBlU6J3flfg=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/components/common/Modal/Modal.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","makeStyles","useTheme","clsx","useStyles","theme","commonBtn","display","padding","backgroundColor","color","fontSize","borderRadius","minWidth","border","textAlign","transition","boxShadow","anotherCommonBtn","Modal","props","classes","fullScreen","breakpoints","down","fullWidth","maxWidth","open","handleClose","title","contentText","url","content","cancleStatus","cancleName","saveName"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  commonBtn: {\r\n    display: \"inline-block\",\r\n    padding: \"6px 22px\",\r\n    backgroundColor: \"#5120FF\",\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n    borderRadius: 5,\r\n    minWidth: 142,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  anotherCommonBtn: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#5120FF\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#5120FF\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Modal = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth={props.fullWidth}\r\n        maxWidth={props.maxWidth}\r\n        fullScreen={fullScreen}\r\n        open={props.open}\r\n        onRequestClose={props.handleClose}\r\n        aria-labelledby='responsive-dialog-title'\r\n      >\r\n        <DialogTitle id='responsive-dialog-title'>\r\n          {props.title ? props.title : \"\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {props.contentText ? (\r\n            <DialogContentText>{props.contentText}</DialogContentText>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {props.url ? (\r\n            <iframe\r\n              class='embed-responsive-item'\r\n              src={`${props.url}?rel=0&amp;enablejsapi=1&amp;`}\r\n              allowfullscreen=''\r\n              data-gtm-yt-inspected-1170188_142='true'\r\n              id='438041764'\r\n              width={\"500\"}\r\n              height={\"350\"}\r\n            ></iframe>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {props.content ? props.content : \"\"}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {props.cancleStatus ? (\r\n            <Button autoFocus onClick={props.handleClose}>\r\n              {props.cancleName ? props.cancleName : \"Close\"}\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Button\r\n            className={clsx(classes.commonBtn, classes.anotherCommonBtn)}\r\n            variant={\"outline\"}\r\n            color={\"secondary\"}\r\n            onClick={props.handleClose}\r\n            autoFocus\r\n          >\r\n            {props.saveName ? props.saveName : \"Cancel\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal\r\n"]},"metadata":{},"sourceType":"module"}