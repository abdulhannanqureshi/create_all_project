{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\components\\\\organisms\\\\CardCategoryLink\\\\CardCategoryLink.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, colors, IconButton } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { IconAlternate } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  fontWeight700: {\n    fontWeight: 700\n  },\n  heading: {\n    fontSize: \"24px\"\n  },\n  categoryIconButton: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end'\n  },\n  subheading: {}\n}));\n/**\r\n * Component to display the category link card\r\n *\r\n * @param {Object} props\r\n */\n\nconst CardCategoryLink = props => {\n  const {\n    fontIconClass,\n    color,\n    title,\n    subtitle,\n    href,\n    align,\n    className,\n    iconAlternateProps,\n    titleProps,\n    subtitleProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"fontIconClass\", \"color\", \"title\", \"subtitle\", \"href\", \"align\", \"className\", \"iconAlternateProps\", \"titleProps\", \"subtitleProps\"]);\n\n  const classes = useStyles();\n  let justifyGrid = 'flex-start';\n\n  if (align === 'center') {\n    justifyGrid = 'center';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n\n  return __jsx(CardBase, _extends({\n    className: clsx(\"card-category-link\", classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"card-category-link__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    justifyContent: justifyGrid,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(IconAlternate, _extends({\n    fontIconClass: fontIconClass,\n    color: color,\n    size: \"medium\"\n  }, iconAlternateProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"h6\",\n    color: \"textPrimary\",\n    align: align,\n    className: clsx(classes.fontWeight700)\n  }, titleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), title)), subtitle && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, _extends({\n    variant: \"body1\",\n    align: align,\n    className: classes.subheading,\n    color: \"textPrimary\"\n  }, subtitleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), subtitle))), __jsx(\"a\", {\n    href: href,\n    className: clsx(\"card-category-link__item\", classes.categoryIconButton),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    className: \"card-category-link__icon-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(ArrowRightAltIcon, {\n    className: \"card-category-link__icon\",\n    style: {\n      color: \"#5120ff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })))));\n};\n\nCardCategoryLink.defaultProps = {\n  align: 'left',\n  href: '#',\n  iconAlternateProps: {},\n  titleProps: {},\n  subtitleProps: {}\n};\nCardCategoryLink.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Promo title to show inside the card\r\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\r\n   * Promo subtitle to show inside the card\r\n   */\n  subtitle: PropTypes.string,\n\n  /**\r\n   * Promo description to show inside the card\r\n   */\n  href: PropTypes.string.isRequired,\n\n  /**\r\n   * Promo font icon class name to show inside the card\r\n   */\n  fontIconClass: PropTypes.string,\n\n  /**\r\n   * Promo icon color to show inside the card\r\n   */\n  color: PropTypes.oneOf([colors.red, colors.pink, colors.purple, colors.deepPurple, colors.indigo, colors.blue, colors.lightBlue, colors.cyan, colors.teal, colors.green, colors.lightGreen, colors.lime, colors.yellow, colors.amber, colors.orange, colors.deepOrange, colors.brown, colors.grey, colors.blueGrey]).isRequired,\n\n  /**\r\n   * The content alignment\r\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n\n  /**\r\n   * Additional props to pass to the IconAlternate component\r\n   */\n  iconAlternateProps: PropTypes.object,\n\n  /**\r\n   * Additional props to pass to the title Typography component\r\n   */\n  titleProps: PropTypes.object,\n\n  /**\r\n   * Additional props to pass to the subtitle Typography component\r\n   */\n  subtitleProps: PropTypes.object\n};\nexport default CardCategoryLink;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/components/organisms/CardCategoryLink/CardCategoryLink.js"],"names":["React","clsx","PropTypes","makeStyles","Grid","Typography","colors","IconButton","ArrowRightAltIcon","IconAlternate","CardBase","useStyles","theme","root","height","width","fontWeight700","fontWeight","heading","fontSize","categoryIconButton","display","justifyContent","subheading","CardCategoryLink","props","fontIconClass","color","title","subtitle","href","align","className","iconAlternateProps","titleProps","subtitleProps","rest","classes","justifyGrid","defaultProps","propTypes","string","isRequired","oneOf","red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography, colors, IconButton } from '@material-ui/core';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport { IconAlternate } from 'components/molecules';\r\nimport { CardBase } from 'components/organisms';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  fontWeight700: {\r\n    fontWeight: 700,\r\n  },\r\n  heading:{\r\n    fontSize:\"24px\"\r\n  },\r\n  categoryIconButton: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  subheading:{}\r\n}));\r\n\r\n/**\r\n * Component to display the category link card\r\n *\r\n * @param {Object} props\r\n */\r\nconst CardCategoryLink = props => {\r\n  const {\r\n    fontIconClass,\r\n    color,\r\n    title,\r\n    subtitle,\r\n    href,\r\n    align,\r\n    className,\r\n    iconAlternateProps,\r\n    titleProps,\r\n    subtitleProps,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  let justifyGrid = 'flex-start';\r\n  if (align === 'center') {\r\n    justifyGrid = 'center';\r\n  } else if (align === 'right') {\r\n    justifyGrid = 'flex-end';\r\n  }\r\n  return (\r\n    <CardBase\r\n      className={clsx(\"card-category-link\", classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <>\r\n        <Grid container spacing={2} className='card-category-link__wrapper'>\r\n          <Grid item container justifyContent={justifyGrid} xs={12}>\r\n            <IconAlternate\r\n              fontIconClass={fontIconClass}\r\n              color={color}\r\n              size='medium'\r\n              {...iconAlternateProps}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='h6'\r\n              color='textPrimary'\r\n              align={align}\r\n              className={clsx(classes.fontWeight700)}\r\n              {...titleProps}\r\n            >\r\n              {title}\r\n            </Typography>\r\n          </Grid>\r\n          {subtitle && (\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant='body1'\r\n                align={align}\r\n                className={classes.subheading}\r\n                color='textPrimary'\r\n                {...subtitleProps}\r\n              >\r\n                {subtitle}\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <a\r\n          href={href}\r\n          className={clsx(\r\n            \"card-category-link__item\",\r\n            classes.categoryIconButton\r\n          )}\r\n        >\r\n          <IconButton className='card-category-link__icon-button'>\r\n            <ArrowRightAltIcon\r\n              className='card-category-link__icon'\r\n              style={{ color: \"#5120ff\" }}\r\n            />\r\n          </IconButton>\r\n        </a>\r\n      </>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nCardCategoryLink.defaultProps = {\r\n  align: 'left',\r\n  href: '#',\r\n  iconAlternateProps: {},\r\n  titleProps: {},\r\n  subtitleProps: {},\r\n};\r\n\r\nCardCategoryLink.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Promo title to show inside the card\r\n   */\r\n  title: PropTypes.string.isRequired,\r\n  /**\r\n   * Promo subtitle to show inside the card\r\n   */\r\n  subtitle: PropTypes.string,\r\n  /**\r\n   * Promo description to show inside the card\r\n   */\r\n  href: PropTypes.string.isRequired,\r\n  /**\r\n   * Promo font icon class name to show inside the card\r\n   */\r\n  fontIconClass: PropTypes.string,\r\n  /**\r\n   * Promo icon color to show inside the card\r\n   */\r\n  color: PropTypes.oneOf([\r\n    colors.red,\r\n    colors.pink,\r\n    colors.purple,\r\n    colors.deepPurple,\r\n    colors.indigo,\r\n    colors.blue,\r\n    colors.lightBlue,\r\n    colors.cyan,\r\n    colors.teal,\r\n    colors.green,\r\n    colors.lightGreen,\r\n    colors.lime,\r\n    colors.yellow,\r\n    colors.amber,\r\n    colors.orange,\r\n    colors.deepOrange,\r\n    colors.brown,\r\n    colors.grey,\r\n    colors.blueGrey,\r\n  ]).isRequired,\r\n  /**\r\n   * The content alignment\r\n   */\r\n  align: PropTypes.oneOf(['left', 'right', 'center']),\r\n  /**\r\n   * Additional props to pass to the IconAlternate component\r\n   */\r\n  iconAlternateProps: PropTypes.object,\r\n  /**\r\n   * Additional props to pass to the title Typography component\r\n   */\r\n  titleProps: PropTypes.object,\r\n  /**\r\n   * Additional props to pass to the subtitle Typography component\r\n   */\r\n  subtitleProps: PropTypes.object,\r\n};\r\n\r\nexport default CardCategoryLink;\r\n"]},"metadata":{},"sourceType":"module"}