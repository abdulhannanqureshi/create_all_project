{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Link from 'next/link';\nimport { ApiHelper } from 'helper';\nimport { ApiRoutes } from 'config';\nimport AppConfig from '../../../../config/appConfig';\nimport Toast from 'components/toaster';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from \"clsx\";\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport router from \"next/router\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  loader: {\n    display: \"flex\",\n    minHeight: \"500px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleCta: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      textAlign: \"center\"\n    },\n    \"& h6\": {\n      [theme.breakpoints.down(\"md\")]: {\n        width: 130\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\"\n      }\n    }\n  },\n  accordianDetails: {\n    flexFlow: \"column\",\n    borderTop: \"1px solid #ccc\"\n  },\n  heading: {\n    fontWeight: \"600\"\n  },\n  downloadButton: {\n    display: \"inline-block\",\n    padding: \"10px\",\n    border: \"1px solid #5120FF\",\n    borderRadius: \"4px\",\n    textTransform: \"uppercase\"\n  },\n  textDanger: {\n    color: \"red\"\n  },\n  accordion: {\n    marginBottom: \"15px\",\n    border: \"1px solid #ababab\",\n    minWidth: 600\n  },\n  courseWrapper: {\n    maxHeight: 500,\n    overflowY: \"auto\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"10px 22px\",\n    backgroundColor: \"#5120FF\",\n    color: \"#fff\",\n    fontSize: 16,\n    borderRadius: 5,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  anotherCommonBtn: {\n    backgroundColor: \"#fff\",\n    color: \"#5120FF\",\n    \"&:hover\": {\n      backgroundColor: \"#5120FF\",\n      color: \"#fff\"\n    }\n  },\n  smallCommonBtn: {\n    padding: \"7px 22px\"\n  }\n}));\n\nconst Billing = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: responseLoader,\n    1: setResponseLoader\n  } = useState(false);\n  const {\n    0: courseData,\n    1: setCourseData\n  } = useState([]);\n  const {\n    0: courseDuration,\n    1: setCourseDuration\n  } = useState(false);\n  useEffect(() => {\n    fetchTransectionData();\n  }, []);\n\n  const fetchTransectionData = async () => {\n    setLoader(true);\n    const response = await new ApiHelper().FetchFromServer(ApiRoutes.PURCHASEDCOURSE.service, ApiRoutes.PURCHASEDCOURSE.url, ApiRoutes.PURCHASEDCOURSE.method, ApiRoutes.PURCHASEDCOURSE.authenticate, undefined, undefined);\n\n    if (response && !response.isError) {\n      const data = response.data.data;\n      setCourseData(data);\n      setCourseDuration(response.data.courseDuration);\n      setLoader(false);\n    } else {\n      Toast.fire({\n        icon: \"error\",\n        title: response.messages[0]\n      });\n    }\n  };\n\n  const handleCertificate = async id => {\n    setResponseLoader(true);\n    const data = {\n      courseId: id\n    };\n    const response = await new ApiHelper().FetchFromServer(ApiRoutes.CERTIFICATEREQUEST.service, ApiRoutes.CERTIFICATEREQUEST.url, ApiRoutes.CERTIFICATEREQUEST.method, ApiRoutes.CERTIFICATEREQUEST.authenticate, undefined, data);\n\n    if (response && !response.isError) {\n      const data = response.data.data;\n      setResponseLoader(false);\n      Toast.fire({\n        icon: \"success\",\n        title: response.messages\n      });\n    } else {\n      Toast.fire({\n        icon: response.code === 500 ? \"warning\" : \"error\",\n        title: response.messages\n      });\n    }\n  };\n\n  const downloadCetfificate = link => {\n    router.push(`${AppConfig.IMAGE_URL}/${link}`);\n  };\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    className: classes.root\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.titleCta\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\"\n  }, \"My Courses\"), __jsx(Typography, {\n    variant: \"p\",\n    color: \"textWarning\",\n    className: classes.textDanger\n  }, \"You will able to request for a Certificate, only if you have purchased a full course.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textWarning\"\n  }, \"To access your purchased courses, please login to link below with the same account credentials as you entered here\", \" \", __jsx(\"a\", {\n    href: \"https://coinifideacademy.talentlms.com/\",\n    target: \"_blank\"\n  }, \"https://coinifideacademy.talentlms.com/\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12\n  }, __jsx(Box, {\n    className: classes.courseWrapper\n  }, !loader ? __jsx(React.Fragment, null, courseData && courseData.length > 0 ? courseData.map((data, index) => {\n    return __jsx(Accordion, {\n      key: index,\n      className: classes.accordion\n    }, __jsx(AccordionSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, null),\n      \"aria-controls\": \"panel1a-content\",\n      id: \"panel1a-header\"\n    }, __jsx(Typography, {\n      className: classes.heading\n    }, data.courses.title)), __jsx(AccordionDetails, {\n      className: classes.accordianDetails\n    }, __jsx(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }, __jsx(Typography, {\n      className: classes.heading\n    }, \"Module List Of Course\"), __jsx(Typography, {\n      className: classes.heading\n    }, \"Valid Up to\")), data.modules.map((modualData, index) => {\n      return __jsx(Box, {\n        pt: 2,\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      }, __jsx(Typography, null, modualData.moduleName), __jsx(Typography, null, moment(modualData.purchasedDate).add(courseDuration, \"days\").format(\"MMMM Do YYYY\")));\n    }), data.labId ? __jsx(Box, {\n      pt: 2,\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }, __jsx(Typography, null, data.lab.title), __jsx(Typography, null, moment(data.lab.purchasedDate).add(courseDuration, \"days\").format(\"MMMM Do YYYY\"))) : null, __jsx(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      pt: 3\n    }, data.modules && data.modules.length ? __jsx(React.Fragment, null, __jsx(Box, {\n      pt: 2\n    }, __jsx(Link, {\n      href: \"https://coinifideacademy.talentlms.com/\",\n      download: true\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      className: clsx(classes.commonBtn, classes.anotherCommonBtn)\n    }, \"Access Course\")))) : null, data.lab.link ? __jsx(React.Fragment, null, __jsx(Box, {\n      pt: 2\n    }, __jsx(Link, {\n      href: data.lab.link ? `https://${data.lab.link}` : \"\",\n      download: true\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      className: clsx(classes.commonBtn, classes.anotherCommonBtn)\n    }, \"Access Lab\")))) : null, data.courses.isAllCoursePurchased ? __jsx(Box, {\n      pt: 2\n    }, data.courses.certificate !== \"\" && data.courses.isGenerated ? __jsx(Button, {\n      variant: \"contained\",\n      className: clsx(classes.commonBtn, classes.smallCommonBtn),\n      color: \"secondary\",\n      onClick: () => downloadCetfificate(data.courses.certificate)\n    }, \"Download Certificate\") // <Link\n    //   href={`${AppConfig.IMAGE_URL}${data.courses.certificate}`}\n    //   download\n    // >\n    //   <a\n    //     target='_blank'\n    //     className={classes.commonBtn}\n    //   >\n    //     Download Certificate\n    //   </a>\n    // </Link>\n    : __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => handleCertificate(data.courses._id),\n      className: clsx(classes.commonBtn, classes.smallCommonBtn)\n    }, \"Request For Certificate\")) : null)));\n  }) : __jsx(Typography, {\n    variant: \"h7\",\n    color: \"textPrimary\"\n  }, \"No Course purchased yet.\")) : __jsx(\"div\", {\n    className: classes.loader\n  }, __jsx(CircularProgress, null))))));\n};\n\nexport default Billing;","map":null,"metadata":{},"sourceType":"module"}