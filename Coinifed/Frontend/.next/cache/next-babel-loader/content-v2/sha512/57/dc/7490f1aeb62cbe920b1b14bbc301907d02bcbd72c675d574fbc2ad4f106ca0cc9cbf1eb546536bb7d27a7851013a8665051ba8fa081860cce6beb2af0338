{"ast":null,"code":"/**\r\n * Caution: Consider this file when using NextJS or GatsbyJS\r\n *\r\n * You may delete this file and its occurrences from the project filesystem if you are using react-scripts\r\n */\nimport BlogArticle from 'views/BlogArticle';\nexport var __N_SSG = true;\nexport default BlogArticle;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/pages/blog-details/[id].js"],"names":["BlogArticle"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAP,MAAwB,mBAAxB;;AAuEA,eAAeA,WAAf","sourcesContent":["/**\r\n * Caution: Consider this file when using NextJS or GatsbyJS\r\n *\r\n * You may delete this file and its occurrences from the project filesystem if you are using react-scripts\r\n */\r\nimport BlogArticle from 'views/BlogArticle';\r\nimport { ApiHelper } from \"helper\";\r\nimport { ApiRoutes } from \"config\";\r\n\r\nexport async function getStaticPaths () {\r\n    // For Get Blog LIst\r\n    const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.BLOGLIST.service,\r\n        ApiRoutes.BLOGLIST.url,\r\n        ApiRoutes.BLOGLIST.method,\r\n        ApiRoutes.BLOGLIST.authenticate,\r\n        undefined,\r\n        undefined\r\n      );\r\n      let blogData = [];\r\n      if (response && !response.isError) {\r\n        blogData = response.data.data;\r\n      }\r\n\r\n    const paths = blogData.map((e) => {\r\n      return {\r\n        params: {\r\n          id:  e._id,\r\n        }\r\n      }\r\n    })\r\n\r\n    return {\r\n      paths,\r\n      fallback: false\r\n    }\r\n  }\r\n\r\n export async function getStaticProps(context) {\r\n    const id = await context.params.id\r\n  // For Get Blog Details Data\r\n  const response = await new ApiHelper().FetchFromServer(\r\n    ApiRoutes.BLOGDETAIL.service,\r\n    ApiRoutes.BLOGDETAIL.url.replace(\":id\",id),\r\n    ApiRoutes.BLOGDETAIL.method,\r\n    ApiRoutes.BLOGDETAIL.authenticate,\r\n    undefined,\r\n    undefined\r\n  );\r\n  let blogDetails = [];\r\n  if (response && !response.isError) {\r\n    blogDetails = response.data.data;\r\n  }\r\n  // For Get CMS Data\r\n  const responseCMS = await new ApiHelper().FetchFromServer(\r\n    ApiRoutes.FRONT_PAGE_DATA.service,\r\n    ApiRoutes.FRONT_PAGE_DATA.url,\r\n    ApiRoutes.FRONT_PAGE_DATA.method,\r\n    ApiRoutes.FRONT_PAGE_DATA.authenticate,\r\n    undefined,\r\n    undefined\r\n  );\r\n  let cmsData = [];\r\n  if (responseCMS && !responseCMS.isError) {\r\n    cmsData = responseCMS.data.data;\r\n  }\r\n\r\n  return {\r\n    props: {\r\n        blogDetails,\r\n        cmsData,\r\n    },\r\n    revalidate: 1,\r\n  }\r\n}\r\n\r\nexport default BlogArticle;\r\n"]},"metadata":{},"sourceType":"module"}