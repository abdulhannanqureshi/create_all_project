{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\WithLayout.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport getTheme from 'theme';\nimport AOS from 'aos';\nexport const useDarkMode = () => {\n  const {\n    0: themeMode,\n    1: setTheme\n  } = useState('light');\n  const {\n    0: mountedComponent,\n    1: setMountedComponent\n  } = useState(false);\n\n  const setMode = mode => {\n    window.localStorage.setItem('themeMode', mode);\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    themeMode === 'light' ? setMode('dark') : setMode('light');\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('themeMode');\n    localTheme ? setTheme(localTheme) : setMode('light');\n    setMountedComponent(true);\n    AOS.refresh();\n  }, []);\n  useEffect(() => {\n    AOS.refresh();\n  }, [themeMode]);\n  return [themeMode, themeToggler, mountedComponent];\n};\nexport default function WithLayout(_ref) {\n  let {\n    component: Component,\n    layout: Layout\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"layout\"]);\n\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n\n    AOS.init({\n      once: true,\n      delay: 50,\n      duration: 500,\n      easing: 'ease-in-out'\n    });\n  }, []);\n  const [themeMode, themeToggler, mountedComponent] = useDarkMode();\n  useEffect(() => {\n    AOS.refresh();\n  }, [mountedComponent]);\n  return __jsx(MuiThemeProvider, {\n    theme: getTheme(themeMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(Paper, {\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    themeMode: themeMode,\n    themeToggler: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({\n    themeMode: themeMode\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/WithLayout.js"],"names":["React","useState","useEffect","ThemeProvider","MuiThemeProvider","Paper","CssBaseline","getTheme","AOS","useDarkMode","themeMode","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","themeToggler","localTheme","getItem","refresh","WithLayout","component","Component","layout","Layout","rest","jssStyles","document","querySelector","parentElement","removeChild","init","once","delay","duration","easing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ThemeProvider as MuiThemeProvider }  from '@material-ui/core/styles';\r\nimport  Paper  from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport getTheme from 'theme';\r\n\r\nimport AOS from 'aos';\r\n\r\nexport const useDarkMode = () => {\r\n  const [themeMode, setTheme] = useState('light');\r\n  const [mountedComponent, setMountedComponent] = useState(false);\r\n\r\n  const setMode = mode => {\r\n    window.localStorage.setItem('themeMode', mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const themeToggler = () => {\r\n    themeMode === 'light' ? setMode('dark') : setMode('light');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('themeMode');\r\n    localTheme ? setTheme(localTheme) : setMode('light');\r\n    setMountedComponent(true);\r\n    AOS.refresh();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    AOS.refresh();\r\n  }, [themeMode]);\r\n\r\n  return [themeMode, themeToggler, mountedComponent];\r\n};\r\n\r\nexport default function WithLayout({ component: Component, layout: Layout, ...rest }) {\r\n  React.useEffect(() => {\r\n    // Remove the server-side injected CSS.\r\n    const jssStyles = document.querySelector('#jss-server-side');\r\n    if (jssStyles) {\r\n      jssStyles.parentElement.removeChild(jssStyles);\r\n    }\r\n\r\n    AOS.init({\r\n      once: true,\r\n      delay: 50,\r\n      duration: 500,\r\n      easing: 'ease-in-out',\r\n    });\r\n  }, []);\r\n\r\n  const [themeMode, themeToggler, mountedComponent] = useDarkMode();\r\n  useEffect(() => {\r\n    AOS.refresh();\r\n  }, [mountedComponent]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={getTheme(themeMode)}>\r\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n      <CssBaseline />\r\n      <Paper elevation={0}>\r\n        <Layout themeMode={themeMode} themeToggler={themeToggler}>\r\n          <Component themeMode={themeMode} {...rest} />\r\n        </Layout>\r\n      </Paper>\r\n    </MuiThemeProvider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}