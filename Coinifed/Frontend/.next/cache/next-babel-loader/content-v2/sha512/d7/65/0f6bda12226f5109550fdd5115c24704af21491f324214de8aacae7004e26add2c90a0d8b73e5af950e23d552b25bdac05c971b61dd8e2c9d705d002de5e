{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\SigninSimple\\\\components\\\\Form\\\\Form.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport clsx from \"clsx\";\nimport Toast from 'components/toaster';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport validate from 'validate.js';\nimport { LearnMoreLink } from \"components/atoms\";\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport { ApiHelper } from \"../../../../helper\";\nimport Cookies from 'js-cookie';\nimport { useStore } from '../../../../store';\nimport { Consumer } from '../../../../helper/ContextAPI';\nimport { useState } from 'react';\nimport Loader from '../../../../components/common/Loader/loader';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  link: {\n    color: \"#3f51b5\",\n    cursor: \"pointer\",\n    fontWeight: \"600\"\n  },\n  commonBtn: {\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  cusTextPrimary: {\n    \"& .MuiTypography-colorPrimary\": {\n      color: \"#5120ff\"\n    }\n  },\n  eyeWrapper: {\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    lineHeight: \"10px\",\n    right: 20,\n    cursor: \"pointer\",\n    \"& svg\": {\n      fill: \"#5120ff\"\n    }\n  },\n  positionRelative: {\n    position: \"relative\"\n  },\n  authLink: {\n    color: '#5120ff',\n    fontWeight: 'bold'\n  }\n}));\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    },\n    email: true,\n    length: {\n      maximum: 300\n    }\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    },\n    length: {\n      minimum: 8\n    }\n  }\n};\n\nconst Form = props => {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    tokenHandle,\n    getCartLength\n  } = useStore();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [eyeStatus, setEyeStatus] = React.useState(true);\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      setIsLoading(true);\n      const data = {\n        email: formState.values.email,\n        password: formState.values.password\n      };\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.LOGIN.service, ApiRoutes.LOGIN.url, ApiRoutes.LOGIN.method, ApiRoutes.LOGIN.authenticate, undefined, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.data.message\n        });\n        localStorage.setItem(\"token\", response.data.token); // Set Cookies for Auth\n\n        Cookies.set('token', response.data.token, {\n          expires: 1\n        });\n        tokenHandle();\n        getCartLength;\n\n        if (props.categoryId && props.categoryId !== \"\") {\n          props.handleAuthModalClose(); //props.setOrderModalOpen(true);\n\n          props.pageReload();\n        } else {\n          router.push(\"/dashboard\");\n        }\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.messages[0]\n        });\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  return __jsx(React.Fragment, null, isLoading ? __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }) : null, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"E-mail\",\n    label: \"E-mail *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helpertext: hasError(\"email\") ? formState.errors.email[0] : null,\n    error: hasError(\"email\"),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    className: classes.positionRelative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    placeholder: \"Password\",\n    label: \"Password *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"password\",\n    fullWidth: true,\n    helpertext: hasError(\"password\") ? formState.errors.password[0] : null,\n    error: hasError(\"password\"),\n    onChange: handleChange,\n    type: eyeStatus ? \"password\" : \"text\",\n    value: formState.values.password || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }), eyeStatus ? __jsx(Box, {\n    className: clsx(classes.eyeWrapper, classes.eyeVisible),\n    onClick: () => setEyeStatus(!eyeStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, __jsx(VisibilityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  })) : __jsx(Box, {\n    className: clsx(classes.eyeWrapper, classes.eyeOff),\n    onClick: () => setEyeStatus(!eyeStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, __jsx(VisibilityOffIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"Fields that are marked with an asterisk (*) sign are required.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.commonBtn,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Sign in\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Forgot your password?\", \" \", __jsx(Link, {\n    href: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    className: classes.authLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, __jsx(LearnMoreLink, {\n    title: \"Click Here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }))))), props.setLoginOpen ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, \"Don't Have Account Please\"), __jsx(\"span\", {\n    onClick: () => props.setSignUpOpen(true),\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, \"\\xA0 Sign Up\"))) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, \"Don't have an account?\", \" \", __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: classes.authLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }\n  }, __jsx(LearnMoreLink, {\n    title: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/SigninSimple/components/Form/Form.js"],"names":["Box","Button","Grid","makeStyles","TextField","Typography","VisibilityIcon","VisibilityOffIcon","clsx","Toast","Link","useRouter","React","validate","LearnMoreLink","ApiRoutes","ApiHelper","Cookies","useStore","Consumer","useState","Loader","useStyles","theme","root","width","link","color","cursor","fontWeight","commonBtn","padding","backgroundColor","fontSize","border","textAlign","transition","boxShadow","cusTextPrimary","eyeWrapper","position","top","transform","lineHeight","right","fill","positionRelative","authLink","schema","email","presence","allowEmpty","message","length","maximum","password","minimum","Form","props","classes","router","tokenHandle","getCartLength","formState","setFormState","isValid","values","touched","errors","eyeStatus","setEyeStatus","useEffect","handleChange","event","persist","target","name","type","checked","value","handleSubmit","preventDefault","setIsLoading","data","response","FetchFromServer","LOGIN","service","url","method","authenticate","undefined","isError","fire","icon","title","localStorage","setItem","token","set","expires","categoryId","handleAuthModalClose","pageReload","push","messages","hasError","field","isLoading","eyeVisible","eyeOff","setLoginOpen","setSignUpOpen"],"mappings":"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","sourcesContent":["import Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport clsx from \"clsx\";\r\nimport Toast from 'components/toaster';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport React from 'react';\r\nimport validate from 'validate.js';\r\nimport { LearnMoreLink } from \"components/atoms\";\r\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\r\nimport { ApiHelper } from \"../../../../helper\";\r\nimport Cookies from 'js-cookie'\r\nimport { useStore } from '../../../../store'\r\nimport { Consumer } from '../../../../helper/ContextAPI'\r\nimport {useState} from 'react';\r\nimport Loader from '../../../../components/common/Loader/loader'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  link: {\r\n    color: \"#3f51b5\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"600\",\r\n  },\r\n  commonBtn: {\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  cusTextPrimary: {\r\n    \"& .MuiTypography-colorPrimary\": {\r\n      color: \"#5120ff\",\r\n    },\r\n  },\r\n  eyeWrapper: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    transform: \"translateY(-50%)\",\r\n    lineHeight: \"10px\",\r\n    right: 20,\r\n    cursor: \"pointer\",\r\n    \"& svg\": {\r\n      fill: \"#5120ff\",\r\n    },\r\n  },\r\n  positionRelative: {\r\n    position: \"relative\",\r\n  },\r\n  authLink:{\r\n    color: '#5120ff',\r\n    fontWeight: 'bold',\r\n  }\r\n}));\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n    email: true,\r\n    length: {\r\n      maximum: 300,\r\n    },\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: \"is required\" },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Form = (props) => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const { tokenHandle, getCartLength } = useStore()\r\n\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n  const [eyeStatus, setEyeStatus] = React.useState(true);\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formState.isValid) {\r\n      setIsLoading(true)\r\n      const data = {\r\n        email: formState.values.email,\r\n        password: formState.values.password,\r\n      };\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.LOGIN.service,\r\n        ApiRoutes.LOGIN.url,\r\n        ApiRoutes.LOGIN.method,\r\n        ApiRoutes.LOGIN.authenticate,\r\n        undefined,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.data.message,\r\n        });\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        // Set Cookies for Auth\r\n        Cookies.set('token', response.data.token, { expires: 1 })\r\n        tokenHandle();\r\n        getCartLength\r\n\r\n        if (props.categoryId && props.categoryId !== \"\") {\r\n          props.handleAuthModalClose();\r\n          //props.setOrderModalOpen(true);\r\n          props.pageReload();\r\n        } else {\r\n          router.push(\"/dashboard\");\r\n        }\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.messages[0],\r\n        });\r\n      }\r\n    }\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n  const [isLoading,setIsLoading]=useState(false)\r\n  return (\r\n    <>\r\n    {\r\n      isLoading ? <Loader/> : null\r\n    }\r\n    <div className={classes.root}>\r\n      <form name='password-reset-form' method='post' onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              placeholder='E-mail'\r\n              label='E-mail *'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='email'\r\n              fullWidth\r\n              helpertext={hasError(\"email\") ? formState.errors.email[0] : null}\r\n              error={hasError(\"email\")}\r\n              onChange={handleChange}\r\n              type='email'\r\n              value={formState.values.email || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box className={classes.positionRelative}>\r\n              <TextField\r\n                placeholder='Password'\r\n                label='Password *'\r\n                variant='outlined'\r\n                size='medium'\r\n                name='password'\r\n                fullWidth\r\n                helpertext={\r\n                  hasError(\"password\") ? formState.errors.password[0] : null\r\n                }\r\n                error={hasError(\"password\")}\r\n                onChange={handleChange}\r\n                type={eyeStatus ? \"password\" : \"text\"}\r\n                value={formState.values.password || \"\"}\r\n              />\r\n              {eyeStatus ? (\r\n                <Box\r\n                  className={clsx(classes.eyeWrapper, classes.eyeVisible)}\r\n                  onClick={() => setEyeStatus(!eyeStatus)}\r\n                >\r\n                  <VisibilityIcon />\r\n                </Box>\r\n              ) : (\r\n                <Box\r\n                  className={clsx(classes.eyeWrapper, classes.eyeOff)}\r\n                  onClick={() => setEyeStatus(!eyeStatus)}\r\n                >\r\n                  <VisibilityOffIcon />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <i>\r\n              <Typography variant='subtitle2'>\r\n                Fields that are marked with an asterisk (*) sign are required.\r\n              </Typography>\r\n            </i>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size='large'\r\n              variant='contained'\r\n              type='submit'\r\n              color='primary'\r\n              className={classes.commonBtn}\r\n              fullWidth>\r\n              Sign in\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              align='center'\r\n              className={classes.cusTextPrimary}\r\n            >\r\n              Forgot your password?{\" \"}\r\n              <Link href='/forgot-password'>\r\n                <a className={classes.authLink}>\r\n                  <LearnMoreLink title='Click Here' />\r\n                </a>\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          {props.setLoginOpen ? (\r\n            <Grid item xs={12}>\r\n              <Box\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Typography\r\n                  variant='subtitle1'\r\n                  color='textPrimary'\r\n                  align='center'\r\n                  className={classes.cusTextPrimary}\r\n                >\r\n                  Don't Have Account Please\r\n                </Typography>\r\n                <span\r\n                  onClick={() => props.setSignUpOpen(true)}\r\n                  className={classes.link}\r\n                >\r\n                  &nbsp; Sign Up\r\n                </span>\r\n              </Box>\r\n            </Grid>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant='subtitle1'\r\n                color='textPrimary'\r\n                align='center'\r\n                className={classes.cusTextPrimary}\r\n              >\r\n                Don't have an account?{\" \"}\r\n                <Link href='/signup'>\r\n                  <a className={classes.authLink}>\r\n                    <LearnMoreLink title='Sign Up'/>\r\n                  </a>\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n    </div></>\r\n\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}