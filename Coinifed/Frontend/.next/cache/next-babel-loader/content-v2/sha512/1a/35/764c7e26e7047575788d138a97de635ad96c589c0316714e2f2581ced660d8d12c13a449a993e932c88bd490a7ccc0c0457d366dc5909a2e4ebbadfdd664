{"ast":null,"code":"import _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\ForgotPasswordSimple\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Swal from 'sweetalert2';\nimport Toast from \"../../../../components/toaster\";\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport validate from 'validate.js';\nimport TextField from '@material-ui/core/TextField';\nimport { LearnMoreLink } from 'components/atoms';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { ApiHelper } from \"../../../../helper\";\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  commonBtn: {\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  cusTextPrimary: {\n    \"& .MuiTypography-colorPrimary\": {\n      color: \"#5120ff\"\n    }\n  }\n}));\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 300\n    }\n  }\n};\n\nconst Form = props => {\n  _s();\n\n  const classes = useStyles();\n  const router = useRouter();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      const data = {\n        email: formState.values.email\n      };\n\n      if (formState.isValid) {\n        const response = await new ApiHelper().FetchFromServer(ApiRoutes.USERFORGOTPASSWORDUPDATE.service, ApiRoutes.USERFORGOTPASSWORDUPDATE.url, ApiRoutes.USERFORGOTPASSWORDUPDATE.method, ApiRoutes.USERFORGOTPASSWORDUPDATE.authenticate, undefined, undefined, data);\n\n        if (response && !response.isError) {\n          Toast.fire({\n            icon: \"success\",\n            title: response.data.message\n          });\n        } else {\n          Toast.fire({\n            icon: \"error\",\n            title: \"Something went wrong\"\n          });\n        }\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const alertBox = () => {\n    Swal.fire({\n      title: \"Reset password link has been sent to your mail, please check Inbox\",\n      showDenyButton: false,\n      showCancelButton: false,\n      confirmButtonColor: \"#3085d6\",\n      confirmButtonText: \"Go  To Dashboard\"\n    }).then(result => {\n      if (result.isConfirmed) {\n        router.push(\"/signin\");\n      }\n    });\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    placeholder: \"E-mail\",\n    label: \"E-mail *\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helpertext: hasError(\"email\") ? formState.errors.email[0] : null,\n    error: hasError(\"email\"),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Fields that are marked with an asterisk (*) sign are required.\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.commonBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Submit tt\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    align: \"center\",\n    className: classes.cusTextPrimary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Remember your password?\", \" \", __jsx(LearnMoreLink, {\n    title: \"Sign in here\",\n    onClick: () => router.push(\"/signin\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(Form, \"fe7doVqsbIrLzzUTkJ3tzXmDCk8=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/ForgotPasswordSimple/components/Form/Form.js"],"names":["React","useRouter","Swal","Toast","makeStyles","validate","TextField","LearnMoreLink","Button","Grid","Typography","ApiHelper","ApiRoutes","useStyles","theme","root","width","commonBtn","padding","backgroundColor","fontSize","border","textAlign","transition","boxShadow","color","cusTextPrimary","schema","email","presence","allowEmpty","message","length","maximum","Form","props","classes","router","formState","setFormState","useState","isValid","values","touched","errors","useEffect","handleChange","event","persist","target","name","type","checked","value","handleSubmit","preventDefault","data","response","FetchFromServer","USERFORGOTPASSWORDUPDATE","service","url","method","authenticate","undefined","isError","fire","icon","title","alertBox","showDenyButton","showCancelButton","confirmButtonColor","confirmButtonText","then","result","isConfirmed","push","hasError","field"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Swal from 'sweetalert2'\r\nimport Toast from \"../../../../components/toaster\"\r\nimport  makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport validate from 'validate.js';\r\nimport  TextField   from '@material-ui/core/TextField';\r\nimport { LearnMoreLink } from 'components/atoms';\r\nimport  Button  from '@material-ui/core/Button';\r\nimport  Grid  from '@material-ui/core/Grid';\r\nimport  Typography  from '@material-ui/core/Typography';\r\nimport { ApiHelper } from \"../../../../helper\";\r\nimport {ApiRoutes} from \"../../../../config/ApiRoutes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  commonBtn: {\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  cusTextPrimary: {\r\n    \"& .MuiTypography-colorPrimary\": {\r\n      color: \"#5120ff\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 300,\r\n    },\r\n  },\r\n};\r\n\r\nconst Form = (props) => {\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formState.isValid) {\r\n      const data = {\r\n        email: formState.values.email,\r\n      };\r\n      if (formState.isValid) {\r\n        const response = await new ApiHelper().FetchFromServer(\r\n          ApiRoutes.USERFORGOTPASSWORDUPDATE.service,\r\n          ApiRoutes.USERFORGOTPASSWORDUPDATE.url,\r\n          ApiRoutes.USERFORGOTPASSWORDUPDATE.method,\r\n          ApiRoutes.USERFORGOTPASSWORDUPDATE.authenticate,\r\n          undefined,\r\n          undefined,\r\n          data\r\n        );\r\n        if (response && !response.isError) {\r\n          Toast.fire({\r\n            icon: \"success\",\r\n            title: response.data.message,\r\n          });\r\n        } else {\r\n          Toast.fire({\r\n            icon: \"error\",\r\n            title: \"Something went wrong\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const alertBox = () => {\r\n    Swal.fire({\r\n      title:\r\n        \"Reset password link has been sent to your mail, please check Inbox\",\r\n      showDenyButton: false,\r\n      showCancelButton: false,\r\n      confirmButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"Go  To Dashboard\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        router.push(\"/signin\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form name='password-reset-form' method='post' onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              placeholder='E-mail'\r\n              label='E-mail *'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='email'\r\n              fullWidth\r\n              helpertext={hasError(\"email\") ? formState.errors.email[0] : null}\r\n              error={hasError(\"email\")}\r\n              onChange={handleChange}\r\n              type='email'\r\n              value={formState.values.email || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <i>\r\n              <Typography variant='subtitle2'>\r\n                Fields that are marked with an asterisk (*) sign are required.\r\n              </Typography>\r\n            </i>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              size='large'\r\n              variant='contained'\r\n              type='submit'\r\n              color='primary'\r\n              fullWidth\r\n              className={classes.commonBtn}\r\n            >\r\n              Submit tt\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              align='center'\r\n              className={classes.cusTextPrimary}\r\n            >\r\n              Remember your password?{\" \"}\r\n              <LearnMoreLink\r\n                title='Sign in here'\r\n                onClick={() => router.push(\"/signin\")}\r\n              />\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}