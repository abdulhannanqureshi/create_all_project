{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from \"clsx\";\nimport moment from 'moment';\nimport React from 'react';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport Loader from 'components/common/Loader/loader';\nconst useStyles = makeStyles(theme => ({\n  loader: {\n    display: \"flex\",\n    minHeight: \"500px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titleCta: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  tableWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: 670\n    }\n  },\n  emptyData: {\n    fontWeight: \"700\"\n  },\n  toCapitalize: {\n    textTransform: 'capitalize'\n  },\n  AttachMoneyIcon: {\n    paddingRight: \"12px\"\n  },\n  displayFlex: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)];\n\nconst Notifications = props => {\n  const {\n    className,\n    paymentHistory,\n    insideLoader\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"paymentHistory\", \"insideLoader\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  return __jsx(React.Fragment, null, insideLoader ? __jsx(\"div\", null, __jsx(Loader, null)) : null, __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.titleCta\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\"\n  }, \"My Transactions\"))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12\n  }, __jsx(TableContainer, null, __jsx(Table, {\n    className: clsx(classes.table, classes.tableWrapper),\n    \"aria-label\": \"simple table\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, \"S.No.\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Name\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Date\"), __jsx(TableCell, {\n    align: \"center\"\n  }, \"Discount\"), __jsx(TableCell, {\n    align: \"center\"\n  }, \"Total Amount\"))), __jsx(TableBody, null, paymentHistory && paymentHistory.length ? __jsx(React.Fragment, null, paymentHistory.map((row, index) => __jsx(TableRow, {\n    key: row.index\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\"\n  }, index + 1, \".\"), __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    className: classes.toCapitalize\n  }, row.fullName), __jsx(TableCell, {\n    align: \"left\"\n  }, moment(row.createdAt).format(\"dddd, MMMM Do YYYY\")), __jsx(TableCell, {\n    align: \"center\"\n  }, \"$\", row.discountedAmount), __jsx(TableCell, {\n    align: \"center\"\n  }, \"$\", row.grandTotal)))) : __jsx(TableRow, null, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    colSpan: \"5\",\n    align: \"center\",\n    className: classes.emptyData\n  }, __jsx(\"div\", {\n    className: classes.displayFlex\n  }, __jsx(\"span\", null, __jsx(AttachMoneyIcon, {\n    className: classes.paddingRight\n  })), \" No Transactions made yet.\"))))))))));\n};\n\nexport default Notifications;","map":null,"metadata":{},"sourceType":"module"}