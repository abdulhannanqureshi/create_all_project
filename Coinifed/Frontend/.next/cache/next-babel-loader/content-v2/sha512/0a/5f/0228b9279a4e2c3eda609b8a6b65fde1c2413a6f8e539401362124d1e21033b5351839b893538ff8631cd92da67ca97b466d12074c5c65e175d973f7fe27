{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\r\n * ErrorHandlerHelper Class - For managing errors\r\n */\nexport class ErrorHandlerHelper {\n  constructor(err) {\n    _defineProperty(this, \"rawError\", void 0);\n\n    _defineProperty(this, \"error\", {\n      code: 500,\n      isError: true,\n      timestamp: Date.now(),\n      error: 'Unknown error',\n      messages: [],\n      data: undefined\n    });\n\n    _defineProperty(this, \"setError\", () => {\n      const code = this.rawError && this.rawError.code ? this.rawError.code : this.error.code;\n      this.error.code = code ? code : 400;\n      this.error.timestamp = Date.now();\n      this.error.messages = [];\n\n      if (this.rawError.data && typeof this.rawError.data === 'object' && this.rawError.data.message) {\n        if (this.rawError && this.rawError.data.message === \"Token has expired\" || this.rawError && this.rawError.data.message === \"Unauthorized, Invalid token!\") {\n          localStorage.removeItem(\"token\");\n          window.location.href = \"/\";\n        } else {\n          this.error.messages.push(this.rawError.data.message);\n        }\n      }\n\n      if (!this.error.messages.length) {\n        this.error.error = 'Unknown';\n        this.error.messages = [null];\n      }\n    });\n\n    this.rawError = err;\n    this.setError();\n  }\n\n}","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/helper/ErrorHandlerHelper.js"],"names":["ErrorHandlerHelper","constructor","err","code","isError","timestamp","Date","now","error","messages","data","undefined","rawError","message","localStorage","removeItem","window","location","href","push","length","setError"],"mappings":";;AAAA;AACA;AACA;AACA,OAAO,MAAMA,kBAAN,CAAyB;AAW/BC,EAAAA,WAAW,CAACC,GAAD,EAAM;AAAA;;AAAA,mCATT;AACPC,MAAAA,IAAI,EAAE,GADC;AAEPC,MAAAA,OAAO,EAAE,IAFF;AAGPC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHJ;AAIPC,MAAAA,KAAK,EAAE,eAJA;AAKPC,MAAAA,QAAQ,EAAE,EALH;AAMPC,MAAAA,IAAI,EAAEC;AANC,KASS;;AAAA,sCAKN,MAAM;AACV,YAAMR,IAAI,GAChB,KAAKS,QAAL,IAAiB,KAAKA,QAAL,CAAcT,IAA/B,GACG,KAAKS,QAAL,CAAcT,IADjB,GAEY,KAAKK,KAAL,CAAWL,IAHjB;AAIA,WAAKK,KAAL,CAAWL,IAAX,GAAkBA,IAAI,GAAGA,IAAH,GAAS,GAA/B;AACN,WAAKK,KAAL,CAAWH,SAAX,GAAuBC,IAAI,CAACC,GAAL,EAAvB;AACA,WAAKC,KAAL,CAAWC,QAAX,GAAsB,EAAtB;;AAEA,UAAI,KAAKG,QAAL,CAAcF,IAAd,IAAsB,OAAO,KAAKE,QAAL,CAAcF,IAArB,KAA8B,QAApD,IAAgE,KAAKE,QAAL,CAAcF,IAAd,CAAmBG,OAAvF,EAAgG;AAC/F,YAAK,KAAKD,QAAL,IAAiB,KAAKA,QAAL,CAAcF,IAAd,CAAmBG,OAAnB,KAA+B,mBAAjD,IAA0E,KAAKD,QAAL,IAAiB,KAAKA,QAAL,CAAcF,IAAd,CAAmBG,OAAnB,KAA+B,8BAA9H,EAA8J;AACjJC,UAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACZ,SAHD,MAGK;AACQ,eAAKV,KAAL,CAAWC,QAAX,CAAoBU,IAApB,CAAyB,KAAKP,QAAL,CAAcF,IAAd,CAAmBG,OAA5C;AACH;AACV;;AACD,UAAI,CAAC,KAAKL,KAAL,CAAWC,QAAX,CAAoBW,MAAzB,EAAiC;AAChC,aAAKZ,KAAL,CAAWA,KAAX,GAAmB,SAAnB;AACA,aAAKA,KAAL,CAAWC,QAAX,GAAsB,CAAC,IAAD,CAAtB;AACA;AACD,KA1BgB;;AAChB,SAAKG,QAAL,GAAgBV,GAAhB;AACA,SAAKmB,QAAL;AACA;;AAd8B","sourcesContent":["/**\r\n * ErrorHandlerHelper Class - For managing errors\r\n */\r\nexport class ErrorHandlerHelper {\r\n\trawError;\r\n\terror = {\r\n\t\tcode: 500,\r\n\t\tisError: true,\r\n\t\ttimestamp: Date.now(),\r\n\t\terror: 'Unknown error',\r\n\t\tmessages: [],\r\n\t\tdata: undefined,\r\n\t};\r\n\r\n\tconstructor(err) {\r\n\t\tthis.rawError = err;\r\n\t\tthis.setError();\r\n\t}\r\n\r\n\tsetError = () => {\r\n        const code = \r\n\t\tthis.rawError && this.rawError.code\r\n\t\t\t? this.rawError.code\r\n            : this.error.code;\r\n        this.error.code = code ? code :400;            \r\n\t\tthis.error.timestamp = Date.now();\r\n\t\tthis.error.messages = [];\r\n\t\r\n\t\tif (this.rawError.data && typeof this.rawError.data === 'object' && this.rawError.data.message) {\r\n\t\t\tif ((this.rawError && this.rawError.data.message === \"Token has expired\") || (this.rawError && this.rawError.data.message === \"Unauthorized, Invalid token!\")){\r\n                localStorage.removeItem(\"token\");\r\n                window.location.href = \"/\";\r\n\t\t\t}else{\r\n                this.error.messages.push(this.rawError.data.message);\r\n            }\r\n\t\t}\r\n\t\tif (!this.error.messages.length) {\r\n\t\t\tthis.error.error = 'Unknown';\r\n\t\t\tthis.error.messages = [null];\r\n\t\t}\r\n\t};\r\n}"]},"metadata":{},"sourceType":"module"}