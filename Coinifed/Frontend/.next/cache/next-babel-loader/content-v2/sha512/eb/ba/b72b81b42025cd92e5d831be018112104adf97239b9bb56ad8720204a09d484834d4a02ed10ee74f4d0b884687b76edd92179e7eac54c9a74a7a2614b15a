{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CircularProgress } from '@material-ui/core';\nimport indigo from '@material-ui/core/colors/indigo';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport clsx from 'clsx';\nimport { Icon } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { Section } from 'components/organisms';\nimport Toast from 'components/toaster';\nimport React, { useEffect, useState } from 'react';\nimport validate from 'validate.js';\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport { ApiHelper } from \"../../../../helper\";\nvar schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 120\n    }\n  }\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: \"rgb(83 98 252) \",\n      backgroundSize: \"cover\",\n      borderRadius: theme.spacing(2)\n    },\n    textWhite: {\n      color: \"white\"\n    },\n    paperPlane: {\n      cursor: \"pointer\"\n    },\n    errorText: {\n      color: 'red',\n      fontSize: \"14px\",\n      backgroundColor: \"white\",\n      marginTop: \"3px\"\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    loaderCommon: {\n      width: \"20px !important\",\n      height: \"20px !important\",\n      color: \"white\"\n    },\n    formControl: {\n      maxWidth: 400,\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"white\"\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"white\"\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"white\"\n        }\n      },\n      \"& .MuiInputBase-root\": {\n        color: \"white\"\n      },\n      \"& .MuiInputAdornment-root i\": {\n        color: \"white !important\"\n      }\n    }\n  };\n});\n\nvar Newsletter = function Newsletter(props) {\n  var className = props.className,\n      cmsData = props.cmsData,\n      rest = _objectWithoutProperties(props, [\"className\", \"cmsData\"]);\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formState = _React$useState2[0],\n      setFormState = _React$useState2[1];\n\n  React.useEffect(function () {\n    var errors = validate(formState.values, schema);\n    setFormState(function (formState) {\n      return _objectSpread(_objectSpread({}, formState), {}, {\n        isValid: errors ? false : true,\n        errors: errors || {}\n      });\n    });\n  }, [formState.values]);\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setFormState(function (formState) {\n      return _objectSpread(_objectSpread({}, formState), {}, {\n        values: _objectSpread(_objectSpread({}, formState.values), {}, _defineProperty({}, event.target.name, event.target.value)),\n        touched: _objectSpread(_objectSpread({}, formState.touched), {}, _defineProperty({}, event.target.name, true))\n      });\n    });\n  };\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!formState.isValid) {\n                _context.next = 8;\n                break;\n              }\n\n              data = {\n                email: formState.values.email\n              };\n              setIsLoading(true);\n              _context.next = 6;\n              return new ApiHelper().FetchFromServer(ApiRoutes.NEWSLETTERSUBSCRIBE.service, ApiRoutes.NEWSLETTERSUBSCRIBE.url, ApiRoutes.NEWSLETTERSUBSCRIBE.method, ApiRoutes.NEWSLETTERSUBSCRIBE.authenticate, undefined, undefined, data);\n\n            case 6:\n              response = _context.sent;\n\n              if (response && !response.isError) {\n                Toast.fire({\n                  icon: \"success\",\n                  title: response.messages[0]\n                });\n                setIsLoading(false);\n              } else {\n                Toast.fire({\n                  icon: \"error\",\n                  title: response.messages[0]\n                });\n                setIsLoading(false);\n              }\n\n            case 8:\n              setFormState(function (formState) {\n                return _objectSpread(_objectSpread({}, formState), {}, {\n                  touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var hasError = function hasError(field) {\n    return formState.touched[field] && formState.errors[field] ? true : false;\n  }; // For Get Template Data\n\n\n  var _useState2 = useState(null),\n      getTemplateData = _useState2[0],\n      setGetTemplateData = _useState2[1];\n\n  useEffect(function () {\n    if (cmsData && cmsData.length) {\n      var getData = cmsData.filter(function (e) {\n        return e.titleSlug === \"marketing\";\n      });\n      setGetTemplateData.apply(void 0, _toConsumableArray(getData));\n    }\n  }, [cmsData]);\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(Section, null, __jsx(React.Fragment, null, __jsx(SectionHeader, {\n    title: __jsx(\"span\", {\n      className: classes.textWhite\n    }, getTemplateData ? getTemplateData.blockTitle12 : null),\n    subtitle: __jsx(\"span\", {\n      className: classes.textWhite\n    }, getTemplateData ? getTemplateData.blockTitle13 : null),\n    fadeUp: true\n  }), __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: classes.inputContainer\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    \"data-aos\": \"fade-up\",\n    className: classes.formControl\n  }, __jsx(OutlinedInput, {\n    name: \"email\",\n    fullWidth: true,\n    helpertext: hasError(\"email\") ? formState.errors.email[0] : null,\n    error: hasError(\"email\"),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || \"\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, isLoading ? __jsx(CircularProgress, {\n      className: classes.loaderCommon\n    }) : __jsx(Icon, {\n      className: classes.paperPlane,\n      fontIconClass: \"fas fa-paper-plane\",\n      fontIconColor: indigo[900],\n      onClick: handleSubmit\n    })),\n    placeholder: \"Enter your email\"\n  }), hasError(\"email\") ? __jsx(\"span\", {\n    className: classes.errorText\n  }, formState.errors.email[0]) : null))))));\n};\n\nexport default Newsletter;","map":null,"metadata":{},"sourceType":"module"}