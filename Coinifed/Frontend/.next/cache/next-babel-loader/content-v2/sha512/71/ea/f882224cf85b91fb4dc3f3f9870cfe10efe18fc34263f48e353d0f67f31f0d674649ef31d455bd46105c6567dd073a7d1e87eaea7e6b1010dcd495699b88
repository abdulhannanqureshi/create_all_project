{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ApiHelper } from 'helper';\nimport { ApiRoutes } from 'config';\nimport Toast from 'components/toaster';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport { Section } from 'components/organisms';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    minHeight: \"500px\"\n  },\n  sidebarNewsletter: {\n    [theme.breakpoints.down('sm')]: {\n      marginTop: theme.spacing(3)\n    }\n  },\n  footerNewsletterSection: {\n    background: theme.palette.primary.dark\n  },\n  text: {\n    display: \"inline-block\",\n    minWidth: \"200px\",\n    fontWeight: \"600\",\n    textTransform: \"capitalize\",\n    paddingBottom: \"5px\",\n    fontSize: \"20px\",\n    color: \"red\"\n  },\n  box: {\n    background: \"#eee\",\n    marginBottom: \"20px\",\n    border: \"2px solid #ccc\",\n    padding: \"10px\",\n    wordBreak: \"break-all\",\n    '& p': {\n      display: \"flex\",\n      borderBottom: \"1px solid #999\",\n      fontSize: \"20px\",\n      paddingBottom: \"10px\"\n    }\n  }\n}));\n\nconst TalentLms = () => {\n  const classes = useStyles();\n  const router = useRouter();\n  const theme = useTheme();\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n  const {\n    0: lmsCourseData,\n    1: setLmsCourseData\n  } = useState([]);\n  const {\n    0: lmsCategoryData,\n    1: setCategoryData\n  } = useState([]);\n  const {\n    0: filterListData,\n    1: setFilterListData\n  } = useState([]);\n  const {\n    0: category,\n    1: setCategory\n  } = useState([]);\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  useEffect(() => {\n    // fetchBlogData(router.query)\n    fetchLmsCourseData();\n  }, []); // useEffect(()=>{\n  //   updateArray\n  // },[category])\n\n  const fetchLmsCourseData = async () => {\n    setLoader(true);\n    const response = await new ApiHelper().FetchFromServer(ApiRoutes.GET_LMSDATA_COURSE.service, ApiRoutes.GET_LMSDATA_COURSE.url, ApiRoutes.GET_LMSDATA_COURSE.method, ApiRoutes.GET_LMSDATA_COURSE.authenticate, undefined, undefined);\n\n    if (response && !response.isError) {\n      const data = response.data.data; //const filteredList = data.filter((item) => item.category_id == 5)\n      //setFilterListData(filteredList)\n\n      setLmsCourseData(data);\n      fetchLmsCategory();\n      setLoader(false);\n    } else {\n      Toast.fire({\n        icon: 'error',\n        title: \"Something went wrong\"\n      });\n    }\n  };\n\n  const fetchLmsCategory = async () => {\n    setLoader(true);\n    const response = await new ApiHelper().FetchFromServer(ApiRoutes.GET_LMSDATA_CATEGORY.service, ApiRoutes.GET_LMSDATA_CATEGORY.url, ApiRoutes.GET_LMSDATA_CATEGORY.method, ApiRoutes.GET_LMSDATA_CATEGORY.authenticate, undefined, undefined);\n\n    if (response && !response.isError) {\n      const data = response.data.data;\n      setCategoryData(data);\n      setLoader(false);\n    } else {\n      Toast.fire({\n        icon: 'error',\n        title: \"Something went wrong\"\n      });\n    }\n  };\n\n  const handleChange = event => {\n    setCategory({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Section, null, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, !loader ? __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Select, {\n    native: true,\n    value: category.id,\n    onChange: handleChange,\n    inputProps: {\n      name: 'category',\n      id: 'filled-age-native-simple'\n    }\n  }, __jsx(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\"\n  }), lmsCategoryData.map((option, index) => __jsx(\"option\", {\n    key: index,\n    value: option\n  }, option.id, \" - \", option.name)))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 8\n  }, lmsCourseData.length, lmsCourseData.map((data, index) => {\n    return __jsx(Box, {\n      key: index,\n      className: classes.box\n    }, __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"category_id\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.category_id), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"avatar \"), __jsx(\"span\", {\n      className: classes.description\n    }), data.avatar), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"big_avatar\"), __jsx(\"span\", {\n      className: classes.description\n    }, __jsx(\"img\", {\n      src: data.big_avatar\n    }))), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"certification\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.certification), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"certification_duration\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.certification_duration), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"code\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.code), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"creation_date\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.creation_date), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"creator_id\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.creator_id), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"custom_field_1\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.custom_field_1), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"custom_field_2\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.custom_field_2), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"custom_field_3\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.custom_field_3), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"description\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.description), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"expiration_datetime\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.expiration_datetime), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"hide_from_catalog\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.hide_from_catalog), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"id\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.id), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"last_update_on \"), __jsx(\"span\", {\n      className: classes.description\n    }), data.last_update_on), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"level\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.level), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"name\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.name), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"price\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.price), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"shared\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.shared), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"shared_url\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.shared_url), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"start_datetime\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.start_datetime), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"status\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.status), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"time_limit\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.time_limit));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, lmsCategoryData.map((data, index) => {\n    return __jsx(Box, {\n      key: index,\n      className: classes.box\n    }, __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"id\"), __jsx(\"span\", {\n      className: classes.description\n    }), data.id), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"name \"), __jsx(\"span\", {\n      className: classes.description\n    }), data.name), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"parent_category_id \"), __jsx(\"span\", {\n      className: classes.description\n    }), data.parent_category_id), __jsx(\"p\", null, __jsx(\"span\", {\n      className: classes.text\n    }, \"price \"), __jsx(\"span\", {\n      className: classes.description\n    }), data.price));\n  }))) : \"Loading...\")));\n};\n\nexport default TalentLms;","map":null,"metadata":{},"sourceType":"module"}