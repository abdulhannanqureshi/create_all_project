{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Link from 'next/link';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Image } from 'components/atoms';\nimport AppConfig from '../../../config/appConfig';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    boxShadow: \"0 9px 18px 0 rgba(0, 0, 0, 0.1)\",\n    borderRadius: theme.spacing(2),\n    width: \"100%\"\n  },\n  cardMedia: {\n    padding: theme.spacing(3, 3, 0, 3),\n    position: \"relative\",\n    // background: colors.indigo[50],\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  cardContent: {\n    padding: theme.spacing(3),\n    minHeight: \"210px\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    justifyContent: \"space-around\",\n    [theme.breakpoints.down(\"lg\")]: {\n      padding: theme.spacing(2, 3, 2, 3)\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      padding: theme.spacing(3, 5)\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: \"auto\"\n    }\n  },\n  cardBlock: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: \"10px\",\n    \"& > span\": {\n      width: \"100% !important\"\n    }\n  },\n  imageCard: {\n    boxShadow: \"none\",\n    padding: \"30px\"\n  },\n  image: {\n    objectFit: \"cover\",\n    maxWidth: \"100%\",\n    height: 260\n  },\n  fontWeightBold: {\n    fontWeight: \"bold\"\n  },\n  contentBlock: {\n    padding: \"5px 0\"\n  },\n  priceCta: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: \"10px\"\n  },\n  textCenter: {\n    textAlign: \"center\"\n  },\n  contentWrap: {\n    padding: \"50px 10px\",\n    borderTop: \"1px solid #eee\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: 10,\n    backgroundColor: \"#5120FF\",\n    color: \"#fff\",\n    fontSize: 16,\n    borderRadius: 5,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\"\n    }\n  }\n}));\n\nconst CourseCard = props => {\n  const {\n    data,\n    title,\n    className,\n    handleLoader\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"title\", \"className\", \"handleLoader\"]);\n\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    className: classes.card\n  }, __jsx(\"div\", {\n    className: classes.cardBlock\n  }, __jsx(Image, {\n    src: `${AppConfig.IMAGE_URL}/${data.bannerImage}`,\n    srcSet: `${AppConfig.IMAGE_URL}/${data.bannerImage}`,\n    alt: data.title,\n    className: classes.image\n  })), __jsx(CardContent, {\n    className: classes.cardContent\n  }, __jsx(Typography, {\n    color: \"textPrimary\",\n    variant: \"h6\",\n    className: clsx(classes.fontWeightBold)\n  }, data.topicName.substring(0, 70) + (data.topicName.length > 70 ? \"...\" : \"\")), __jsx(\"div\", {\n    className: clsx(classes.contentBlock)\n  }, __jsx(Typography, {\n    color: \"textPrimary\",\n    variant: \"body1\"\n  }, data.subTitle.substring(0, 70) + \"...\")), __jsx(\"div\", {\n    className: classes.priceCta\n  }, __jsx(Link, {\n    href: `/course-detail/${data._id}`\n  }, __jsx(\"a\", {\n    className: clsx(classes.commonBtn),\n    onClick: handleLoader\n  }, \"View Course\"))))));\n};\n\nexport default CourseCard;","map":null,"metadata":{},"sourceType":"module"}