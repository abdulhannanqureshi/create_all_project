{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { ApiHelper } from 'helper';\nimport { ApiRoutes } from 'config';\nimport Toast from 'components/toaster';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport clsx from \"clsx\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Divider from '@material-ui/core/Divider';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    loader: {\n      display: \"flex\",\n      minHeight: \"500px\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    titleCta: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    tableWrapper: _defineProperty({}, theme.breakpoints.down(\"sm\"), {\n      minWidth: 670\n    }),\n    emptyData: {\n      fontWeight: \"700\"\n    },\n    toCapitalize: {\n      textTransform: 'capitalize'\n    }\n  };\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0), createData(\"Cupcake\", 305, 3.7, 67, 4.3), createData(\"Gingerbread\", 356, 16.0, 49, 3.9)];\n\nvar Notifications = function Notifications(props) {\n  var className = props.className,\n      paymentHistory = props.paymentHistory,\n      rest = _objectWithoutProperties(props, [\"className\", \"paymentHistory\"]);\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n\n  var _useState = useState(false),\n      loader = _useState[0],\n      setLoader = _useState[1];\n\n  var _useState2 = useState([]),\n      transectionData = _useState2[0],\n      setTransectionData = _useState2[1];\n\n  useEffect(function () {\n    fetchTransectionData();\n  }, []);\n\n  var fetchTransectionData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoader(true);\n              _context.next = 3;\n              return new ApiHelper().FetchFromServer(ApiRoutes.PAYMENTHISTORY.service, ApiRoutes.PAYMENTHISTORY.url, ApiRoutes.PAYMENTHISTORY.method, ApiRoutes.PAYMENTHISTORY.authenticate, undefined, undefined);\n\n            case 3:\n              response = _context.sent;\n\n              if (response && !response.isError) {\n                data = response.data.data;\n                setTransectionData(data);\n                setLoader(false);\n              } else {\n                Toast.fire({\n                  icon: \"error\",\n                  title: \"Something went wrong\"\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchTransectionData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.titleCta\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\"\n  }, \"My Transactions\"))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12\n  }, !loader ? __jsx(TableContainer, null, __jsx(Table, {\n    className: clsx(classes.table, classes.tableWrapper),\n    \"aria-label\": \"simple table\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, \"S.No.\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Name\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"Date\"), __jsx(TableCell, {\n    align: \"center\"\n  }, \"Discount\"), __jsx(TableCell, {\n    align: \"center\"\n  }, \"Total Amount\"))), __jsx(TableBody, null, transectionData && transectionData.length ? __jsx(React.Fragment, null, transectionData.map(function (row, index) {\n    return __jsx(TableRow, {\n      key: row.index\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\"\n    }, index + 1, \".\"), __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: classes.toCapitalize\n    }, row.fullName), __jsx(TableCell, {\n      align: \"left\"\n    }, moment(row.createdAt).format(\"dddd, MMMM Do YYYY\")), __jsx(TableCell, {\n      align: \"center\"\n    }, \"$\", row.discountedAmount), __jsx(TableCell, {\n      align: \"center\"\n    }, \"$\", row.grandTotal));\n  })) : __jsx(TableRow, null, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    colSpan: \"5\",\n    align: \"center\",\n    className: classes.emptyData\n  }, \"No Transactions made yet.\"))))) : __jsx(\"div\", {\n    className: classes.loader\n  }, __jsx(CircularProgress, null)))));\n};\n\nexport default Notifications;","map":null,"metadata":{},"sourceType":"module"}