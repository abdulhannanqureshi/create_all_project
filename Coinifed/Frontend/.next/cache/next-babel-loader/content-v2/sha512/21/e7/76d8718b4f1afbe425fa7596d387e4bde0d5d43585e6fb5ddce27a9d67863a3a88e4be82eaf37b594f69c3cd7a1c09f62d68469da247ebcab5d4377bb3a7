{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\Dashboard\\\\components\\\\Security\\\\Security.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { ApiHelper } from \"../../../../helper\";\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\nimport Toast from 'components/toaster';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nconst schema = {\n  oldPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    }\n  },\n  newPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    }\n  },\n  repeatPassword: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      minimum: 8\n    },\n    equality: \"newPassword\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  switchTitle: {\n    fontWeight: 700\n  },\n  titleCta: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  btnWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\"\n    }\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  }\n}));\n\nconst Security = props => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      const data = {\n        oldPassword: formState.values.oldPassword,\n        newPassword: formState.values.newPassword\n      };\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.USERPASSWORDUPDATE.service, ApiRoutes.USERPASSWORDUPDATE.url, ApiRoutes.USERPASSWORDUPDATE.method, ApiRoutes.USERPASSWORDUPDATE.authenticate, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.message\n        });\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.message\n        });\n      }\n    }\n\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      touched: _objectSpread(_objectSpread({}, formState.touched), formState.errors)\n    }));\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }), __jsx(\"form\", {\n    name: \"password-reset-form\",\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 4 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.titleCta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Change Password\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Current password\"), __jsx(TextField, {\n    placeholder: \"Old password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"oldPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"oldPassword\") ? formState.errors.oldPassword[0] : null,\n    error: hasError(\"oldPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"New password\"), __jsx(TextField, {\n    placeholder: \"New password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"newPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"newPassword\") ? formState.errors.newPassword[0] : null,\n    error: hasError(\"newPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Repeat password\"), __jsx(TextField, {\n    placeholder: \"Repeat password\",\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"repeatPassword\",\n    fullWidth: true,\n    type: \"password\",\n    helpertext: hasError(\"repeatPassword\") ? formState.errors.repeatPassword[0] : null,\n    error: hasError(\"repeatPassword\"),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    container: true,\n    justifyContent: \"flex-start\",\n    xs: 12,\n    className: classes.btnWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    className: classes.commonBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"Reset Password\")))));\n};\n\nSecurity.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string\n};\nexport default Security;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/Dashboard/components/Security/Security.js"],"names":["React","PropTypes","validate","ApiHelper","ApiRoutes","Toast","makeStyles","useTheme","Button","useMediaQuery","Grid","Typography","TextField","Divider","schema","oldPassword","presence","allowEmpty","message","length","minimum","newPassword","repeatPassword","equality","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","switchTitle","titleCta","display","justifyContent","alignItems","btnWrapper","breakpoints","down","commonBtn","padding","backgroundColor","fontSize","minWidth","border","textAlign","transition","boxShadow","color","Security","props","className","rest","classes","isMd","up","defaultMatches","formState","setFormState","useState","isValid","values","touched","errors","useEffect","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","data","response","FetchFromServer","USERPASSWORDUPDATE","service","url","method","authenticate","undefined","isError","fire","icon","title","hasError","field","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { ApiHelper } from \"../../../../helper\";\r\nimport { ApiRoutes } from \"../../../../config/ApiRoutes\";\r\nimport Toast from 'components/toaster';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport Button from '@material-ui/core/Button';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst schema = {\r\n  oldPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n  newPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n  },\r\n  repeatPassword: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      minimum: 8,\r\n    },\r\n    equality: \"newPassword\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputTitle: {\r\n    fontWeight: 700,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  switchTitle: {\r\n    fontWeight: 700,\r\n  },\r\n  titleCta: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  btnWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  commonBtn: {\r\n    display: \"inline-block\",\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    minWidth: 200,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Security = (props) => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formState.isValid) {\r\n      const data = {\r\n        oldPassword: formState.values.oldPassword,\r\n        newPassword: formState.values.newPassword,\r\n      };\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.USERPASSWORDUPDATE.service,\r\n        ApiRoutes.USERPASSWORDUPDATE.url,\r\n        ApiRoutes.USERPASSWORDUPDATE.method,\r\n        ApiRoutes.USERPASSWORDUPDATE.authenticate,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.message,\r\n        });\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.message,\r\n        });\r\n      }\r\n    }\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      touched: {\r\n        ...formState.touched,\r\n        ...formState.errors,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n  return (\r\n    <div className={className} {...rest}>\r\n      <form name='password-reset-form' method='post' onSubmit={handleSubmit}>\r\n        <Grid container spacing={isMd ? 4 : 2}>\r\n          <Grid item xs={12}>\r\n            <div className={classes.titleCta}>\r\n              <Typography variant='h6' color='textPrimary'>\r\n                Change Password\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              className={classes.inputTitle}\r\n            >\r\n              Current password\r\n            </Typography>\r\n            <TextField\r\n              placeholder='Old password'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='oldPassword'\r\n              fullWidth\r\n              type='password'\r\n              helpertext={\r\n                hasError(\"oldPassword\") ? formState.errors.oldPassword[0] : null\r\n              }\r\n              error={hasError(\"oldPassword\")}\r\n              onChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              className={classes.inputTitle}\r\n            >\r\n              New password\r\n            </Typography>\r\n            <TextField\r\n              placeholder='New password'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='newPassword'\r\n              fullWidth\r\n              type='password'\r\n              helpertext={\r\n                hasError(\"newPassword\") ? formState.errors.newPassword[0] : null\r\n              }\r\n              error={hasError(\"newPassword\")}\r\n              onChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              className={classes.inputTitle}\r\n            >\r\n              Repeat password\r\n            </Typography>\r\n            <TextField\r\n              placeholder='Repeat password'\r\n              variant='outlined'\r\n              size='medium'\r\n              name='repeatPassword'\r\n              fullWidth\r\n              type='password'\r\n              helpertext={\r\n                hasError(\"repeatPassword\")\r\n                  ? formState.errors.repeatPassword[0]\r\n                  : null\r\n              }\r\n              error={hasError(\"repeatPassword\")}\r\n              onChange={handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            justifyContent='flex-start'\r\n            xs={12}\r\n            className={classes.btnWrapper}\r\n          >\r\n            <Button\r\n              variant='contained'\r\n              type='submit'\r\n              color='primary'\r\n              onClick={handleSubmit}\r\n              className={classes.commonBtn}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSecurity.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Security;\r\n"]},"metadata":{},"sourceType":"module"}