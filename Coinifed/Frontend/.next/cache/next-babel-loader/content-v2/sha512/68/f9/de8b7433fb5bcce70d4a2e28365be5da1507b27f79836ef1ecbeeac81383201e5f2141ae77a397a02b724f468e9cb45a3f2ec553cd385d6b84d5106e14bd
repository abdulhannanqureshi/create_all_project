{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from \"@material-ui/core/Popover\";\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport clsx from \"clsx\";\nimport { SectionHeader } from \"components/molecules\";\nimport { CardBase } from \"components/organisms\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport AppConfig from \"../../../../config/appConfig\";\nconst useStyles = makeStyles(theme => ({\n  cardBase: {\n    boxShadow: \"none\",\n    background: theme.palette.alternate.main,\n    borderRadius: theme.spacing(1),\n    \"& .card-base__content\": {\n      padding: theme.spacing(1),\n      [theme.breakpoints.up(\"sm\")]: {\n        padding: theme.spacing(3)\n      },\n      [theme.breakpoints.down(\"md\")]: {\n        padding: theme.spacing(1)\n      }\n    },\n    \"& a\": {\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: \"0.7rem\"\n      }\n    }\n  },\n  avatar: {\n    width: 110,\n    objectFit: \"cover\",\n    objectPosition: \"center top\",\n    height: 110,\n    border: `4px solid ${theme.palette.alternate.dark}`,\n    borderRadius: \"100%\",\n    boxShadow: \"0 5px 10px 0 rgba(0, 0, 0, 0.1)\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: 80,\n      height: 80\n    }\n  },\n  listItem: {\n    padding: 0,\n    marginBottom: 10,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\"\n    }\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down(\"md\")]: {\n      marginRight: theme.spacing(1.5)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: theme.spacing(0)\n    }\n  },\n  listItemText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    margin: 0,\n    height: \"100%\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"1rem\"\n    }\n  },\n  popover_div: {\n    maxWidth: \"400px\",\n    textAlign: \"justify\",\n    padding: \"10px\"\n  },\n  customised_popover: {\n    boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  },\n  smallCommonBtn: {\n    minWidth: 132,\n    padding: \"8px 10px\",\n    fontSize: 15\n  }\n}));\n\nconst Team = props => {\n  const {\n    className,\n    cmsData,\n    teamList\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"cmsData\", \"teamList\"]);\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  const [authorDetail, setauthorDetails] = React.useState([]);\n\n  const handleClick = (event, id) => {\n    setAnchorEl(null);\n    let required_id = event.currentTarget.id;\n    let newData = teamList.filter((newArray, index) => index == required_id);\n    setauthorDetails(newData);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? `simple-popover` : undefined; // For Get Template Data\n\n  const {\n    0: getTemplateData,\n    1: setGetTemplateData\n  } = useState(null);\n  useEffect(() => {\n    if (cmsData && cmsData.length) {\n      let getData = cmsData.filter(e => e.titleSlug === \"aboutUs\");\n      setGetTemplateData(...getData);\n    }\n  }, [cmsData]);\n  return __jsx(\"div\", _extends({\n    className: className\n  }, rest), __jsx(SectionHeader, {\n    title: getTemplateData && getTemplateData.blockTitle2.length ? getTemplateData.blockTitle2 : \"Meet our team\",\n    subtitle: getTemplateData && getTemplateData.block2.length ? ReactHtmlParser(getTemplateData.block2) : null\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 2 : 1\n  }, teamList && teamList.length ? teamList.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    md: 4,\n    key: index,\n    \"data-aos\": \"fade-up\"\n  }, __jsx(CardBase, {\n    className: classes.cardBase,\n    liftUp: true\n  }, __jsx(ListItem, {\n    disableGutters: true,\n    className: classes.listItem\n  }, __jsx(ListItemAvatar, {\n    className: classes.listItemAvatar\n  }, __jsx(Avatar, {\n    src: `${AppConfig.IMAGE_URL}/${item.teamMemberImage}`,\n    srcSet: `${AppConfig.IMAGE_URL}/${item.teamMemberImage}`,\n    className: classes.avatar\n  })), __jsx(\"div\", null, __jsx(ListItemText, {\n    className: classes.listItemText,\n    primary: `${item.firstName} ${item.lastName}`,\n    secondary: item.designation,\n    primaryTypographyProps: {\n      className: classes.title,\n      variant: \"h6\",\n      align: isMd ? \"left\" : \"center\"\n    },\n    secondaryTypographyProps: {\n      color: \"textPrimary\",\n      align: isMd ? \"left\" : \"center\"\n    }\n  }))), __jsx(Button, {\n    id: index,\n    href: \"#outlined-buttons\",\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    className: clsx(classes.commonBtn, classes.smallCommonBtn)\n  }, \"More Details\")), authorDetail.map(data => {\n    return __jsx(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      elevation: 2,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      className: classes.customised_popover\n    }, __jsx(\"div\", {\n      className: classes.popover_div\n    }, ReactHtmlParser(data.aboutUs)));\n  }))) : null));\n};\n\nexport default Team;","map":null,"metadata":{},"sourceType":"module"}