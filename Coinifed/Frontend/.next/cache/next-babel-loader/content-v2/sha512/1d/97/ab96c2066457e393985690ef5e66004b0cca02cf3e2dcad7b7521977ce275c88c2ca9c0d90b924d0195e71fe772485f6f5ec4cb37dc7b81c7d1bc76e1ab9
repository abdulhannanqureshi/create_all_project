{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\PressReleases\\\\components\\\\MostViewedArticles\\\\MostViewedArticles.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Image, LearnMoreLink } from 'components/atoms';\nimport { DescriptionCta } from 'components/molecules';\nimport { CardProduct } from 'components/organisms';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: theme.spacing(-2),\n      marginRight: theme.spacing(-2)\n    }\n  },\n  gridItem: {\n    marginBottom: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n      borderBottom: `1px solid ${grey[200]}`\n    },\n    '&:last-child': {\n      marginBottom: 0,\n      borderBottom: 0,\n      paddingBottom: 0\n    }\n  },\n  cardProduct: {\n    display: 'flex',\n    alignItems: 'center',\n    height: '100%',\n    borderRadius: 0,\n    boxShadow: 'none',\n    background: 'transparent',\n    '& .card-product__content': {\n      padding: theme.spacing(2, 2, 0, 2),\n      [theme.breakpoints.up('sm')]: {\n        padding: theme.spacing(0, 0, 0, 2)\n      }\n    },\n    '& .card-product__media': {\n      [theme.breakpoints.up('sm')]: {\n        height: 170,\n        width: 170,\n        '& img': {\n          height: 170,\n          width: 170\n        }\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column !important',\n      '& .card-product__content': {\n        flex: '1 1 100%'\n      },\n      '& .card-product__media': {\n        flex: '1 1 100%',\n        width: '100%'\n      }\n    }\n  },\n  image: {\n    objectFit: 'cover'\n  },\n  blogContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    alignSelf: 'flex-start'\n  },\n  blogTitle: {\n    fontWeight: 700\n  },\n  author: {\n    margin: theme.spacing(1, 0)\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  descriptionCta: {\n    maxWidth: '100%',\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(0, 2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(4),\n      padding: 0\n    },\n    [theme.breakpoints.up('sm')]: {\n      padding: 0\n    }\n  }\n}));\n\nconst MostViewedArticles = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n\n  const BlogMediaContent = props => __jsx(Image, _extends({}, props, {\n    className: classes.image,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }));\n\n  const BlogContent = props => __jsx(\"div\", {\n    className: classes.blogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    className: classes.blogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, props.title), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textPrimary\",\n    className: classes.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, props.author.name, \" - \", props.date)), __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, props.subtitle), __jsx(LearnMoreLink, {\n    title: 'Learn more',\n    variant: \"body1\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }));\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }), __jsx(DescriptionCta, {\n    title: \"Most viewed\",\n    primaryCta: __jsx(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, \"View all\"),\n    align: 'left',\n    titleProps: {\n      variant: 'h4',\n      color: 'textPrimary',\n      className: classes.title,\n      noWrap: false\n    },\n    className: classes.descriptionCta,\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, __jsx(CardProduct, {\n    className: classes.cardProduct,\n    mediaContent: __jsx(BlogMediaContent, _extends({}, item.cover, {\n      alt: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    })),\n    cardContent: __jsx(BlogContent, {\n      title: item.title,\n      subtitle: item.subtitle,\n      author: item.author,\n      date: item.date,\n      tags: item.tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(MostViewedArticles, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MostViewedArticles;\nMostViewedArticles.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * data to be rendered\r\n   */\n  data: PropTypes.array.isRequired\n};\nexport default MostViewedArticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostViewedArticles\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/PressReleases/components/MostViewedArticles/MostViewedArticles.js"],"names":["React","PropTypes","clsx","Image","LearnMoreLink","DescriptionCta","CardProduct","Button","Grid","Typography","grey","makeStyles","useStyles","theme","root","breakpoints","down","marginLeft","spacing","marginRight","gridItem","marginBottom","paddingBottom","up","borderBottom","cardProduct","display","alignItems","height","borderRadius","boxShadow","background","padding","width","flexDirection","flex","image","objectFit","blogContent","justifyContent","button","marginTop","alignSelf","blogTitle","fontWeight","author","margin","title","descriptionCta","maxWidth","MostViewedArticles","props","data","className","rest","classes","BlogMediaContent","BlogContent","name","date","subtitle","variant","color","noWrap","map","item","index","cover","tags","propTypes","string","array","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAQC,MAAR,MAAqB,0BAArB;AACA,OAAQC,IAAR,MAAmB,wBAAnB;AACA,OAAQC,UAAR,MAAyB,8BAAzB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AAGA,OAAQC,UAAR,MAAwB,qCAAxB;AACA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJ,KAACD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAC,CAAf,CADkB;AAE9BC,MAAAA,WAAW,EAAEN,KAAK,CAACK,OAAN,CAAc,CAAC,CAAf;AAFiB;AAD5B,GAD+B;AAOrCE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAER,KAAK,CAACK,OAAN,CAAc,CAAd,CADN;AAERI,IAAAA,aAAa,EAAET,KAAK,CAACK,OAAN,CAAc,CAAd,CAFP;AAGR,KAACL,KAAK,CAACE,WAAN,CAAkBQ,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,YAAY,EAAER,KAAK,CAACK,OAAN,CAAc,CAAd,CADc;AAE5BI,MAAAA,aAAa,EAAET,KAAK,CAACK,OAAN,CAAc,CAAd,CAFa;AAG5BM,MAAAA,YAAY,EAAG,aAAYd,IAAI,CAAC,GAAD,CAAM;AAHT,KAHtB;AAQR,oBAAgB;AACdW,MAAAA,YAAY,EAAE,CADA;AAEdG,MAAAA,YAAY,EAAE,CAFA;AAGdF,MAAAA,aAAa,EAAE;AAHD;AARR,GAP2B;AAqBrCG,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,MAAM,EAAE,MAHG;AAIXC,IAAAA,YAAY,EAAE,CAJH;AAKXC,IAAAA,SAAS,EAAE,MALA;AAMXC,IAAAA,UAAU,EAAE,aAND;AAOX,gCAA4B;AAC1BC,MAAAA,OAAO,EAAEnB,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADiB;AAE1B,OAACL,KAAK,CAACE,WAAN,CAAkBQ,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BS,QAAAA,OAAO,EAAEnB,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AADmB;AAFJ,KAPjB;AAaX,8BAA0B;AACxB,OAACL,KAAK,CAACE,WAAN,CAAkBQ,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BK,QAAAA,MAAM,EAAE,GADoB;AAE5BK,QAAAA,KAAK,EAAE,GAFqB;AAG5B,iBAAS;AACPL,UAAAA,MAAM,EAAE,GADD;AAEPK,UAAAA,KAAK,EAAE;AAFA;AAHmB;AADN,KAbf;AAuBX,KAACpB,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BkB,MAAAA,aAAa,EAAE,mBADe;AAE9B,kCAA4B;AAC1BC,QAAAA,IAAI,EAAE;AADoB,OAFE;AAK9B,gCAA0B;AACxBA,QAAAA,IAAI,EAAE,UADkB;AAExBF,QAAAA,KAAK,EAAE;AAFiB;AALI;AAvBrB,GArBwB;AAuDrCG,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN,GAvD8B;AA0DrCC,EAAAA,WAAW,EAAE;AACXZ,IAAAA,OAAO,EAAE,MADE;AAEXQ,IAAAA,aAAa,EAAE,QAFJ;AAGXK,IAAAA,cAAc,EAAE,QAHL;AAIXX,IAAAA,MAAM,EAAE;AAJG,GA1DwB;AAgErCY,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE5B,KAAK,CAACK,OAAN,CAAc,CAAd,CADL;AAENwB,IAAAA,SAAS,EAAE;AAFL,GAhE6B;AAoErCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GApE0B;AAuErCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEjC,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADF,GAvE6B;AA0ErC6B,EAAAA,KAAK,EAAE;AACLH,IAAAA,UAAU,EAAE;AADP,GA1E8B;AA6ErCI,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE,MADI;AAEd5B,IAAAA,YAAY,EAAER,KAAK,CAACK,OAAN,CAAc,CAAd,CAFA;AAGdc,IAAAA,OAAO,EAAEnB,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAHK;AAId,KAACL,KAAK,CAACE,WAAN,CAAkBQ,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,YAAY,EAAER,KAAK,CAACK,OAAN,CAAc,CAAd,CADc;AAE5Bc,MAAAA,OAAO,EAAE;AAFmB,KAJhB;AAQd,KAACnB,KAAK,CAACE,WAAN,CAAkBQ,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BS,MAAAA,OAAO,EAAE;AADmB;AARhB;AA7EqB,CAAL,CAAN,CAA5B;;AA2FA,MAAMkB,kBAAkB,GAAGC,KAAK,IAAI;AAAA;;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA+BF,KAArC;AAAA,QAA4BG,IAA5B,4BAAqCH,KAArC;;AACA,QAAMI,OAAO,GAAG3C,SAAS,EAAzB;;AAEA,QAAM4C,gBAAgB,GAAGL,KAAK,IAC5B,MAAC,KAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAEI,OAAO,CAACnB,KAFrB;AAGE,IAAA,SAAS,EAAE;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBL,MAAAA,MAAM,EAAE;AAAzB,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;;AAQA,QAAM6B,WAAW,GAAGN,KAAK,IACvB;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACjB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,SAAS,EAAEiB,OAAO,CAACZ,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGQ,KAAK,CAACJ,KALT,CADF,EAQE,MAAC,UAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,SAAS,EAAEQ,OAAO,CAACV,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,CAACN,MAAN,CAAaa,IADhB,SACyBP,KAAK,CAACQ,IAD/B,CALF,CARF,EAiBE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,KAAK,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,QADT,CAjBF,EAoBE,MAAC,aAAD;AACE,IAAA,KAAK,EAAE,YADT;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,SAAS,EAAEL,OAAO,CAACf,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;;AA6BA,SACE;AAAK,IAAA,SAAS,EAAEtC,IAAI,CAACqD,OAAO,CAACzC,IAAT,EAAeuC,SAAf;AAApB,KAAmDC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,cAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,UAAU,EACR,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAA2C,MAAA,IAAI,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAOE,IAAA,KAAK,EAAE,MAPT;AAQE,IAAA,UAAU,EAAE;AACVO,MAAAA,OAAO,EAAE,IADC;AAEVC,MAAAA,KAAK,EAAE,aAFG;AAGVT,MAAAA,SAAS,EAAEE,OAAO,CAACR,KAHT;AAIVgB,MAAAA,MAAM,EAAE;AAJE,KARd;AAcE,IAAA,SAAS,EAAER,OAAO,CAACP,cAdrB;AAeE,gBAAS,SAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAkBE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,CAACY,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KACR,MAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,GAAG,EAAEA,KAHP;AAIE,gBAAS,SAJX;AAKE,IAAA,SAAS,EAAEX,OAAO,CAACnC,QALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,WAAD;AACE,IAAA,SAAS,EAAEmC,OAAO,CAAC9B,WADrB;AAEE,IAAA,YAAY,EACV,MAAC,gBAAD,eAAsBwC,IAAI,CAACE,KAA3B;AAAkC,MAAA,GAAG,EAAEF,IAAI,CAAClB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAKE,IAAA,WAAW,EACT,MAAC,WAAD;AACE,MAAA,KAAK,EAAEkB,IAAI,CAAClB,KADd;AAEE,MAAA,QAAQ,EAAEkB,IAAI,CAACL,QAFjB;AAGE,MAAA,MAAM,EAAEK,IAAI,CAACpB,MAHf;AAIE,MAAA,IAAI,EAAEoB,IAAI,CAACN,IAJb;AAKE,MAAA,IAAI,EAAEM,IAAI,CAACG,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADD,CADH,CAlBF,CADF;AAgDD,CAzFD;;GAAMlB,kB;UAEYtC,S;;;KAFZsC,kB;AA2FNA,kBAAkB,CAACmB,SAAnB,GAA+B;AAC7B;AACF;AACA;AACEhB,EAAAA,SAAS,EAAEpD,SAAS,CAACqE,MAJQ;;AAK7B;AACF;AACA;AACElB,EAAAA,IAAI,EAAEnD,SAAS,CAACsE,KAAV,CAAgBC;AARO,CAA/B;AAWA,eAAetB,kBAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Image, LearnMoreLink } from 'components/atoms';\r\nimport { DescriptionCta } from 'components/molecules';\r\nimport { CardProduct } from 'components/organisms';\r\nimport  Button  from '@material-ui/core/Button';\r\nimport  Grid  from '@material-ui/core/Grid';\r\nimport  Typography  from '@material-ui/core/Typography';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\n\r\nimport  makeStyles from '@material-ui/core/styles/makeStyles';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginLeft: theme.spacing(-2),\r\n      marginRight: theme.spacing(-2),\r\n    },\r\n  },\r\n  gridItem: {\r\n    marginBottom: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: theme.spacing(3),\r\n      borderBottom: `1px solid ${grey[200]}`,\r\n    },\r\n    '&:last-child': {\r\n      marginBottom: 0,\r\n      borderBottom: 0,\r\n      paddingBottom: 0,\r\n    },\r\n  },\r\n  cardProduct: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    background: 'transparent',\r\n    '& .card-product__content': {\r\n      padding: theme.spacing(2, 2, 0, 2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        padding: theme.spacing(0, 0, 0, 2),\r\n      },\r\n    },\r\n    '& .card-product__media': {\r\n      [theme.breakpoints.up('sm')]: {\r\n        height: 170,\r\n        width: 170,\r\n        '& img': {\r\n          height: 170,\r\n          width: 170,\r\n        },\r\n      },\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column !important',\r\n      '& .card-product__content': {\r\n        flex: '1 1 100%',\r\n      },\r\n      '& .card-product__media': {\r\n        flex: '1 1 100%',\r\n        width: '100%',\r\n      },\r\n    },\r\n  },\r\n  image: {\r\n    objectFit: 'cover',\r\n  },\r\n  blogContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    alignSelf: 'flex-start',\r\n  },\r\n  blogTitle: {\r\n    fontWeight: 700,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n  descriptionCta: {\r\n    maxWidth: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(0, 2),\r\n    [theme.breakpoints.up('md')]: {\r\n      marginBottom: theme.spacing(4),\r\n      padding: 0,\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MostViewedArticles = props => {\r\n  const { data, className, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const BlogMediaContent = props => (\r\n    <Image\r\n      {...props}\r\n      className={classes.image}\r\n      lazyProps={{ width: '100%', height: '100%' }}\r\n    />\r\n  );\r\n\r\n  const BlogContent = props => (\r\n    <div className={classes.blogContent}>\r\n      <Typography\r\n        variant=\"h6\"\r\n        color=\"textPrimary\"\r\n        className={classes.blogTitle}\r\n      >\r\n        {props.title}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"textPrimary\"\r\n        className={classes.author}\r\n      >\r\n        <i>\r\n          {props.author.name} - {props.date}\r\n        </i>\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n        {props.subtitle}\r\n      </Typography>\r\n      <LearnMoreLink\r\n        title={'Learn more'}\r\n        variant=\"body1\"\r\n        className={classes.button}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <DescriptionCta\r\n        title=\"Most viewed\"\r\n        primaryCta={\r\n          <Button variant=\"outlined\" color=\"primary\" size=\"large\">\r\n            View all\r\n          </Button>\r\n        }\r\n        align={'left'}\r\n        titleProps={{\r\n          variant: 'h4',\r\n          color: 'textPrimary',\r\n          className: classes.title,\r\n          noWrap: false,\r\n        }}\r\n        className={classes.descriptionCta}\r\n        data-aos=\"fade-up\"\r\n      />\r\n      <Grid container spacing={0}>\r\n        {data.map((item, index) => (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={index}\r\n            data-aos=\"fade-up\"\r\n            className={classes.gridItem}\r\n          >\r\n            <CardProduct\r\n              className={classes.cardProduct}\r\n              mediaContent={\r\n                <BlogMediaContent {...item.cover} alt={item.title} />\r\n              }\r\n              cardContent={\r\n                <BlogContent\r\n                  title={item.title}\r\n                  subtitle={item.subtitle}\r\n                  author={item.author}\r\n                  date={item.date}\r\n                  tags={item.tags}\r\n                />\r\n              }\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nMostViewedArticles.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * data to be rendered\r\n   */\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MostViewedArticles;\r\n"]},"metadata":{},"sourceType":"module"}