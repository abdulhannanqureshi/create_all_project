{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport clsx from 'clsx';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Hidden from '@material-ui/core/Hidden';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Image } from 'components/atoms';\nimport Link from 'next/link';\nimport logo from '../../../../../public/assets/Coinifide-white-logo.png';\nimport { Consumer } from '../../../../helper/ContextAPI';\nconst useStyles = makeStyles(theme => ({\n  flexGrow: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  navigationContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  toolbar: {\n    zIndex: 999,\n    maxWidth: theme.layout.contentWidth,\n    width: \"100%\",\n    margin: \"0 auto\",\n    padding: theme.spacing(0, 2),\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(2.2, 4)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2)\n    }\n  },\n  navLink: {\n    \"&:hover\": {\n      color: theme.palette.primary.dark\n    }\n  },\n  listItem: {\n    cursor: \"pointer\",\n    color: \"#fff\",\n    \"&:hover > .menu-item, &:hover svg\": {\n      color: \"#fff\"\n    },\n    \"&.menu-item--no-dropdown\": {\n      paddingRight: 0\n    },\n    \"& p\": {\n      color: \"#fff\"\n    }\n  },\n  listItemActive: {\n    \"&> .menu-item\": {\n      color: \"#fff\"\n    }\n  },\n  listItemText: {\n    flex: \"0 0 auto\",\n    marginRight: theme.spacing(2),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(1200)]: {\n      marginRight: theme.spacing(0.5)\n    }\n  },\n  listItemButton: {\n    whiteSpace: \"nowrap\"\n  },\n  listItemIcon: {\n    minWidth: \"auto\",\n    color: \"#fff\"\n  },\n  popover: {\n    padding: theme.spacing(2),\n    border: theme.spacing(1),\n    boxShadow: \"0 0.5rem 2rem 2px rgba(116, 123, 144, 0.09)\",\n    minWidth: 150,\n    marginTop: theme.spacing(2)\n  },\n  iconButton: {\n    marginLeft: theme.spacing(2),\n    padding: 0,\n    \"&:hover\": {\n      background: \"transparent\"\n    }\n  },\n  menuIcon: {\n    fill: \"#fff\"\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n    color: theme.palette.primary.dark\n  },\n  logoContainer: {\n    width: 60,\n    height: 60,\n    [theme.breakpoints.down(1200)]: {\n      width: 40,\n      height: 40\n    },\n    \"& a\": {\n      color: \"#fff\"\n    }\n  },\n  logoImage: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  menu: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  menuItem: {\n    marginRight: theme.spacing(5),\n    \"&:last-child\": {\n      marginRight: 0\n    }\n  },\n  menuGroupItem: {\n    paddingTop: 0\n  },\n  menuGroupTitle: {\n    textTransform: \"uppercase\"\n  },\n  navbarDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`\n  },\n  navDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`,\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.down(1200)]: {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `capitalize`,\n    color: `#fff`,\n    fontSize: 16,\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(1200)]: {\n      fontSize: 14\n    }\n  },\n  headerWrap: {\n    backgroundColor: \"#5120FF\"\n  },\n  headerButton: {\n    color: \"#fff\",\n    fontWeight: \"700\",\n    textTransform: \"capitalize\",\n    fontSize: \"16px\",\n    borderColor: \"#fff\"\n  },\n  badgesWrap: {\n    \"& .MuiBadge-badge\": {\n      background: \"#fff\",\n      color: \"#5120ff\"\n    }\n  }\n}));\n\nconst Topbar = (_ref) => {\n  let {\n    themeMode,\n    themeToggler,\n    onSidebarOpen,\n    pages,\n    className\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"themeMode\", \"themeToggler\", \"onSidebarOpen\", \"pages\", \"className\"]);\n\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: openedPopoverId,\n    1: setOpenedPopoverId\n  } = useState(null);\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(false);\n  React.useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setAuth(true);\n    }\n  }, []);\n\n  const handleClick = (event, popoverId) => {\n    setAnchorEl(event.target);\n    setOpenedPopoverId(popoverId);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpenedPopoverId(null);\n  };\n\n  const handleLogout = () => {\n    localStorage.setItem('token', '');\n    router.push('/signin');\n  };\n\n  const handleRedirect = link => {\n    router.push(`/${link}`);\n  };\n\n  const navLinks = [{\n    title: `Labs`,\n    path: `/labs`\n  }, {\n    title: `Certification`,\n    path: `/certificate`\n  }, {\n    title: `Marketing`,\n    path: `/marketing`\n  }, {\n    title: `Blogs`,\n    path: `/blog`\n  }, {\n    title: `About`,\n    path: `/about`\n  }, {\n    title: `Contact`,\n    path: `/contact-page`\n  }];\n  return __jsx(\"div\", {\n    className: classes.headerWrap\n  }, __jsx(Toolbar, _extends({\n    disableGutters: true,\n    className: classes.toolbar\n  }, rest), __jsx(\"div\", {\n    className: classes.logoContainer\n  }, __jsx(Link, {\n    href: '/',\n    as: '/'\n  }, __jsx(\"a\", null, __jsx(Image, {\n    className: classes.logoImage,\n    src: logo\n  })))), __jsx(\"div\", {\n    className: classes.flexGrow\n  }, __jsx(Hidden, {\n    smDown: true\n  }, __jsx(List, {\n    component: \"nav\",\n    \"aria-labelledby\": \"main navigation\",\n    className: classes.navDisplayFlex\n  }, __jsx(ListItem, null, __jsx(Link, {\n    href: '/courses',\n    as: '/courses'\n  }, __jsx(\"a\", {\n    className: classes.linkText\n  }, \"Explore Courses\"))), __jsx(ListItem, {\n    \"aria-describedby\": 'blockchain',\n    onClick: e => handleClick(e, 'blockchain'),\n    className: clsx(classes.listItem, openedPopoverId === 'blockchain' ? classes.listItemActive : '')\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    className: clsx(classes.listItemText, 'menu-item')\n  }, \"Blockchain\"), __jsx(ListItemIcon, {\n    className: classes.listItemIcon\n  }, __jsx(ExpandMoreIcon, {\n    className: openedPopoverId === 'blockchain' ? classes.expandOpen : '',\n    fontSize: \"small\"\n  }))), __jsx(Popover, {\n    elevation: 1,\n    id: 'blockchain',\n    open: openedPopoverId === 'blockchain',\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    classes: {\n      paper: classes.popover\n    }\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.menu\n  }, __jsx(\"div\", {\n    className: classes.menuItem\n  }, __jsx(MenuItem, {\n    onClick: e => handleRedirect('university')\n  }, \"For Higher Education\"), __jsx(MenuItem, {\n    onClick: e => handleRedirect('enterprise')\n  }, \"For Enterprise\"))))), navLinks.map(({\n    title,\n    path\n  }) => __jsx(ListItem, {\n    key: title\n  }, __jsx(Link, {\n    href: path,\n    as: path,\n    key: title\n  }, __jsx(\"a\", {\n    className: classes.linkText\n  }, title))))), __jsx(List, {\n    disablePadding: true,\n    className: classes.navigationContainer\n  }, auth ? __jsx(React.Fragment, null, __jsx(ListItem, null, __jsx(Link, {\n    href: '/add-cart',\n    as: '/add-cart'\n  }, __jsx(\"a\", {\n    className: classes.linkText\n  }, __jsx(Consumer, null, value => __jsx(Badge, {\n    badgeContent: value.cartLength,\n    className: classes.badgesWrap\n  }, __jsx(ShoppingCartIcon, null)))))), __jsx(ListItem, {\n    \"aria-describedby\": 'profile',\n    onClick: e => handleClick(e, 'profile'),\n    className: clsx(classes.listItem, openedPopoverId === 'profile' ? classes.listItemActive : '')\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    className: clsx(classes.listItemText, 'menu-item')\n  }, \"Profile\"), __jsx(ListItemIcon, {\n    className: classes.listItemIcon\n  }, __jsx(ExpandMoreIcon, {\n    className: openedPopoverId === 'profile' ? classes.expandOpen : '',\n    fontSize: \"small\"\n  }))), __jsx(Popover, {\n    elevation: 1,\n    id: 'profile',\n    open: openedPopoverId === 'profile',\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    classes: {\n      paper: classes.popover\n    }\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.menu\n  }, __jsx(\"div\", {\n    className: classes.menuItem\n  }, __jsx(MenuItem, {\n    onClick: e => handleRedirect('dashboard')\n  }, \"Dashboard\"), __jsx(MenuItem, {\n    onClick: e => handleLogout(e)\n  }, \"Logout\")))))) : __jsx(React.Fragment, null, __jsx(ListItem, {\n    \"aria-describedby\": 'profile',\n    onClick: e => handleClick(e, 'profile'),\n    className: clsx(classes.listItem, openedPopoverId === 'profile' ? classes.listItemActive : '')\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    className: clsx(classes.listItemText, 'menu-item')\n  }, \"Account\"), __jsx(ListItemIcon, {\n    className: classes.listItemIcon\n  }, __jsx(ExpandMoreIcon, {\n    className: openedPopoverId === 'profile' ? classes.expandOpen : '',\n    fontSize: \"small\"\n  }))), __jsx(Popover, {\n    elevation: 1,\n    id: 'profile',\n    open: openedPopoverId === 'profile',\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    classes: {\n      paper: classes.popover\n    }\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.menu\n  }, __jsx(\"div\", {\n    className: classes.menuItem\n  }, __jsx(MenuItem, {\n    onClick: e => handleRedirect('signin')\n  }, \"Sign In\"), __jsx(MenuItem, {\n    onClick: e => handleRedirect('signup')\n  }, \"Sign Up\"))))))))), __jsx(Hidden, {\n    mdUp: true\n  }, __jsx(IconButton, {\n    className: classes.iconButton,\n    onClick: onSidebarOpen,\n    \"aria-label\": \"Menu\"\n  }, __jsx(MenuIcon, {\n    className: classes.menuIcon\n  })))));\n};\n\nexport default Topbar;","map":null,"metadata":{},"sourceType":"module"}