{"ast":null,"code":"import _extends from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/xampp/htdocs/coinfield/coinfied/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\Blog\\\\components\\\\SidebarArticles\\\\SidebarArticles.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Image } from 'components/atoms';\nimport { CardProduct } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    border: `1px solid ${colors.grey[200]}`,\n    borderRadius: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(3)\n    }\n  },\n  gridItem: {\n    marginBottom: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    borderBottom: `1px solid ${colors.grey[200]}`,\n    '&:last-child': {\n      marginBottom: 0,\n      borderBottom: 0,\n      paddingBottom: 0\n    }\n  },\n  cardProduct: {\n    display: 'flex',\n    alignItems: 'center',\n    height: '100%',\n    boxShadow: 'none',\n    borderRadius: 0,\n    '& .card-product__content': {\n      padding: 0,\n      paddingLeft: theme.spacing(2)\n    },\n    '& .card-product__media': {\n      height: 90,\n      width: 90,\n      '& img': {\n        height: 90,\n        width: 90\n      }\n    }\n  },\n  image: {\n    objectFit: 'cover'\n  },\n  blogContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  blogTitle: {\n    fontWeight: 700\n  },\n  tags: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  tag: {\n    margin: theme.spacing(0, 1 / 2, 1 / 2, 0),\n    textTransform: 'uppercase',\n    fontWeight: 700\n  },\n  sectionTitle: {\n    fontWeight: 'bold',\n    marginBottom: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      marginBottom: theme.spacing(3)\n    }\n  }\n}));\n\nconst SidebarArticles = props => {\n  _s();\n\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n\n  const BlogMediaContent = props => __jsx(Image, _extends({}, props, {\n    className: classes.image,\n    lazyProps: {\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }));\n\n  const BlogContent = props => __jsx(\"div\", {\n    className: classes.blogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, props.tags.map((item, index) => __jsx(Typography, {\n    variant: \"caption\",\n    color: \"primary\",\n    className: classes.tag,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, item))), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textPrimary\",\n    className: classes.blogTitle,\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, props.title), __jsx(Typography, {\n    variant: \"caption\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, props.author.name, \" - \", props.date)));\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    gutterBottom: true,\n    className: classes.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Upcoming updates\"), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    \"data-aos\": \"fade-up\",\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(CardProduct, {\n    className: classes.cardProduct,\n    mediaContent: __jsx(BlogMediaContent, _extends({}, item.cover, {\n      alt: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    })),\n    cardContent: __jsx(BlogContent, {\n      title: item.title,\n      subtitle: item.subtitle,\n      author: item.author,\n      date: item.date,\n      tags: item.tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(SidebarArticles, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SidebarArticles;\nSidebarArticles.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * data to be rendered\r\n   */\n  data: PropTypes.array.isRequired\n};\nexport default SidebarArticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarArticles\");","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/Blog/components/SidebarArticles/SidebarArticles.js"],"names":["React","PropTypes","clsx","makeStyles","colors","Grid","Typography","Image","CardProduct","useStyles","theme","root","padding","spacing","border","grey","borderRadius","breakpoints","up","gridItem","marginBottom","paddingBottom","borderBottom","cardProduct","display","alignItems","height","boxShadow","paddingLeft","width","image","objectFit","blogContent","flexDirection","justifyContent","blogTitle","fontWeight","tags","flexWrap","tag","margin","textTransform","sectionTitle","SidebarArticles","props","data","className","rest","classes","BlogMediaContent","BlogContent","map","item","index","title","author","name","date","cover","subtitle","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {colors} from '@material-ui/core';\r\nimport  Grid  from '@material-ui/core/Grid';\r\nimport  Typography  from '@material-ui/core/Typography';\r\nimport { Image } from 'components/atoms';\r\nimport { CardProduct } from 'components/organisms';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    border: `1px solid ${colors.grey[200]}`,\r\n    borderRadius: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  gridItem: {\r\n    marginBottom: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    borderBottom: `1px solid ${colors.grey[200]}`,\r\n    '&:last-child': {\r\n      marginBottom: 0,\r\n      borderBottom: 0,\r\n      paddingBottom: 0,\r\n    },\r\n  },\r\n  cardProduct: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    boxShadow: 'none',\r\n    borderRadius: 0,\r\n    '& .card-product__content': {\r\n      padding: 0,\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n    '& .card-product__media': {\r\n      height: 90,\r\n      width: 90,\r\n      '& img': {\r\n        height: 90,\r\n        width: 90,\r\n      },\r\n    },\r\n  },\r\n  image: {\r\n    objectFit: 'cover',\r\n  },\r\n  blogContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  blogTitle: {\r\n    fontWeight: 700,\r\n  },\r\n  tags: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  tag: {\r\n    margin: theme.spacing(0, 1 / 2, 1 / 2, 0),\r\n    textTransform: 'uppercase',\r\n    fontWeight: 700,\r\n  },\r\n  sectionTitle: {\r\n    fontWeight: 'bold',\r\n    marginBottom: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nconst SidebarArticles = props => {\r\n  const { data, className, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const BlogMediaContent = props => (\r\n    <Image\r\n      {...props}\r\n      className={classes.image}\r\n      lazyProps={{ width: '100%', height: '100%' }}\r\n    />\r\n  );\r\n\r\n  const BlogContent = props => (\r\n    <div className={classes.blogContent}>\r\n      <div className={classes.tags}>\r\n        {props.tags.map((item, index) => (\r\n          <Typography\r\n            variant=\"caption\"\r\n            color=\"primary\"\r\n            className={classes.tag}\r\n            key={index}\r\n          >\r\n            {item}\r\n          </Typography>\r\n        ))}\r\n      </div>\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"textPrimary\"\r\n        className={classes.blogTitle}\r\n        gutterBottom\r\n      >\r\n        {props.title}\r\n      </Typography>\r\n      <Typography variant=\"caption\" color=\"textPrimary\">\r\n        <i>\r\n          {props.author.name} - {props.date}\r\n        </i>\r\n      </Typography>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Typography\r\n        variant=\"h6\"\r\n        color=\"textPrimary\"\r\n        gutterBottom\r\n        className={classes.sectionTitle}\r\n      >\r\n        Upcoming updates\r\n      </Typography>\r\n      <Grid container spacing={0}>\r\n        {data.map((item, index) => (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={index}\r\n            data-aos=\"fade-up\"\r\n            className={classes.gridItem}\r\n          >\r\n            <CardProduct\r\n              className={classes.cardProduct}\r\n              mediaContent={\r\n                <BlogMediaContent {...item.cover} alt={item.title} />\r\n              }\r\n              cardContent={\r\n                <BlogContent\r\n                  title={item.title}\r\n                  subtitle={item.subtitle}\r\n                  author={item.author}\r\n                  date={item.date}\r\n                  tags={item.tags}\r\n                />\r\n              }\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebarArticles.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * data to be rendered\r\n   */\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SidebarArticles;"]},"metadata":{},"sourceType":"module"}