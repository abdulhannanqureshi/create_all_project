{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\coinfield\\\\coinfied\\\\frontend\\\\src\\\\views\\\\Dashboard\\\\components\\\\General\\\\General.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Loader from 'components/common/Loader/loader';\nimport Toast from 'components/toaster';\nimport { ApiRoutes } from 'config';\nimport { ApiHelper } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport validate from 'validate.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst schema = {\n  firstName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 120,\n      minimum: 3\n    }\n  },\n  lastName: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 120,\n      minimum: 3\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 300\n    }\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1)\n  },\n  errorText: {\n    color: 'red',\n    fontSize: \"14px\"\n  },\n  commonBtn: {\n    display: \"inline-block\",\n    padding: \"7px 10px\",\n    backgroundColor: \"#5120FF\",\n    fontSize: 16,\n    minWidth: 200,\n    border: \"solid 1px #5120FF\",\n    textAlign: \"center\",\n    transition: \"all 0.3s ease-in-out\",\n    boxShadow: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n      color: \"#5120FF\",\n      boxShadow: \"none\"\n    }\n  }\n}));\n\nconst General = props => {\n  const {\n    className,\n    userDetails,\n    authToken,\n    insideLoader,\n    handleLoaderDeactive\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"userDetails\", \"authToken\", \"insideLoader\", \"handleLoaderDeactive\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true\n  });\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n  useEffect(() => {\n    handleLoaderDeactive(\"general\");\n  }, []);\n  useEffect(() => {\n    if (userDetails) {\n      setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n        values: {\n          firstName: userDetails.firstName,\n          lastName: userDetails.lastName,\n          email: userDetails.email,\n          role: userDetails.role,\n          corporate: userDetails.corporate,\n          university: userDetails.university\n        }\n      }));\n    }\n  }, []);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      setLoader(true);\n      const data = {\n        firstName: formState.values.firstName,\n        lastName: formState.values.lastName,\n        email: formState.values.email,\n        password: formState.values.password\n      };\n      const response = await new ApiHelper().FetchFromServer(ApiRoutes.USERDETAILSUPDATE.service, ApiRoutes.USERDETAILSUPDATE.url, ApiRoutes.USERDETAILSUPDATE.method, ApiRoutes.USERDETAILSUPDATE.authenticate, authToken, undefined, data);\n\n      if (response && !response.isError) {\n        Toast.fire({\n          icon: \"success\",\n          title: response.data.message\n        });\n        setLoader(false);\n      } else {\n        Toast.fire({\n          icon: \"error\",\n          title: response.data.message\n        });\n        setLoader(false);\n      }\n    }\n  };\n\n  const {\n    0: loader,\n    1: setLoader\n  } = useState(false);\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(React.Fragment, null, loader ? __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 16\n    }\n  }) : null, insideLoader ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })) : null, __jsx(\"div\", _extends({\n    className: className\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: isMd ? 2 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Profile Settings\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"First Name\"), __jsx(TextField, {\n    placeholder: \"First name*\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    name: \"firstName\",\n    helpertext: hasError(\"firstName\") ? formState.errors.firstName[0] : null,\n    error: hasError(\"firstName\"),\n    onChange: handleChange,\n    type: \"firstName\",\n    value: formState.values.firstName || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }), hasError(\"firstName\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, formState.errors.firstName[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Last Name\"), __jsx(TextField, {\n    placeholder: \"Last Name *\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    name: \"lastName\",\n    helpertext: hasError(\"lastName\") ? formState.errors.lastName[0] : null,\n    error: hasError(\"lastName\"),\n    onChange: handleChange,\n    type: \"lastName\",\n    value: formState.values.lastName || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), hasError(\"lastName\") ? __jsx(\"span\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, formState.errors.lastName[0]) : null), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, \"E-mail\"), __jsx(TextField, {\n    placeholder: \"Email\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    disabled: true,\n    name: \"email\",\n    helpertext: hasError(\"email\") ? formState.errors.email[0] : null,\n    error: hasError(\"email\"),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, \"Role\"), __jsx(TextField, {\n    placeholder: \"Last Name *\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    disabled: true,\n    name: \"lastName\",\n    helpertext: hasError(\"lastName\") ? formState.errors.lastName[0] : null,\n    error: hasError(\"lastName\"),\n    onChange: handleChange,\n    type: \"lastName\",\n    value: formState.values.role || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  })), formState.values.corporate || formState.values.university ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\",\n    className: classes.inputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, formState.values.corporate ? \"Corporation\" : \"University\"), __jsx(TextField, {\n    placeholder: \"Last Name *\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"medium\",\n    fullWidth: true,\n    name: \"corporate\",\n    disabled: true,\n    type: \"corporate\",\n    value: formState.values.corporate ? formState.values.corporate : formState.values.university || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  })) : \"\", __jsx(Grid, {\n    item: true,\n    container: true,\n    justifyContent: \"flex-start\",\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    className: classes.commonBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, \"Update\")))));\n};\n\nGeneral.propTypes = {\n  /**\r\n   * External classes\r\n   */\n  className: PropTypes.string\n};\nexport default General;","map":{"version":3,"sources":["C:/xampp/htdocs/coinfield/coinfied/frontend/src/views/Dashboard/components/General/General.js"],"names":["Button","Divider","Grid","makeStyles","useTheme","TextField","Typography","useMediaQuery","Loader","Toast","ApiRoutes","ApiHelper","PropTypes","React","useEffect","useState","validate","CircularProgress","schema","firstName","presence","allowEmpty","message","length","maximum","minimum","lastName","email","useStyles","theme","inputTitle","fontWeight","marginBottom","spacing","errorText","color","fontSize","commonBtn","display","padding","backgroundColor","minWidth","border","textAlign","transition","boxShadow","General","props","className","userDetails","authToken","insideLoader","handleLoaderDeactive","rest","classes","isMd","breakpoints","up","defaultMatches","formState","setFormState","isValid","values","touched","errors","role","corporate","university","handleChange","event","persist","target","name","type","checked","value","handleSubmit","preventDefault","setLoader","data","password","response","FetchFromServer","USERDETAILSUPDATE","service","url","method","authenticate","undefined","isError","fire","icon","title","loader","hasError","field","propTypes","string"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Loader from 'components/common/Loader/loader';\r\nimport Toast from 'components/toaster';\r\nimport { ApiRoutes } from 'config';\r\nimport { ApiHelper } from 'helper';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport validate from 'validate.js';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst schema = {\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 120,\r\n      minimum:3\r\n    },\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 120,\r\n      minimum:3\r\n    },\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 300,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputTitle: {\r\n    fontWeight: 700,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  errorText:\r\n  {\r\n    color:'red',\r\n    fontSize:\"14px\"\r\n  },\r\n  commonBtn: {\r\n    display: \"inline-block\",\r\n    padding: \"7px 10px\",\r\n    backgroundColor: \"#5120FF\",\r\n    fontSize: 16,\r\n    minWidth: 200,\r\n    border: \"solid 1px #5120FF\",\r\n    textAlign: \"center\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n      color: \"#5120FF\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst General = (props) => { \r\n  const { className, userDetails, authToken, insideLoader,handleLoaderDeactive,...rest } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n  const [formState, setFormState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n  \r\n  useEffect(()=>\r\n  {\r\n    handleLoaderDeactive(\"general\")\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if (userDetails) {\r\n      setFormState((formState) => ({\r\n        ...formState,\r\n        values: {\r\n          firstName: userDetails.firstName,\r\n          lastName: userDetails.lastName,\r\n          email: userDetails.email,\r\n          role: userDetails.role,\r\n          corporate: userDetails.corporate,\r\n          university: userDetails.university,\r\n        },\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(formState.isValid) \r\n    {\r\n      setLoader(true)\r\n      const data = {\r\n        firstName: formState.values.firstName,\r\n        lastName: formState.values.lastName,\r\n        email: formState.values.email,\r\n        password: formState.values.password,\r\n      };\r\n      const response = await new ApiHelper().FetchFromServer(\r\n        ApiRoutes.USERDETAILSUPDATE.service,\r\n        ApiRoutes.USERDETAILSUPDATE.url,\r\n        ApiRoutes.USERDETAILSUPDATE.method,\r\n        ApiRoutes.USERDETAILSUPDATE.authenticate,\r\n        authToken,\r\n        undefined,\r\n        data\r\n      );\r\n      if (response && !response.isError) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: response.data.message,\r\n        });\r\n        setLoader(false)\r\n      } else {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: response.data.message,\r\n        });\r\n        setLoader(false)\r\n      }\r\n    }\r\n  };\r\n  const [loader,setLoader]=useState(false)\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n  return (\r\n  <>\r\n    { loader ? <Loader/> : null }\r\n    {\r\n      insideLoader ? \r\n      <div >\r\n        <Loader/>\r\n      </div> : null }\r\n    <div className={className} {...rest}>\r\n      <Grid container spacing={isMd ? 2 : 2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h6' color='textPrimary'>\r\n            Profile Settings\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography\r\n            variant='subtitle1'\r\n            color='textPrimary'\r\n            className={classes.inputTitle}\r\n          >\r\n            First Name\r\n          </Typography>\r\n          <TextField\r\n            placeholder='First name*'\r\n            label=''\r\n            variant='outlined'\r\n            size='medium'\r\n            fullWidth\r\n            name='firstName'\r\n            helpertext={\r\n              hasError(\"firstName\") ? formState.errors.firstName[0] : null\r\n            }\r\n            error={hasError(\"firstName\")}\r\n            onChange={handleChange}\r\n            type='firstName'\r\n            value={formState.values.firstName || \"\"}\r\n          />\r\n              {\r\n                hasError(\"firstName\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.firstName[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography\r\n            variant='subtitle1'\r\n            color='textPrimary'\r\n            className={classes.inputTitle}\r\n          >\r\n            Last Name\r\n          </Typography>\r\n          <TextField\r\n            placeholder='Last Name *'\r\n            label=''\r\n            variant='outlined'\r\n            size='medium'\r\n            fullWidth\r\n            name='lastName'\r\n            helpertext={\r\n              hasError(\"lastName\") ? formState.errors.lastName[0] : null\r\n            }\r\n            error={hasError(\"lastName\")}\r\n            onChange={handleChange}\r\n            type='lastName'\r\n            value={formState.values.lastName || \"\"}\r\n          />\r\n           {\r\n                hasError(\"lastName\") ?\r\n                  <span className={classes.errorText}>\r\n                    {formState.errors.lastName[0]}\r\n                  </span>\r\n                  :\r\n                  null\r\n              }\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography\r\n            variant='subtitle1'\r\n            color='textPrimary'\r\n            className={classes.inputTitle}\r\n          >\r\n            E-mail\r\n          </Typography>\r\n          <TextField\r\n            placeholder='Email'\r\n            label=''\r\n            variant='outlined'\r\n            size='medium'\r\n            fullWidth\r\n            disabled\r\n            name='email'\r\n            helpertext={\r\n              hasError(\"email\") ? formState.errors.email[0] : null\r\n            }\r\n            error={hasError(\"email\")}\r\n            onChange={handleChange}\r\n            type='email'\r\n            value={formState.values.email || \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography\r\n            variant='subtitle1'\r\n            color='textPrimary'\r\n            className={classes.inputTitle}\r\n          >\r\n            Role\r\n          </Typography>\r\n          <TextField\r\n            placeholder='Last Name *'\r\n            label=''\r\n            variant='outlined'\r\n            size='medium'\r\n            fullWidth\r\n            disabled\r\n            name='lastName'\r\n            helpertext={\r\n              hasError(\"lastName\") ? formState.errors.lastName[0] : null\r\n            }\r\n            error={hasError(\"lastName\")}\r\n            onChange={handleChange}\r\n            type='lastName'\r\n            value={formState.values.role || \"\"}\r\n          />\r\n        </Grid>\r\n        {formState.values.corporate || formState.values.university ? (\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography\r\n              variant='subtitle1'\r\n              color='textPrimary'\r\n              className={classes.inputTitle}\r\n            >\r\n              {formState.values.corporate ? \"Corporation\" : \"University\"}\r\n            </Typography>\r\n            <TextField\r\n              placeholder='Last Name *'\r\n              label=''\r\n              variant='outlined'\r\n              size='medium'\r\n              fullWidth\r\n              name='corporate'\r\n              disabled\r\n              type='corporate'\r\n              value={\r\n                formState.values.corporate\r\n                  ? formState.values.corporate\r\n                  : formState.values.university || \"\"\r\n              }\r\n            />\r\n          </Grid>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Grid item container justifyContent='flex-start' xs={12}>\r\n          <Button\r\n            variant='contained'\r\n            type='submit'\r\n            color='primary'\r\n            onClick={handleSubmit}\r\n            className={classes.commonBtn}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGeneral.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default General;\r\n"]},"metadata":{},"sourceType":"module"}